            How to build Tao Presentations
            ==============================

*** Windows 7, Windows Vista ***

Tao Presentations for Windows is built in the MinGW environment with the GCC
compiler. You need to have a number of software packages installed before you
can build Tao: the Qt SDK, MSYSGit, Python, LLVM, and optionally doxygen and
NSIS.
Here is a step-by-tep guide.

- Install the latest Qt SDK from http://qt.nokia.com.
  Select the "LGPL" download and install it. Keep the default options.
  Remember the installation directory, you will have to add it to your PATH.
  For instance C:\Qt\2010.05.

  In addition you can install the latest Qt Creator and Qt libraries (if
  they are more recent than the ones included in the full SDK, wich is often
  the case).

  a) Qt Creator is something like: qt-creator-win-opensource-2.3.0.exe
  b) The Qt libraries are distributed as: qt-win-opensource-4.7.4-mingw.exe
     When you install newer libraries and tools you need to update your PATH
     so that the libraries package (/c/Qt/4.7.4/bin) comes before the Qt SDK
     (see the export PATH line below in .profile).

- Install msysgit from http://code.google.com/p/msysgit/downloads/list
  You should pick the "Full installer (self-contained)" version to get a
  version of make. If the setup program installs by default in
  C:\Program files, then you picked the wrong version. The good one installs
  by default under C:\msysgit.

  At the end of the installation, a shell window opens automatically. Follow
  the instruction to create a shortcut on the desktop: type:
  $ /share/msysGit/add-shortcut.tcl Desktop

- Optional: install doxygen (to compile the Tao documentation).
  http://www.stack.nl/~dimitri/doxygen/download.html
  Then make sure the "doxygen" command is in your Windows PATH.

- Start the msysgit bash shell (use the desktop shortcut).
  cd $HOME. Create the file $HOME/.profile with the following line:

  export PATH=/c/llvm/bin:/c/Python27:/c/Qt/4.7.4/bin:/c/Qt/2010.05/mingw/bin:/c/Qt/2010.05/qt/bin:$PATH

  Note:
  * /c/llvm/bin is where you will install LLVM (see below). LLVM is required
  * /c/Python27 is where Python is installed by default. Python is required to
    build LLVM.
  * /c/Qt/2010.05/mingw/bin is the location of the GCC compiler we will use
    to build Tao Presentations.
  * /c/Qt/2010.05/qt/bin is for Tao Presentations to find the Qt DLLs
    (useful to start Tao directly from the command line).

- You can check if all is well Qt-wise with:
    $ qmake --version
    QMake version 2.01a
    Using Qt version 4.7.4 in C:\Qt\4.7.4\lib

- Download and install Python 2.7 from http://python.org/.

- Download LLVM:
  $ svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_29/final llvm_2.9

- Build and install LLVM:
  $ cd llvm_2.9
  $ ./configure --prefix=/c/llvm --enable-optimized
  $ make
  $ make -k install   # Note: doc installation fails but we don't care

- Get the Tao source code. Put it somewhere under your home directory.
  $ cd
  $ git clone ssh://nano.taodyne.com/~ddd/Work/tao.git
  If your windows user name is not the same as your login on nano.taodyne.com,
  you may need to give your login in the URL, or connection would be rejected:
    ssh://your_login@nano.taodyne.com/~ddd/Work/tao.git
  $ cd tao
  $ git submodule init
  If you had to give login in the nano URL above, you will also need to add
  it to the submodule URLs. In this case, edit the .git/config file and fix the
  URLs before proceeding.
  $ git submodule update

- Build Tao
  $ cd ~/tao
  $ qmake -r -spec win32-g++  # append 'CONFIG+=release' for a releas build
  $ make -j2 install  # will put the application under the "install" directory

- Optional: configure Qt Creator to build and run Tao from the Qt Creator IDE.
  This is not needed if you are OK with building from the command line.
  * Open main.pro
  * Update PATH (in Projects/Build Settings/Build Environment):
    prepend C:\llvm\bin;C:\msysgit\msysgit\bin;C:\msysgit\msysgit\mingw\lib
    With this PATH, Qt Creator will be able to find llvm-config, bash, git.
  * Change the default make specification to use:
    C:\msysgit\msysgit\mingw\bin\mingw32-make.exe
  * Set application and application current directory in
    Projects/Run Settings: the application is Tao.exe under the install
    directory. So, before you can run Tao you must execute the "install"
    target.

- Optional: install the Nullsoft Scriptable Install System (NSIS) from
  http://nsis.sourceforge.net/Download.
  Not needed if you don't want to create an installer (taosetup.exe).
  Once NSIS is installed you can build the installer with:
  $ cd packaging/win
  $ make kit

*** MacOSX ***

x86_64 build (64 bit)

  - Configure LLVM as follows:
    $ ./configure --enable-optimized  # will install in /usr/local
    $ make -j3
    $ sudo make install
  - Configure Tao as follows:
    $ export PATH=/usr/local/bin:$PATH
    $ qmake -r -spec macx-g++  # append 'CONFIG+=release' for release
    $ make -j3 install
    $ cd packaging/macosx
    $ make kit

x86 build (32 bit)

Configure and build LLVM as follows (will install in
~/work/inst/llvm, use a different path if you wish):
    $ ./configure --prefix=$HOME/work/inst/llvm \
        --enable-optimized \
        UNIVERSAL=1 \
        UNIVERSAL_ARCH="i386 x86_64" \
        UNIVERSAL_SDK_PATH=/Developer/SDKs/MacOSX10.5.sdk \
        DARWIN_VERSION=10.5
    $ make -j3 \
        UNIVERSAL=1 \
        UNIVERSAL_ARCH="i386 x86_64" \
        UNIVERSAL_SDK_PATH=/Developer/SDKs/MacOSX10.5.sdk \
        DARWIN_VERSION=10.5
    $ sudo make install \
        UNIVERSAL=1 \
        UNIVERSAL_ARCH="i386 x86_64" \
        UNIVERSAL_SDK_PATH=/Developer/SDKs/MacOSX10.5.sdk \
        DARWIN_VERSION=10.5
  - Configure and build Tao as follows:
    $ export PATH=~/work/inst/llvm/bin:$PATH
    $ qmake -r -spec macx-g++ CONFIG+=x86 # append 'CONFIG+=release' for release
    $ make -j3 install
    $ cd packaging/macosx
    $ make kit

Valgrind usage

Install valgrind (version > 3.6.0)
  $ sudo port install valgrind

Build Tao whiteout Git repository
  $ qmake -r DEFINES+=CFG_NOGIT 
  $ make -j3 install

Launch Tao with valgrind (it is very very slow)
  $ valgrind -q --tool=memcheck --suppressions=~/Work/tao/taoValgrindSupp.txt --dsymutil=yes  ~/Work/tao/install/Tao\ Presentations.app/Contents/MacOS/Tao\ Presentations

*** Linux ***

Prerequisites to build Tao: Qt 4.7.4, LLVM 2.9, libxss-dev.
We provide instructions for Ubuntu (11.04) but other distributions should work,
too.

 - You may install the full Qt distribution and libxss-dev with:
   $ sudo apt-get install qt-creator libxss-dev
   You still need to build LLVM from sources as explained below since version
   2.9 is not currently (August 2001) available pre-packaged.
   The full Qt distribution does not always include the latest Qt libraries, so
   you may want to get them separately and build them (see next point).
 - Building Qt 4.7.4 from sources (qt-everywhere-opensource-src-4.7.4.tar.gz)
   Make sure you have the following packages (they do not come with the
   default install of Ubuntu 11.04):
   $ sudo apt-get install libx11-dev libgstreamer0.10-dev libglib2.0-dev \
        libphonon-dev libfontconfig1-dev libxrender-dev
   Configure Qt with:
   $ ./configure --opensource
   $ make -j3
   $ sudo make install
 - Building LLVM from sources:
     $ svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_29/final llvm_2.9
     $ cd llvm_2.9
     $ ./configure --enable-optimized  # will install in /usr/local
     $ make -j3
     $ sudo make install
 - Configure and build Tao as follows:
   $ export PATH=/usr/local/bin:/usr/local/Trolltech/Qt-4.7.2/bin:$PATH
   $ qmake -r # append 'CONFIG+=release' for release
   $ make -j3 install
   $ cd packaging/linux
   $ make kit
