
// ****************************************************************************
//  Welcome.ddd                                                     Tao project
// ****************************************************************************
//
//   File Description:
//
//     Welcome screen.
//
//
//
//
//
//
//
//
// ****************************************************************************
//  (C) 2010-2011 Taodyne SAS
// ****************************************************************************

import Animate

// Avoid clipping
z_near 500

// ----------------------------------------------------------------------------
//   Global variables
// ----------------------------------------------------------------------------
Animated -> 1
cam_z -> camera_position at 3
bg_z -> -30000
bg_w -> 1920
bg_h -> 1080
bg_zscale -> 110% * (1.0 - bg_z / cam_z)
bg_sx -> bg_zscale * window_width / bg_w
bg_sy -> bg_zscale * window_height / bg_h
window_scale -> min (window_width / bg_w, window_height / bg_h)

// Logic to stop/start animation
Initial -> 1
key "Space" ->
    if Animated = 1 then
        anim false
    else
        anim true
anim On:boolean ->
    Initial := 0
    if On then
        enable_animations true
        Animated := 1
    else
        enable_animations false
        Animated := 0

page "Welcome",
    if page_time > 5 and Initial = 1 then
        anim false
        Initial := 0
    welcome_background
    locally
        text_box 450 * window_scale, 0, window_width, window_height,
            vertical_align_bottom
            font "Arial", 25 * window_scale
            align_center
            color "black"
            welcome_help tao_language
    scale window_scale, window_scale, window_scale
    locally
        color "white"
        translate 150, 150, 500
        image 0, 0, 25%, 25%, "welcome/Taodyne_Logo.svg"

    locally
        adjust t:real ->
            scale 0.3, 0.3, 0.3
            rotatey 33 * t
            rotatex 4 * t
            translate -2000 * t, 0, -8000 * t
            rotatex 7.5 * t

        locally
            color "white"
            adjust 0.5 
            image 0, 0, 150%, 150%, "welcome/MacBookPro.png"
            welcome_flow 40, 18, page_time

    text_box -500, -300, window_width, window_height,
        font "Ubuntu", 80, bold
        line_width 2
        align_center
        vertical_align_center
        color "#EEAA11"
        text "Tao Presentations"
        line_break

        font "Arial", 20, italic
        color "black"
        line_width 0
        text "Version " & tao_version
        line_break
        text "© Copyright 2010-2011 Taodyne SAS"

welcome_help T:text ->
// ----------------------------------------------------------------------------
//   Show the welcome help
// ----------------------------------------------------------------------------
    if T = "fr" then
        text "Appuyer sur la touche espace pour arrêter l'animation"
    else
        text "Press the spacebar to "
        if Animated = 1 then
            text "stop "
        else
            text "start "
        text "the animation"

welcome_background ->
// ----------------------------------------------------------------------------
//   Show the welcome backround
// ----------------------------------------------------------------------------
    locally
        translatez bg_z
        color "white"
        image 0.0, 0.0, bg_sx, bg_sy, "welcome/background.png"


welcome_flow Shown:integer, Displayed:integer, Time:real ->
// ----------------------------------------------------------------------------
//   Show the welcome flow
// ----------------------------------------------------------------------------
    ptime -> 0.013
    pcount -> 15
    pshown -> 35
    pdisplayed -> 35
    pup -> 3600
    picX N:integer -> 450 * picT N / pshown * sin (177.312 * picN N)
    picY N:integer -> 600 * picT N / pshown * cos (127.221 * picN N) + pup * (picT N) ^ 2 / pshown ^ 2
    picZ N:integer -> 30000 * picT N / pshown
    picA N:integer -> 10 * sin (picT N)
    picS N:integer -> 80% + 30% * sin (153.27 * picN N)
    picN N:integer -> N - integer ptime
    picT N:integer -> N + ptime mod 1

    pimg N:integer -> (picN N mod 15) + 1
    pname N:integer -> "welcome/picto_" & text (pimg N) & ".png"

    picto N:integer ->
        locally
            translate picX N, picY N, picZ N
            rotatez picA N
            image 0, 0, picS N, picS N, pname N

    ptime := Time
    pshown := Shown
    pdisplayed := Displayed
    locally
        color "white"
        rotatez picA 0
        image 0, 0, picS 0 * (ptime mod 1), picS 0 * (ptime mod 1), pname 0
    picto with 1 .. pdisplayed
