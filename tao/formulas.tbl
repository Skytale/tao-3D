// ****************************************************************************
//  formulas.tbl                                                    Tao project
// ****************************************************************************
//
//   File Description:
//
//     Functions and transforms allowed in formulas
//
//
//
//
//
//
//
//
// ****************************************************************************
// This document is released under the GNU General Public License.
// See http://www.gnu.org/copyleft/gpl.html and Matthew 25:22 for details
//  (C) 1992-2010 Christophe de Dinechin <christophe@taodyne.com>
//  (C) 2010 Jérôme Forissier <jerome@taodyne.com>
//  (C) 2010 Catherine Burvelle <cathy@taodyne.com>
//  (C) 2010 Lionel Schaffhauser <lionel@taodyne.com>
//  (C) 2010 Taodyne SAS
// ****************************************************************************

// Integer arithmetic and comparisons
INFIX(AddInt, integer,  integer,"+",integer,XL_RINT(XL_INT(l) + XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(SubInt, integer,  integer,"-",integer,XL_RINT(XL_INT(l) - XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(MulInt, integer,  integer,"*",integer,XL_RINT(XL_INT(l) * XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(DivInt, integer,  integer,"/",integer,XL_RINT(XL_INT(l) / XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(RemInt, integer,  integer,"rem",integer,XL_RINT(XL_INT(l) % XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(ModInt, integer,  integer,"mod",integer,XL_RINT(xl_mod(l, r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

INFIX(PowerInt,  integer,  integer, "^", integer,XL_RINT(xl_pow(l,r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(LShift,  integer,  integer,"<<",integer,XL_RINT(XL_INT(l) << XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

INFIX(RShift,  integer,  integer,">>",integer,XL_RINT(XL_INT(l) >> XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(And,  integer,  integer, "and", integer,XL_RINT(XL_INT(l) & XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(Or,  integer,  integer, "or", integer,XL_RINT(XL_INT(l) | XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

INFIX(Xor,  integer,  integer, "xor", integer,XL_RINT(XL_INT(l) ^ XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(LTInt,  boolean,  integer, "<", integer,XL_RBOOL(XL_INT(l) < XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(GTInt,  boolean,  integer, ">", integer,XL_RBOOL(XL_INT(l) > XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(LEInt,  boolean,  integer, "<=", integer,XL_RBOOL(XL_INT(l) <= XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(GEInt,  boolean,  integer, ">=", integer,XL_RBOOL(XL_INT(l) >= XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(NEInt,  boolean,  integer, "<>", integer,XL_RBOOL(XL_INT(l) != XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

INFIX(EQInt,  boolean,  integer, "=", integer,XL_RBOOL(XL_INT(l) == XL_INT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(NegateInt,  integer,  "-", 
    PARM(x, integer, )
, XL_RINT(-x), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

// Percents
PREFIX(BitwiseNotInt,  integer,  "not", 
    PARM(x, integer, )
, XL_RINT(~x), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
POSTFIX(PercentInt,  real, 
    PARM(x, integer, )
,  "%", XL_RREAL(x / 100.0), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

// Real arithmetic and comparisons
POSTFIX(PercentReal,  real, 
    PARM(x, real, )
,  "%", XL_RREAL(x / 100.0), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(AddReal,  real,  real, "+", real,XL_RREAL(XL_REAL(l) + XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(SubReal,  real,  real, "-", real,XL_RREAL(XL_REAL(l) - XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(MulReal,  real,  real, "*", real,XL_RREAL(XL_REAL(l) * XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(DivReal,  real,  real, "/", real,XL_RREAL(XL_REAL(l) / XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(RemReal,  real,  real, "rem", real,XL_RREAL(fmod(XL_REAL(l), XL_REAL(r))),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(ModReal,  real,  real, "mod", real,XL_RREAL(xl_modf(l,r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(PowRealInt,  real,  real, "^", integer,XL_RREAL(xl_powf(l,r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

INFIX(PowReal,  real,  real, "^", real,XL_RREAL(pow(XL_REAL(l), XL_REAL(r))),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(LTReal,  boolean,  real, "<", real,XL_RBOOL(XL_REAL(l) < XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(GTReal,  boolean,  real, ">", real,XL_RBOOL(XL_REAL(l) > XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(LEReal,  boolean,  real, "<=", real,XL_RBOOL(XL_REAL(l) <= XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(GEReal,  boolean,  real, ">=", real,XL_RBOOL(XL_REAL(l) >= XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(NEReal,  boolean,  real, "<>", real,XL_RBOOL(XL_REAL(l) != XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

INFIX(EQReal,  boolean,  real, "=", real,XL_RBOOL(XL_REAL(l) == XL_REAL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(Negate,  real,  "-", 
    PARM(r, real, )
, XL_RREAL(-r), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(Sin,  real,  "sin", 
    PARM(x, real, )
, XL_RREAL(sin(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(Cos,  real,  "cos", 
    PARM(x, real, )
, XL_RREAL(cos(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(Tan,  real,  "tan", 
    PARM(x, real, )
, XL_RREAL(tan(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(ArcSin,  real,  "asin", 
    PARM(x, real, )
, XL_RREAL(asin(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(ArcCos,  real,  "acos", 
    PARM(x, real, )
, XL_RREAL(acos(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(ArcTan,  real,  "atan", 
    PARM(x, real, )
, XL_RREAL(atan(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(ArcTan2,  real,  "atan", 
    PARM(y, real, )
    PARM(x, real, )
, XL_RREAL(atan2(y,x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(Exp,  real,  "exp", 
    PARM(x, real, )
, XL_RREAL(exp(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(ExpMinus1,  real,  "expm1", 
    PARM(x, real, )
, XL_RREAL(expm1(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(Log,  real,  "log", 
    PARM(x, real, )
, XL_RREAL(log(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(Log2,  real,  "log2", 
    PARM(x, real, )
, XL_RREAL(log2(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(Log10,  real,  "log10", 
    PARM(x, real, )
, XL_RREAL(log10(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(LogPlus1,  real,  "log1p", 
    PARM(x, real, )
, XL_RREAL(log1p(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

// Boolean operations
PREFIX(PiConstant,  real,  "pi", , XL_RREAL(M_PI), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(AndBool,  boolean,  boolean, "and", boolean,XL_RBOOL(XL_BOOL(l) & XL_BOOL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(OrBool,  boolean,  boolean, "or", boolean,XL_RBOOL(XL_BOOL(l) | XL_BOOL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(XorBool,  boolean,  boolean, "xor", boolean,XL_RBOOL(XL_BOOL(l) ^ XL_BOOL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

PREFIX(NotBool,  boolean,  "not", 
    PARM(x, boolean, )
, XL_RBOOL(!x), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(NEBool,  boolean,  boolean, "<>", boolean,XL_RBOOL(XL_BOOL(l) != XL_BOOL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

// Text operations
INFIX(EQBool,  boolean,  boolean, "=", boolean,XL_RBOOL(XL_BOOL(l) == XL_BOOL(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(TextConcatenate,  text,  text, "&", text,XL_RTEXT(XL_TEXT(l) + XL_TEXT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(LTText,  boolean,  text, "<", text,XL_RBOOL(XL_TEXT(l) < XL_TEXT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(GTText,  boolean,  text, ">", text,XL_RBOOL(XL_TEXT(l) > XL_TEXT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(LEText,  boolean,  text, "<=", text,XL_RBOOL(XL_TEXT(l) <= XL_TEXT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(GEText,  boolean,  text, ">=", text,XL_RBOOL(XL_TEXT(l) >= XL_TEXT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
INFIX(NEText,  boolean,  text, "<>", text,XL_RBOOL(XL_TEXT(l) != XL_TEXT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )


// Conversions
INFIX(EQText,  boolean,  text, "=", text,XL_RBOOL(XL_TEXT(l) == XL_TEXT(r)),
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(IntToReal,   real,  "real", 
    PARM(x, integer, )
, XL_RREAL((real_t) x), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TextToReal,  real,  "real", 
    PARM(x, text, )
, XL_RREAL(xl_text2real(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(RealToInt,  integer,  "integer", 
    PARM(x, real, )
, XL_RINT((integer_t) x), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TextToInt,  integer,  "integer", 
    PARM(x, text, )
, XL_RINT(xl_text2int(x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(IntToText,  text,  "text", 
    PARM(x, integer, )
, XL_RTEXT((text) x), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

// Time computations
PREFIX(RealToText,  text,  "text", 
    PARM(x, real, )
, XL_RTEXT((text) x), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TimeHours,  integer,  "hours", 
    PARM(t, integer, )
, XL_RTIME(tm.tm_hour), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TimeMinutes,  integer,  "minutes", 
    PARM(t, integer, )
, XL_RTIME(tm.tm_min), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TimeSeconds,  integer,  "seconds", 
    PARM(t, integer, )
, XL_RTIME(tm.tm_sec), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TimeYear,  integer,  "year", 
    PARM(t, integer, )
, XL_RTIME(tm.tm_year + 1900), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TimeMonth,  integer,  "month", 
    PARM(t, integer, )
, XL_RTIME(tm.tm_mon), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TimeMonthDay,  integer,  "day", 
    PARM(t, integer, )
, XL_RTIME(tm.tm_mday), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(TimeWeekDay,  integer,  "week_day", 
    PARM(t, integer, )
, XL_RTIME(tm.tm_wday), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

// Return hour, minutes, seconds for the current time
PREFIX(TimeYearDay,  integer,  "year_day", 
    PARM(t, integer, )
, XL_RTIME(tm.tm_yday), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(SystemTime,  integer,  "system_time", , XL_RINT(xl_time(1)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(SystemHours,  integer,  "hours", , XL_RCTIME(tm.tm_hour, 10), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(SystemMinutes,  integer,  "minutes", , XL_RCTIME(tm.tm_min, 2), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(SystemSeconds,  integer,  "seconds", , XL_RCTIME(tm.tm_sec, 0.5), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(SystemYear,  integer,  "year", , XL_RCTIME(tm.tm_year + 1900, 10), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(SystemMonth,  integer,  "month", , XL_RCTIME(tm.tm_mon, 10), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(SystemMonthDay,  integer,  "day", , XL_RCTIME(tm.tm_mday, 10), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(SystemWeekDay,  integer,  "week_day", , XL_RCTIME(tm.tm_wday, 10), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

// Random number generator
PREFIX(SystemYearDay,  integer,  "year_day", , XL_RCTIME(tm.tm_yday, 10), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(RandomNumber,  real,  "random", , XL_RREAL(xl_random(0.0, 1.0)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(RandomNumber2,  real,  "random", 
    PARM(low, real, )
    PARM(high, real, )
, XL_RREAL(xl_random(XL_REAL(low), XL_REAL(high))), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

NAME(true);
NAME(false);

TYPE(boolean);
TYPE(integer);
TYPE(real);
TYPE(text);
TYPE(character);


// ============================================================================
//
//    From graphics.tbl
//
// ============================================================================

PREFIX(RandomNumber2i,  integer,  "random", 
    PARM(low,integer, )
    PARM(high,integer, )
, XL_RINT(xl_random(XL_INT(low), XL_INT(high))), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(PageLabel,    text,      "page_label", , RTAO(pageLabel(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(PageId,       integer,   "page_number", , RTAO(pageNumber(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(PageCount,    integer,   "page_count", , RTAO(pageCount(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(PageWidth,    real,      "page_width", , RTAO(pageWidth(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(PageHeight,   real,      "page_height", , RTAO(pageHeight(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(FrameWidth,   real,      "frame_width", , RTAO(frameWidth(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(FrameHeight,  real,      "frame_height", , RTAO(frameHeight(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(FrameDepth,   real,      "frame_depth", , RTAO(frameDepth(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(WindowWidth,  real,      "window_width", , RTAO(windowWidth(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(WindowHeight, real,      "window_height", , RTAO(windowHeight(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(DaySeconds,   real,      "time", , RTAO(time(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )


// ============================================================================
//
//   Error management
//
// ============================================================================

PREFIX(PageSeconds,  real,      "page_time", , RTAO(pageTime(self)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(ErrorMessage,  tree,  "error", 
    PARM(m, text, )
    PARM(s, tree, )
, return Tao::Widget::formulaRuntimeError(self, m, &s), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

PREFIX(ErrorMessage0,  tree,  "error", 
    PARM(m, text, )
, return Tao::Widget::formulaRuntimeError(self, m, NULL), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
PREFIX(ErrorMessageM,  tree,  "error_message_box", 
    PARM(m, text, )
    PARM(s, tree, )
, RTAO(runtimeError(self, m, &s)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )



// ============================================================================
//
//   Unit conversions
//
// ============================================================================

PREFIX(ErrorMessageM0,  tree,  "error_message_box", 
    PARM(m, text, )
, RTAO(runtimeError(self, m, NULL)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
POSTFIX(FromCm,    real, 
    PARM(x, real, )
,  "cm", RTAO(fromCm(self, x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
POSTFIX(FromMm,    real, 
    PARM(x, real, )
,  "mm", RTAO(fromMm(self, x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
POSTFIX(FromInch,  real, 
    PARM(x, real, )
,  "inch", RTAO(fromIn(self, x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
POSTFIX(FromPt,    real, 
    PARM(x, real, )
,  "pt", RTAO(fromPt(self, x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )

POSTFIX(FromPx,    real, 
    PARM(x, real, )
,  "px", RTAO(fromPx(self, x)), 
    DOC_GROUP(formula),
    DOC_SYNOPSIS(""),
    DOC_DESCRIPTION(""),, )
