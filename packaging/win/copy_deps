#!/bin/bash
#
# Copy Tao dependencies into build_root:
#   - DLLs (Qt, msys)
#   - Git

LIBDIR_QT="$(echo $1 | sed 's@\\@/@g' | sed 's@C:@/c/@g')"

doo() {
  echo $*
  eval $*
}

THISDIR=`dirname $0`

#
# Copy DLLs required by Tao into build_root/
#

cp_deps() {
for f in `bin/ldd $1 | \
          grep -v -i 'build_root' | \
          grep -v -i 'windows/sys' | \
          grep -v -i 'ntdll.dll' | \
          grep -v -i 'comctl' | \
          sed 's/^.*=> \\(.*\\)(0x.*)$/\\1/' | \
          sed 's@/cygdrive@@'` ; 
do 
    doo cp $f build_root/
done

}

(
cd $THISDIR
export PATH=$PATH:.
cp_deps build_root/Tao.exe
cp_deps build_root/assistant.exe
doo cp "${LIBDIR_QT}/../bin/QtXml4.dll" build_root/

doo cp -r "${LIBDIR_QT}"/../plugins/* build_root/
)


#
# Uncompress Git distribution into build_root/
#

GITKIT=PortableGit-1.7.8-preview20111206.7z
GITURL=http://msysgit.googlecode.com/files/$GITKIT
function git_file_ok() {
  [ ! -e 3rdparty/$GITKIT ] && return 1
  echo "da2b5ce454f41782f012936119823876 *3rdparty/$GITKIT" | md5sum --check >/dev/null
}
downloaded=0
while ! git_file_ok ; do
  [ $downloaded -eq 1 ] && { echo "Downloaded file is invalid!" ; exit 1 ; }
  echo "Downloading $GITURL..."
  mkdir -p 3rdparty
  (
    cd 3rdparty
    curl $GITURL -o $GITKIT
  )
  downloaded=$((downloaded + 1))
done
(
cd $THISDIR
mkdir -p build_root/git
cd build_root/git
../../bin/7z -y x -bd ../../3rdparty/$GITKIT
)
