#!/bin/bash
#
# Copy Tao dependencies into build_root:
#   - DLLs (Qt, msys)
#   - Git

LIBDIR_QT="$(echo $1 | sed 's@\\@/@g' | sed 's@C:@/c/@g')"

doo() {
  echo $*
  eval $*
}

THISDIR=`dirname $0`

#
# Copy DLLs required by Tao into build_root/
#

cp_deps() {
for f in `bin/ldd $1 | \
          grep -v -i 'build_root' | \
          grep -v -i 'windows/sys' | \
          grep -v -i 'ntdll.dll' | \
          grep -v -i 'comctl' | \
          sed 's/^.*=> \\(.*\\)(0x.*)$/\\1/' | \
          sed 's@/cygdrive@@'` ; 
do 
    doo cp $f build_root/
done

}

(
cd $THISDIR
export PATH=$PATH:.
cp_deps build_root/Tao.exe
cp_deps build_root/assistant.exe
doo cp "${LIBDIR_QT}/../bin/QtXml4.dll" build_root/

doo cp -r "${LIBDIR_QT}"/../plugins/* build_root/
)


#
# Uncompress Git distribution into build_root/
#

if [ -z "$PACKAGE_NOGIT" ] ; then

GITKIT=PortableGit-1.7.8-preview20111206.7z
GITURL=http://msysgit.googlecode.com/files/$GITKIT
function git_file_ok() {
  [ ! -e 3rdparty/$GITKIT ] && return 1
  echo "da2b5ce454f41782f012936119823876 *3rdparty/$GITKIT" | md5sum --check >/dev/null
}
downloaded=0
while ! git_file_ok ; do
  [ $downloaded -eq 1 ] && { echo "Downloaded file is invalid!" ; exit 1 ; }
  echo "Downloading $GITURL..."
  mkdir -p 3rdparty
  (
    cd 3rdparty
    curl $GITURL -o $GITKIT
  )
  downloaded=$((downloaded + 1))
done
(
cd $THISDIR
mkdir -p build_root/git
cd build_root/git
../../bin/7z -y x -bd ../../3rdparty/$GITKIT

# The git-*.exe commands are supposed to be links to git.exe. With PortableGit they're copies.
# That's a lot of wasted disk space. Since they are for backward compatibility only, we can
# safely get rid of them.
doo rm -f libexec/git-core/git-*.exe
# Many other files are not used. Remove the biggest if we're pretty sure they're not needed by git.exe
cat <<_EOF_ | { IFS=$(echo -en "\n\b") ; while read f ; do echo rm -rf ./$f ; rm -rf ./$f ; done }
cmd
doc
git-cheetah
Git Bash.vbs
git-bash.bat
git-cmd.bat
README.portable
ReleaseNotes.rtf
bin/wish.exe
bin/wish85.exe
bin/pdfinfo.exe
bin/pdftotext.exe
bin/libpoppler-7.dll
bin/flex.exe
bin/bison.exe
bin/tclsh.exe
bin/tclsh85.exe
bin/tcl85.dll
bin/tclpip85.dll
bin/tk85.dll
bin/wish.exe
bin/wish85.exe
bin/openssl.exe
bin/tar.exe
bin/sed.exe
bin/rxvt.exe
bin/libW11.dll
bin/bash.exe
bin/sh.exe
bin/gpgv.exe
bin/m4.exe
bin/unzip.exe
bin/gawk.exe
share/antiword
share/bison
share/git-gui
share/gitk
share/gitweb
share/vim
lib/tcl85.lib
lib/tclConfig.sh
lib/tclstub85.lib
lib/tk85.lib
lib/tkConfig.sh
lib/tkstub85.lib
lib/tcl8
lib/tcl8.5
lib/tk8.5
lib/reg1.2
lib/dde1.3
_EOF_
)
fi # -z $PACKAGE_NOGIT
