# Makefile to build a MacOSX installer (.dmg)
#
# The application is distributed as a disk image (.dmg) which
# contains an application bundle (Tao Presentations.app) with:
#   - The Tao exectuables
#   - The Qt libraries, distributed as Frameworks
#   - Git binaries (downloaded and built by this Makefile)
#   - Standard Tao modules
#   - All the files loaded by Tao at runtime (XL definitions,
#     fonts, etc.)
#
# To build the package, this Makefile goes through the following
# steps:
#   - run "make install" at the top level of the Tao project
#   - copy the installation directory under ./build_root
#   - run deployqt on ./build_root to import Qt frameworks
#   - download and build git under ./git_build
#   - install git under ./build_root
#   - create the DMG from ./buid_root
#
# HOW TO CHANGE THE APPEARANCE OF THE DISK IMAGE IN FINDER
#
# The template/ folder serves (guess what?) as a template for the
# final disk image. Its content is copied into build_root/ before
# building the disk image (dot_DS_Store is renamed .DS_Store).
#
# - To change the icon of the disk image, replace
# template/.VolumIcon.icns and follow the steps below (new
# dot_DS_store).
# - The appearance of the Finder window (icon position, size, window
# size...) is controled by the file build_root/.DS_Store (copied from
# template/dot_DS_Store).
# Unfortunately, simply changing these settings through the Finder
# "Show View Options" does not work. It has to be done inside a
# mounted disk image. Therefore, here is how to change this file:
#
# $ make kit K=1
# $ open tmp.dmg
# Edit appearance through the Finder's "Show View Options", and eject
# the disk image to flush file buffers
# $ open tmp.dmg
# $ cp -fp /Volumes/Tao\ Presentations/.DS_Store template/dot_DS_Store
# Eject tmp.dmg again, then run "make clean.dmg ; make" to build the
# final disk image.
#
# Usage:
#   make kit
#   make prepare    # Prepare application in build_root for .dmg creation
#   make clean      # Won't remove Git source package
#   make veryclean  # Will remove Git source

GIT_VERSION=1.7.2.2

########

include Makefile.config

# Warning: GIT_DESTDIR can't contain spaces
GIT_DESTDIR=$(shell pwd)/git_build/install
GIT_DEST=$(shell pwd)/build_root/Tao Presentations.app/Contents/MacOS/git
define git-makeparms
NO_DARWIN_PORTS=1 prefix=/usr/local DESTDIR=$(GIT_DESTDIR)
endef

kit: tao.dmg

tao.dmg: tmp.dmg
	rm -f $@
	hdiutil convert -format UDBZ -o $@ tmp.dmg
	[ "$(K)" ] || rm -f tmp.dmg

prepare: .tao_install_ts .git_install_ts .cp_template_ts

# Note: blue arrow in DMG_image.{svg,png} is taken from http://www.clker.com/clipart-12263.html
tmp.dmg: prepare
	hdiutil create tmp.dmg -fs HFSX -format UDRW -srcfolder build_root -volname "Tao Presentations"
	hdiutil attach tmp.dmg
	SetFile -a C "/Volumes/Tao Presentations"
	hdiutil detach "/Volumes/Tao Presentations"

clean: clean.git clean.tao clean.dmg

veryclean: clean veryclean.git

clean.dmg: clean.cp_template
	rm -f tao.dmg tmp.dmg

########

.cp_template_ts:
	ditto template build_root
	mv build_root/dot_DS_Store build_root/.DS_Store
	ln -s /Applications build_root
	touch $@

clean.cp_template:
	rm -f .cp_template_ts

########

.tao_install_ts: .tao_install_prog_ts .tao_install_deps_ts

clean.tao_install: clean.tao_install_prog clean.tao_install_deps
	rm -f .tao_install_ts

########

.tao_install_deps_ts: .tao_install_prog_ts
	./deployqt "build_root/Tao Presentations.app" "$(QMAKE_LIBDIR_QT)"

clean.tao_install_deps:
	rm -f .tao_install_deps_ts

########

.tao_install_prog_ts:
	mkdir -p build_root
	cd ../.. && $(MAKE) install
	cp -Rp $(INSTROOT)/* build_root

clean.tao_install_prog:
	rm -rf "build_root/Tao Presentations".app
	rm -f .tao_install_prog_ts

########

clean.tao: clean.tao_install
	rm -rf build_root

########

.git_install_ts: .git_build_ts
	$(MAKE) -C git_build/git-$(GIT_VERSION) $(git-makeparms) install
	rm -rf $(GIT_DEST) ; mkdir -p "$(GIT_DEST)"
	mv $(GIT_DESTDIR)/usr/local/* "$(GIT_DEST)"
	touch $@

clean.git_install:
	rm -rf $(GIT_DESTDIR) "$(GIT_DEST)"
	rm -f .git_install_ts

########

.git_build_ts: .git_extract_ts
	$(MAKE) -C git_build/git-$(GIT_VERSION) $(git-makeparms)
	$(MAKE) -C git_build/git-$(GIT_VERSION) $(git-makeparms) strip
	touch .git_build_ts

clean.git_build:
	rm -f .git_build_ts

########

.git_extract_ts: .git_download_ts
	[ -d git_build/git-$(GIT_VERSION) ] || ( cd git_build ; tar jxf git-$(GIT_VERSION).tar.bz2 )
	touch $@

clean.git_extract:
	rm -rf git_build/git-$(GIT_VERSION)
	rm -f .git_extract_ts

########

.git_download_ts:
	[ -d git_build ] || mkdir -p git_build
	[ -f git_build/git-$(GIT_VERSION).tar.bz2 ] || ( cd git_build ; curl -O http://kernel.org/pub/software/scm/git/git-$(GIT_VERSION).tar.bz2 )
	touch $@

clean.git_download:
	rm -rf git_build/git-$(GIT_VERSION).tar.bz2
	rm -f .git_download_ts

########

clean.git: clean.git_extract clean.git_build clean.git_install

veryclean.git: clean.git clean.git_download

