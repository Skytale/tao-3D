Here are the steps to create a new (official) release of Tao Presentations

Once:

- Make sure the code is up-to-date (git pull, git submodule update, git status).
- See if the version of some modules needs updating. To get the list of modules
  that have changed since the last public release (for example, 1.01):
  $ git log --stat 1.01..HEAD modules
  If some modules changed, increment their version number (typically in
  modulename/modulename.xl and modulename/doc/Doxyfile.in).
- Configure for internal build
  $ ./configure
- Make sure Qt translations are up-to-date
  $ cd tao
  $ make lupdate
  Look at the output of lupdate, and edit tao_fr.ts as needed.
  ** Warning: make sure you gave no edition name to the configure script, or
  some code will be #ifdef'ed out and some translations will be marked obsolete.
  After editing tao_fr.ts:
  $ make lrelease
  Commit your translations (both tao_fr.ts AND tao_fr.qm need to be committed).
  Do the same for all modules that have *.ts files.
- Make sure tao.xl translations are up-to-date
  $ ./extract_tr.pl -ref tao_fr.xl tao.xl
  If the command returns nothing, there is nothing to do, otherwise append
  translations to tao_fr.xl, and commit.
- There is no easy way to make sure other translations (e.g., module/template
  descriptions) are up-to-date :(

On all platforms:

- Create a temporary tag (visible on splash screen), for instance:
  $ git tag 1.0-beta5
- Build Tao and make packages (all editions).
  $ ./build_all.sh
- Do an internal build (run configure with no edition name). Thus you get all
  the modules and templates to put on the web site, and you also get temporary
  licenses for testing.
  $ make distclean
  $ ./configure
  $ make -j3 install

Once:

- Create an annotated tag with the MD5 hash of all kits.
  Take inspiration from 'git show 1.0-beta4' for instance. 
  $ git tag -a 1.0-beta5
