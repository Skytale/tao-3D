Here are the steps to create a new (official) release of Tao Presentations

1) BUILDING

Once:

- Make sure the code is up-to-date (git pull, git submodule update, git status).
- Update version.pri if needed.
- See if the version of some modules needs updating. To get the list of modules
  that have changed since the last public release (for example, 1.01):
  $ cd modules ; ./check_changes.sh 1.01
  If some modules changed, increment their version number (typically in
  modulename/modulename.xl, modulename/doc/Doxyfile.in but also where the module
  checks for licenses: grep for hasLicense, checkLicense, checkImpressOrLicense,
  check_license, check_impress_or_license).
- Configure for full build (no part of the code #idef'ed out):
  $ ./configure --with-eula
- Make sure Qt translations are up-to-date
  $ cd tao
  $ make lupdate
  Look at the output of lupdate, and edit tao_fr.ts as needed.
  ** Warning: make sure you gave no edition name to the configure script, or
  some code will be #ifdef'ed out and some translations will be marked obsolete.
  After editing tao_fr.ts:
  $ make lrelease
  Commit your translations (both tao_fr.ts AND tao_fr.qm need to be committed).
  Do the same for all modules that have *.ts files.
- Make sure tao.xl translations are up-to-date
  $ ./extract_tr.pl -ref tao_fr.xl tao.xl
  If the command returns nothing, there is nothing to do, otherwise append
  translations to tao_fr.xl, and commit.
- There is no easy way to make sure other translations (e.g., module/template
  descriptions) are up-to-date :(

On all platforms:

- Create a temporary tag (visible on splash screen), for instance:
  $ git tag 1.0-beta5
- Build Tao and make packages (all editions).
  $ ./build_all.sh
- If some modules that are not packaged with Tao have been modified since the
  last build (currently: Alioscopy, 2D-plus-Depth and Tridelity display modules),
  build them:
  $ ./configure modules+=+display_alioscopy modules+=+display_2dplusdepth \
                modules+=+display_tridelity
  $ make -j3 install

Once:

- Build the Tao documentation for the web site:
  $ ./make_doc_tarball.sh
- Create an annotated tag with the MD5 hash of all kits.
  Take inspiration from 'git show 1.0-beta4' for instance. 
  $ git tag -a 1.0-beta5


2) PUBLISHING

- Upload Discovery files to http://ge.tt/ (login is contact@taodyne.com).
  Take note of the ID of each file,
    * Each file is assigned a URL like http://ge.tt/9Jf9pEH that opens a web
      page where the file can be downloaded (there is also a direct link
      available by clicking on "Download"). In this exemple the file ID is
      "9Jf9pEH".
- Edit the product comparison page in the PrestaShop CMS backend (Tools/CMS,
  products/compare). Use the HTML editor. Search for "/dl/".
  The URLs to be used for each Tao Discovery download is:
    http://www.taodyne.com/dl/g/<file_id>
  ...for instance: http://www/taodyne.com/dl/g/9Jf9pEH
    * There is a rewrite rule in /var/www/.htaccess that redirects
      to http://ge.tt.
- Upload ALL Tao packages to www.taodyne.com:
    scp Tao* taodyne@www.taodyne.com:git/software
  Update the Git repositories used by "Check for update":
    * Use the helper script:
      cd git/software
      ./newversion.sh
- Create symlinks for the new version in /var/www/shop/download
    * There is a helper script, update_links.sh.
- Update the download URLs in the PrestaShop product pages (under
  modules/Other modules/Multidéclinaison téléchargeable, Configure, top right
  icon).
- Update the product version in the product pages for Discovery, Creativity,
  Impress.
- Delete the old symlinks in /var/www/shop/download.
- Update documentation:
  scp taodoc*.tar.bz2 www-data@www.taodyne.com:/var/www/docs
  Extract the file, it will create taodoc-*/{modules,help}.
  Replace /var/www/docs/{modules,help} with the new ones.
- Updload the modules that have been modified, update the repositories
  under git/modules.
