#!/bin/sh

usage() {
  (
  echo "Usage: configure [options] [edition name] [QMake options]"
  echo ""
  echo "Runs QMake to configure the build environment for some pre-defined"
  echo "configurations of Tao Presentations. configure will:"
  echo ""
  echo "  - Select build options (enabling or disabling some features in the program)"
  echo "  - Select which modules will be built and packaged"
  echo "  - Select which templates will be included"
  echo "  - Define some variables related to license generation and checking"
  echo ""
  echo "Please look at the QMake 'Project MESSAGE' output for detailed information on"
  echo "what will be included in the build."
  echo ""
  echo "Options:"
  echo ""
  echo "  --debug         Build in debug mode (default is release)"
  echo "  --with-lic      Generate temporary (120-days) license for the application."
  echo "                    o If edition name is empty or 'discovery', this option does"
  echo "                      not apply (will give an error). Otherwise it will create"
  echo "                      a temporary license for the specified Tao edition (but not"
  echo "                      for modules)."
  echo "                    o If edition name is 'creativity', 'impress' or 'internal', "
  echo "                      this option is implicitely enabled."
  echo "  --with-modlic   Generate temporary (120-days) licenses for modules. This is the"
  echo "                  default when edition name is 'internal'."
  echo "  --silent        Ignored."
  echo "  --verbose       Show all commands spawned by make (do not add CONFIG+=silent)."
  echo "  --disable-doc   Do not build documentation."
  echo "  --with-eula     Enable the End-User License Agreement dialog (REQUIRED for"
  echo "                  official builds)"
  echo ""
  echo "Edition Name:"
  echo ""
  echo "  discovery"
  echo "  creativity"
  echo "  impress"
  echo "  <empty>     Configure for the unified edition of Tao Presentations, that is: "
  echo "              Discovery + Creativity + Impress."
  echo "              Edition is determined at run time, depending on the available licenses:"
  echo "                - 'Tao Presentations Impress <version>'    => Impress"
  echo "                - 'Tao Presentations Creativity <version>' => Creativity"
  echo "                - none of the above                        => Discovery"
  echo "              All default modules except autostereoscopic displays are built and"
  echo "              packaged, with no license. No application license is bundled."
  echo "              If edition name is 'creativity' or 'impress',"
  echo "              a 2-month license is generated for this edition (useful for testing)."
  echo "              ** Discovery is an evaluation/demo version."
  echo "                - It shows a watermark after 10 minutes."
  echo "                - It shows a 'Buy' reminder on exit."
  echo "                - Many modules require a license and will thus show a warning and stop"
  echo "                  working normally after 5 minutes."
  echo "              ** Creativity is the intermediate version. No watermark, no 'Buy' reminder"
  echo "                 but modules are still limited."
  echo "              ** Impress allows many modules to work without explicit license."
  echo "  youactive   Configure for Tao Presentations YouActive. Same as Creativity, but"
  echo "              includes additional modules used in the YouActive solution (DIP)."
  echo "              - All default modules (except autostereoscopic displays), as well as"
  echo "                YouActive-specific modules are built and packaged, with no license."
  echo "              - Application license template is packaged (not signed):"
  echo "                'Tao Presentations YouActive <version>.*'"
  echo "  internal    Configure for an internal build with most features enabled (including"
  echo "              the less stable ones, not shipped with official Tao editions)".
  echo "              - All default modules are built and packaged, with 120-day licenses."
  echo "              - Application license is valid for 120 days:"
  echo "                'Tao Presentations Internal <version>.*'"
  echo ""
  echo "QMake options:"
  echo ""
  echo "  Any other option is passed unmodified to Qmake, after the options added by"
  echo "  this configure script."
  echo ""
  echo "Examples:"
  echo ""
  echo "  ./configure"
  echo "              Configure for the Discovery + Creativity + Impress unified build, in"
  echo "              release mode. './configure discovery' is equivalent."
  echo "  ./configure creativity"
  echo "              Unified build with test license enabling Creativity."
  echo "  ./configure --debug impress"
  echo "              Unified build with test license enabling Impress (debug build)."
  echo "  ./configure modules+=+some_module"
  echo "              Add module some_module to the modules normally selected"
  echo "              for the unified edition. Note the two + signs, before and after"
  echo "              the = sign. The first one means: append to the 'modules'"
  echo "              variable, do not overwrite it. As a result the module selected"
  echo "              for the unified edition are in effect and simply modified by the"
  echo "              option. The second + sign is processed by module_list.pri, see"
  echo "              this file for details."
  echo "  ./configure CONFIG+=x86"
  echo "              Configure for a 32-bit release build on MacOSX (default is 64-bit)"
  ) >&2
  exit 0
}

FLAGS="CONFIG+=release CONFIG+=silent"

done=
while [ $# -ne 0 ] ; do
  case "$1" in
    -h|--help)
      usage
      ;;
    --debug)
      FLAGS="$FLAGS CONFIG-=release"
      shift
      ;;
    --with-lic*)
      with_lic=1
      shift
      ;;
    --with-modlic*)
      with_modlic=1
      FLAGS="$FLAGS SIGN_MODULE_LICENSES=1"
      shift
      ;;
    --silent)
      shift
      ;;
    --verbose)
      FLAGS="$FLAGS CONFIG-=silent"
      shift
      ;;
    --disable-doc)
      FLAGS="$FLAGS DISABLE_DOC=1"
      shift
      ;;
    --with-eula)
      FLAGS="$FLAGS DEFINES+=CFG_WITH_EULA"
      shift
      ;;
    discovery)
      EDITION="Discovery"
      FLAGS="$FLAGS DEFINES+=CFG_EVALUATION_WATERMARK_TIME=600" # seconds
      shift ; done=1
      ;;
    creativity)
      EDITION="Creativity"
      with_lic=1
      shift ; done=1
      ;;
    impress)
      EDITION="Impress"
      with_lic=1
      shift ; done=1
      ;;
    youactive)
      EDITION="YouActive"
      FLAGS="$FLAGS modules+=+DIP"
      shift ; done=1
      ;;
    internal)
      EDITION="Internal"
      with_lic=1
      shift ; done=1
      ;;
    *)
      done=1
      ;;
  esac
  [ "$done" ] && break
done

# Process what was given

if [ -z "$EDITION" -a "$with_lic" ] ; then
  echo "Error: edition name is required for --with-lic" >&2
  exit 1
fi

[ "$with_lic" -o "$with_modlic" ] && FLAGS="$FLAGS LICENSE_VALIDITY=120"

# Make the edition string available to project files:
# - Set SIGN_APP_LICENSE to the edition name to generate a license
# - Set TAO_EDITION to empty for unified build, edition name otherwise
if [ "$EDITION" ] ; then
  case "$EDITION" in
    Discovery|Creativity|Impress)
      ;;
    *)
      FLAGS="$FLAGS TAO_EDITION=$EDITION"
      ;;
  esac
  if [ "$with_lic" ] ; then
    FLAGS="$FLAGS SIGN_APP_LICENSE=$EDITION"
  fi
fi

if [ "$EDITION" = "Internal" ] ; then
  :
else
  FLAGS="$FLAGS DEFINES+=CFG_NOGIT modules+=-display_alioscopy modules+=-display_2dplusdepth modules+=-display_tridelity"
fi

# Default QMake flags for each OS
osflags() {
  UNAME=`uname`
  case "$UNAME" in
    Darwin)
      echo "-spec macx-g++ "
      ;;
    MINGW*)
      echo "-spec win32-g++"
      ;;
    Linux*)
      ;;
  esac
}



echo Running: qmake -r `osflags` $FLAGS "$@"
qmake -r `osflags` $FLAGS "$@"
