#!/bin/sh

usage() {
  (
  echo "Usage: configure [options] [edition name] [QMake options]"
  echo ""
  echo "Runs QMake to configure the build environment for some pre-defined"
  echo "configurations of Tao Presentations. configure will:"
  echo ""
  echo "  - Select build options (enabling or disabling some features in the program)"
  echo "  - Select which modules will be built and packaged"
  echo "  - Select which templates will be included"
  echo "  - Define TAO_EDITION. Edition is shown on the splash screen and in the"
  echo "    about box. It also has an impact on licence generation and verification."
  echo ""
  echo "Please look at the QMake 'Project MESSAGE' output for detailed information on"
  echo "what will be included in the build."
  echo ""
  echo "Options:"
  echo ""
  echo "  --debug         Build in debug mode (default is release)"
  echo "  --with-licence  For editions that normally contain no licence: force "
  echo "                  generation of a valid 120-day licence. "
  echo "  --silent        Add qmake option CONFIG+=silent (produce less verbose output)."
  echo "  --disable-doc   Do not build documentation."
  echo "  --with-eula     Enable the End-User License Agreement dialog (REQUIRED for "
  echo "                  official builds)"
  echo ""
  echo "Edition Name:"
  echo ""
  echo "  discovery   Configure for Tao Presentations Discovery."
  echo "              This is an evaluation/demo version."
  echo "              - All default modules (except autostereoscopic displays) are built and"
  echo "                packaged, with no license."
  echo "              - Application license is generated:"
  echo "                'Tao Presentations Discovery <version>.*', no expiration date."
  echo "              - Some application features are disabled."
  echo "              - User can buy and install licenses for module already included,"
  echo "                or download additional ones."
  echo "  creativity"
  echo "  impress     Configure for Tao Presentations Creativity or Impress, respectively."
  echo "              - All default modules (except autostereoscopic displays) are built and"
  echo "                packaged, with no license."
  echo "              - Application license template is packaged (not signed):"
  echo "                'Tao Presentations Creativity <version>.*' or"
  echo "                'Tao Presentations Impress <version>.*'"
  echo "              - Creativity and Impress are the same except for the name and"
  echo "                license string. The web store will bundle some module licenses "
  echo "                with the application (one bundle for Creativity, one for Impress)."
  echo "  <empty>     Configure for an internal build."
  echo "              Replicates our 'beta' build:"
  echo "              - All default modules are built and packaged, with 120-day licenses."
  echo "              - Application license is valid for 120 days:"
  echo "                'Tao Presentations <version>.*'"
  echo ""
  echo "QMake options:"
  echo ""
  echo "  Any other option is passed unmodified to Qmake, after the options added by"
  echo "  this configure script."
  echo ""
  echo "Examples:"
  echo ""
  echo "  ./configure --debug"
  echo "              Configure for an internal build (= same as Tao beta), debug mode"
  echo "  ./configure impress"
  echo "              Configure for Impress edition, release mode"
  echo "  ./configure --debug discovery"
  echo "              Configure for Discovery edition, debug mode"
  echo "  ./configure discovery modules+=+some_module"
  echo "              Add module some_module to the modules normally selected"
  echo "              for the Discovery edition. Note the two + signs, before and after"
  echo "              the = sign. The first one means: append to the 'modules'"
  echo "              variable, do not overwrite it. As a result the module selected"
  echo "              for the Discovery edition are in effect and simply modified by the"
  echo "              option. The second + sign is processed by module_list.pri, see "
  echo "              this file for details."
  echo "  ./configure impress CONFIG+=x86"
  echo "              Configure for a 32-bit release build on MacOSX (default is64-bit)"
  ) >&2
  exit 0
}

EDITION_FLAGS=
DEBUG_FLAGS="CONFIG+=release"

done=
while [ $# -ne 0 ] ; do
  case "$1" in
    -h|--help)
      usage
      ;;
    --debug)
      DEBUG_FLAGS="CONFIG-=release"
      shift
      ;;
    --with-lic*)
      LICENSE_FLAGS="LICENSE_VALIDITY=120"
      shift
      ;;
    --silent)
      SILENT_FLAGS="CONFIG+=silent"
      shift
      ;;
    --disable-doc)
      PARM="$PARM DISABLE_DOC=1"
      shift
      ;;
    --with-eula)
      PARM="$PARM DEFINES+=CFG_WITH_EULA"
      shift
      ;;
    discovery)
      EDITION="Discovery"
      D="DEFINES+=CFG_NOGIT DEFINES+=CFG_NOEDIT DEFINES+=CFG_NOSRCEDIT"
      D="DEFINES+=CFG_EVALUATION_WATERMARK_TIME=600" # seconds
      M="modules+=-display_alioscopy modules+=-display_2dplusdepth modules+=-display_tridelity"
      EDITION_FLAGS="$D $M"
      shift ; done=1
      ;;
    creativity)
      EDITION="Creativity"
      M="modules+=-display_alioscopy modules+=-display_2dplusdepth modules+=-display_tridelity"
      EDITION_FLAGS="DEFINES+=CFG_NOGIT $M"
      shift ; done=1
      ;;
    impress)
      EDITION="Impress"
      M="modules+=-display_alioscopy modules+=-display_2dplusdepth modules+=-display_tridelity"
      EDITION_FLAGS="DEFINES+=CFG_NOGIT $M"
      shift ; done=1
      ;;
    *)
      done=1
      ;;
  esac
  [ "$done" ] && break
done

# Make the edition string available to project files
if [ "$EDITION" ] ; then
  EDITION_FLAGS="TAO_EDITION=$EDITION $EDITION_FLAGS"
fi

# Default QMake flags for each OS
osflags() {
  UNAME=`uname`
  case "$UNAME" in
    Darwin)
      echo "-spec macx-g++ "
      ;;
    MINGW*)
      echo "-spec win32-g++"
      ;;
    Linux*)
      ;;
  esac
}

qmake -r `osflags` $DEBUG_FLAGS $LICENSE_FLAGS $EDITION_FLAGS $SILENT_FLAGS $PARM "$@"
