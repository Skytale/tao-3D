#
docname "!", "builtins", do
  dsyntax <<0!>>
  synopsis <<>>
  description <<>>
#
docname "!", "builtins", do
  dsyntax <<N!>>
  synopsis <<>>
  description <<>>
#
docname "if", "builtins", do
  dsyntax <<if true then TrueBody else FalseBody>>
  synopsis <<>>
  description <<>>
#
docname "if", "builtins", do
  dsyntax <<if false then TrueBody else FalseBody>>
  synopsis <<>>
  description <<>>
#
docname "if", "builtins", do
  dsyntax <<if true then TrueBody>>
  synopsis <<>>
  description <<>>
#
docname "if", "builtins", do
  dsyntax <<if false then TrueBody>>
  synopsis <<>>
  description <<>>
#
docname "module_description", "builtins", do
  dsyntax <<module_description b:block>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "block", "b", <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Control-L">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Escape">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Control-M">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Control-1">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Control-+">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Control--">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Delete">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Backspace">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key "Control-G">>
  synopsis <<>>
  description <<>>
#
docname "key", "builtins", do
  dsyntax <<key X>>
  synopsis <<>>
  description <<>>
#
docname "zoom_out", "builtins", do
  dsyntax <<zoom_out>>
  synopsis <<>>
  description <<>>
#
docname "zoom_in", "builtins", do
  dsyntax <<zoom_in>>
  synopsis <<>>
  description <<>>
#
docname "control_modifier", "builtins", do
  dsyntax <<control_modifier>>
  synopsis <<>>
  description <<>>
#
docname "shift_modifier", "builtins", do
  dsyntax <<shift_modifier>>
  synopsis <<>>
  description <<>>
#
docname "alt_modifier", "builtins", do
  dsyntax <<alt_modifier>>
  synopsis <<>>
  description <<>>
#
docname "meta_modifier", "builtins", do
  dsyntax <<meta_modifier>>
  synopsis <<>>
  description <<>>
#
docname "wheel_event", "builtins", do
  dsyntax <<wheel_event x, y>>
  synopsis <<>>
  description <<>>
#
docname "main_chooser", "builtins", do
  dsyntax <<main_chooser>>
  synopsis <<>>
  description <<>>
#
docname "page_chooser", "builtins", do
  dsyntax <<page_chooser>>
  synopsis <<>>
  description <<>>
#
docname "branch_chooser", "builtins", do
  dsyntax <<branch_chooser>>
  synopsis <<>>
  description <<>>
#
docname "commit_chooser", "builtins", do
  dsyntax <<commit_chooser b:text>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "b", <<>>
#
docname "stereoscopy_settings", "builtins", do
  dsyntax <<stereoscopy_settings>>
  synopsis <<>>
  description <<>>
#
docname "chooser_title_font", "builtins", do
  dsyntax <<chooser_title_font>>
  synopsis <<>>
  description <<>>
#
docname "chooser_item_font", "builtins", do
  dsyntax <<chooser_item_font>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_box", "builtins", do
  dsyntax <<draw_chooser_box x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_caption", "builtins", do
  dsyntax <<draw_chooser_caption m, x, y>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_choice", "builtins", do
  dsyntax <<draw_chooser_choice m, x, y>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_error", "builtins", do
  dsyntax <<draw_chooser_error m, x, y>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_title", "builtins", do
  dsyntax <<draw_chooser_title m, x, y>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_more_above", "builtins", do
  dsyntax <<draw_chooser_more_above x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_more_below", "builtins", do
  dsyntax <<draw_chooser_more_below x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_selection", "builtins", do
  dsyntax <<draw_chooser_selection x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_item", "builtins", do
  dsyntax <<draw_chooser_item m, x, y>>
  synopsis <<>>
  description <<>>
#
docname "draw_chooser_match", "chooser_group", do
  dsyntax <<draw_chooser_match m1:text, m2:text, m3:text, x:real, y:real>>
  synopsis <<Draw the matching__test.>>
  description <<It does something
              and maybe more.>>
  parameters
  parameter "text", "m1", <<m1 desc >>
  parameter "text", "m2", <<m2 desc >>
  parameter "text", "m3", <<m3 desc >>
  parameter "real", "x", <<the x-coordinate >>
  parameter "real", "y", <<the y-coordinate >>
  return_value "typeret", << returns something else.>>
  see "the tutorial"
#
docname "no_texture", "builtins", do
  dsyntax <<no_texture>>
  synopsis <<>>
  description <<>>
#
docname "color", "builtins", do
  dsyntax <<color "default">>
  synopsis <<>>
  description <<>>
#
docname "color", "builtins", do
  dsyntax <<color "fill">>
  synopsis <<>>
  description <<>>
#
docname "color", "builtins", do
  dsyntax <<color "line">>
  synopsis <<>>
  description <<>>
#
docname "color", "builtins", do
  dsyntax <<color "font">>
  synopsis <<>>
  description <<>>
#
docname "color", "builtins", do
  dsyntax <<color "transparent">>
  synopsis <<>>
  description <<>>
#
docname "no_color", "builtins", do
  dsyntax <<no_color>>
  synopsis <<>>
  description <<>>
#
docname "line_color", "builtins", do
  dsyntax <<line_color "default">>
  synopsis <<>>
  description <<>>
#
docname "line_color", "builtins", do
  dsyntax <<line_color "fill">>
  synopsis <<>>
  description <<>>
#
docname "line_color", "builtins", do
  dsyntax <<line_color "line">>
  synopsis <<>>
  description <<>>
#
docname "line_color", "builtins", do
  dsyntax <<line_color "font">>
  synopsis <<>>
  description <<>>
#
docname "line_color", "builtins", do
  dsyntax <<line_color "transparent">>
  synopsis <<>>
  description <<>>
#
docname "no_line_color", "builtins", do
  dsyntax <<no_line_color>>
  synopsis <<>>
  description <<>>
#
docname "line_width", "builtins", do
  dsyntax <<line_width "default">>
  synopsis <<>>
  description <<>>
#
docname "font", "builtins", do
  dsyntax <<font "default">>
  synopsis <<>>
  description <<>>
#
docname "shape_color_black", "builtins", do
  dsyntax <<shape_color_black>>
  synopsis <<>>
  description <<>>
#
docname "shape_color_red", "builtins", do
  dsyntax <<shape_color_red>>
  synopsis <<>>
  description <<>>
#
docname "shape_color_green", "builtins", do
  dsyntax <<shape_color_green>>
  synopsis <<>>
  description <<>>
#
docname "shape_color_yellow", "builtins", do
  dsyntax <<shape_color_yellow>>
  synopsis <<>>
  description <<>>
#
docname "shape_color_blue", "builtins", do
  dsyntax <<shape_color_blue>>
  synopsis <<>>
  description <<>>
#
docname "shape_color_magenta", "builtins", do
  dsyntax <<shape_color_magenta>>
  synopsis <<>>
  description <<>>
#
docname "shape_color_cyan", "builtins", do
  dsyntax <<shape_color_cyan>>
  synopsis <<>>
  description <<>>
#
docname "shape_color_white", "builtins", do
  dsyntax <<shape_color_white>>
  synopsis <<>>
  description <<>>
#
docname "color", "builtins", do
  dsyntax <<color n:text>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
#
docname "color", "builtins", do
  dsyntax <<color r:real, g:real, b:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "r", <<>>
  parameter "real", "g", <<>>
  parameter "real", "b", <<>>
#
docname "color_hsl", "builtins", do
  dsyntax <<color_hsl h:real, s:real, l:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "h", <<>>
  parameter "real", "s", <<>>
  parameter "real", "l", <<>>
#
docname "color_hsv", "builtins", do
  dsyntax <<color_hsv h:real, s:real, v:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "h", <<>>
  parameter "real", "s", <<>>
  parameter "real", "v", <<>>
#
docname "color_cmyk", "builtins", do
  dsyntax <<color_cmyk c:real, m:real, y:real, k:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "c", <<>>
  parameter "real", "m", <<>>
  parameter "real", "y", <<>>
  parameter "real", "k", <<>>
#
docname "line_color", "builtins", do
  dsyntax <<line_color n:text>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
#
docname "line_color", "builtins", do
  dsyntax <<line_color r:real, g:real, b:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "r", <<>>
  parameter "real", "g", <<>>
  parameter "real", "b", <<>>
#
docname "line_color_hsl", "builtins", do
  dsyntax <<line_color_hsl h:real, s:real, l:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "h", <<>>
  parameter "real", "s", <<>>
  parameter "real", "l", <<>>
#
docname "line_color_hsv", "builtins", do
  dsyntax <<line_color_hsv h:real, s:real, v:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "h", <<>>
  parameter "real", "s", <<>>
  parameter "real", "v", <<>>
#
docname "line_color_cmyk", "builtins", do
  dsyntax <<line_color_cmyk c:real, m:real, y:real, k:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "c", <<>>
  parameter "real", "m", <<>>
  parameter "real", "y", <<>>
  parameter "real", "k", <<>>
#
docname "align", "builtins", do
  dsyntax <<align center:real, justify:real, spread:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "center", <<>>
  parameter "real", "justify", <<>>
  parameter "real", "spread", <<>>
#
docname "align", "builtins", do
  dsyntax <<align center:real, justify:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "center", <<>>
  parameter "real", "justify", <<>>
#
docname "align", "builtins", do
  dsyntax <<align center:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "center", <<>>
#
docname "align_left", "builtins", do
  dsyntax <<align_left>>
  synopsis <<>>
  description <<>>
#
docname "align_right", "builtins", do
  dsyntax <<align_right>>
  synopsis <<>>
  description <<>>
#
docname "align_center", "builtins", do
  dsyntax <<align_center>>
  synopsis <<>>
  description <<>>
#
docname "align_justify", "builtins", do
  dsyntax <<align_justify>>
  synopsis <<>>
  description <<>>
#
docname "align_left_justify", "builtins", do
  dsyntax <<align_left_justify>>
  synopsis <<>>
  description <<>>
#
docname "align_right_justify", "builtins", do
  dsyntax <<align_right_justify>>
  synopsis <<>>
  description <<>>
#
docname "align_full_justify", "builtins", do
  dsyntax <<align_full_justify>>
  synopsis <<>>
  description <<>>
#
docname "align_spread", "builtins", do
  dsyntax <<align_spread>>
  synopsis <<>>
  description <<>>
#
docname "align_full_spread", "builtins", do
  dsyntax <<align_full_spread>>
  synopsis <<>>
  description <<>>
#
docname "vertical_align", "builtins", do
  dsyntax <<vertical_align center:real, justify:real, spread:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "center", <<>>
  parameter "real", "justify", <<>>
  parameter "real", "spread", <<>>
#
docname "vertical_align", "builtins", do
  dsyntax <<vertical_align center:real, justify:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "center", <<>>
  parameter "real", "justify", <<>>
#
docname "vertical_align", "builtins", do
  dsyntax <<vertical_align center:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "center", <<>>
#
docname "vertical_align_top", "builtins", do
  dsyntax <<vertical_align_top>>
  synopsis <<>>
  description <<>>
#
docname "vertical_align_bottom", "builtins", do
  dsyntax <<vertical_align_bottom>>
  synopsis <<>>
  description <<>>
#
docname "vertical_align_center", "builtins", do
  dsyntax <<vertical_align_center>>
  synopsis <<>>
  description <<>>
#
docname "vertical_align_justify", "builtins", do
  dsyntax <<vertical_align_justify>>
  synopsis <<>>
  description <<>>
#
docname "vertical_align_spread", "builtins", do
  dsyntax <<vertical_align_spread>>
  synopsis <<>>
  description <<>>
#
docname "sphere", "builtins", do
  dsyntax <<sphere x:real, y:real, z:real, r:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "z", <<>>
  parameter "real", "r", <<>>
#
docname "sphere", "builtins", do
  dsyntax <<sphere r:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "r", <<>>
#
docname "move_to", "builtins", do
  dsyntax <<move_to x:real, y:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
#
docname "line_to", "builtins", do
  dsyntax <<line_to x:real, y:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
#
docname "quad_to", "builtins", do
  dsyntax <<quad_to cx:real, cy:real, x:real, y:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "cx", <<>>
  parameter "real", "cy", <<>>
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
#
docname "cubic_to", "builtins", do
  dsyntax <<cubic_to c1x:real, c1y:real, c2x:real, c2y:real, x:real, y:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "c1x", <<>>
  parameter "real", "c1y", <<>>
  parameter "real", "c2x", <<>>
  parameter "real", "c2y", <<>>
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
#
docname "line", "builtins", do
  dsyntax <<line x0:real, y0:real, x1:real, y1:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x0", <<>>
  parameter "real", "y0", <<>>
  parameter "real", "x1", <<>>
  parameter "real", "y1", <<>>
#
docname "line_arrow", "builtins", do
  dsyntax <<line_arrow x0:real, y0:real, s0:symbol, x1:real, y1:real, s1:symbol>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x0", <<>>
  parameter "real", "y0", <<>>
  parameter "symbol", "s0", <<>>
  parameter "real", "x1", <<>>
  parameter "real", "y1", <<>>
  parameter "symbol", "s1", <<>>
#
docname "circle", "builtins", do
  dsyntax <<circle x:real, y:real, r:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "r", <<>>
#
docname "circle", "builtins", do
  dsyntax <<circle r:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "r", <<>>
#
docname "oval", "builtins", do
  dsyntax <<oval x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "circular_sector", "builtins", do
  dsyntax <<circular_sector x:real, y:real, r:real, a:real, b:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "r", <<>>
  parameter "real", "a", <<>>
  parameter "real", "b", <<>>
#
docname "circular_sector", "builtins", do
  dsyntax <<circular_sector r:real, a:real, b:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "r", <<>>
  parameter "real", "a", <<>>
  parameter "real", "b", <<>>
#
docname "rectangle", "builtins", do
  dsyntax <<rectangle w:real, h:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
#
docname "square", "builtins", do
  dsyntax <<square x:real, y:real, s:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "s", <<>>
#
docname "square", "builtins", do
  dsyntax <<square s:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "s", <<>>
#
docname "triangle", "builtins", do
  dsyntax <<triangle w:real, h:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
#
docname "right_triangle", "builtins", do
  dsyntax <<right_triangle w:real, h:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
#
docname "rounded_rectangle", "builtins", do
  dsyntax <<rounded_rectangle w:real, h:real, r:real>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
  parameter "real", "r", <<>>
#
docname "polygram", "builtins", do
  dsyntax <<polygram x:real, y:real, w:real, h:real, p:integer, q:integer>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
  parameter "integer", "p", <<>>
  parameter "integer", "q", <<>>
#
docname "polygon", "builtins", do
  dsyntax <<polygon x:real, y:real, w:real, h:real, p:integer>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
  parameter "integer", "p", <<>>
#
docname "equilateral_triangle", "builtins", do
  dsyntax <<equilateral_triangle x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "tetragon", "builtins", do
  dsyntax <<tetragon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "diamond", "builtins", do
  dsyntax <<diamond x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "pentagon", "builtins", do
  dsyntax <<pentagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "hexagon", "builtins", do
  dsyntax <<hexagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "heptagon", "builtins", do
  dsyntax <<heptagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "octagon", "builtins", do
  dsyntax <<octagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "nonagon", "builtins", do
  dsyntax <<nonagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "decagon", "builtins", do
  dsyntax <<decagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "hendecagon", "builtins", do
  dsyntax <<hendecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "dodecagon", "builtins", do
  dsyntax <<dodecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "tridecagon", "builtins", do
  dsyntax <<tridecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "tetradecagon", "builtins", do
  dsyntax <<tetradecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "pentadecagon", "builtins", do
  dsyntax <<pentadecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "hexadecagon", "builtins", do
  dsyntax <<hexadecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "heptadecagon", "builtins", do
  dsyntax <<heptadecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "octadecagon", "builtins", do
  dsyntax <<octadecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "enneadecagon", "builtins", do
  dsyntax <<enneadecagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "icosagon", "builtins", do
  dsyntax <<icosagon x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "pentagram", "builtins", do
  dsyntax <<pentagram x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "hexagram", "builtins", do
  dsyntax <<hexagram x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "star_of_david", "builtins", do
  dsyntax <<star_of_david x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "heptagram", "builtins", do
  dsyntax <<heptagram x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "star_of_lakshmi", "builtins", do
  dsyntax <<star_of_lakshmi x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "octagram", "builtins", do
  dsyntax <<octagram x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "nonagram", "builtins", do
  dsyntax <<nonagram x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "decagram", "builtins", do
  dsyntax <<decagram x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "schläfli", "builtins", do
  dsyntax <<schläfli x, y, w, h, {p:integer}>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "integer", "p", <<>>
#
docname "schläfli", "builtins", do
  dsyntax <<schläfli x, y, w, h, {p:integer / q:integer}>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "integer", "p", <<>>
  parameter "integer", "q", <<>>
#
docname "selection_color", "builtins", do
  dsyntax <<selection_color>>
  synopsis <<>>
  description <<>>
#
docname "selection_rectangle_color", "builtins", do
  dsyntax <<selection_rectangle_color>>
  synopsis <<>>
  description <<>>
#
docname "open_group_color", "builtins", do
  dsyntax <<open_group_color>>
  synopsis <<>>
  description <<>>
#
docname "open_textbox_color", "builtins", do
  dsyntax <<open_textbox_color>>
  synopsis <<>>
  description <<>>
#
docname "group_item_color", "builtins", do
  dsyntax <<group_item_color>>
  synopsis <<>>
  description <<>>
#
docname "selected_textbox_color", "builtins", do
  dsyntax <<selected_textbox_color>>
  synopsis <<>>
  description <<>>
#
docname "text_selection_color", "builtins", do
  dsyntax <<text_selection_color>>
  synopsis <<>>
  description <<>>
#
docname "text_highlight_color", "builtins", do
  dsyntax <<text_highlight_color>>
  synopsis <<>>
  description <<>>
#
docname "formula_highlight_color", "builtins", do
  dsyntax <<formula_highlight_color>>
  synopsis <<>>
  description <<>>
#
docname "text_cursor_color", "builtins", do
  dsyntax <<text_cursor_color>>
  synopsis <<>>
  description <<>>
#
docname "text_cursor_highlight", "builtins", do
  dsyntax <<text_cursor_highlight>>
  synopsis <<>>
  description <<>>
#
docname "handle_outer_color", "builtins", do
  dsyntax <<handle_outer_color>>
  synopsis <<>>
  description <<>>
#
docname "handle_inner_color", "builtins", do
  dsyntax <<handle_inner_color>>
  synopsis <<>>
  description <<>>
#
docname "group_handle_outer_color", "builtins", do
  dsyntax <<group_handle_outer_color>>
  synopsis <<>>
  description <<>>
#
docname "group_handle_inner_color", "builtins", do
  dsyntax <<group_handle_inner_color>>
  synopsis <<>>
  description <<>>
#
docname "adjust_shape_handle_outer_color", "builtins", do
  dsyntax <<adjust_shape_handle_outer_color>>
  synopsis <<>>
  description <<>>
#
docname "adjust_shape_handle_inner_color", "builtins", do
  dsyntax <<adjust_shape_handle_inner_color>>
  synopsis <<>>
  description <<>>
#
docname "control_point_handle_outer_color", "builtins", do
  dsyntax <<control_point_handle_outer_color>>
  synopsis <<>>
  description <<>>
#
docname "control_point_handle_inner_color", "builtins", do
  dsyntax <<control_point_handle_inner_color>>
  synopsis <<>>
  description <<>>
#
docname "draw_selection", "builtins", do
  dsyntax <<draw_selection x, y, z, w, h, d>>
  synopsis <<>>
  description <<>>
#
docname "draw_text_selection", "builtins", do
  dsyntax <<draw_text_selection x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_text_highlight", "builtins", do
  dsyntax <<draw_text_highlight x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_formula_highlight", "builtins", do
  dsyntax <<draw_formula_highlight x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_3D_selection", "builtins", do
  dsyntax <<draw_3D_selection x, y, z, w, h, d>>
  synopsis <<>>
  description <<>>
#
docname "draw_widget_selection", "builtins", do
  dsyntax <<draw_widget_selection x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_selection", "builtins", do
  dsyntax <<draw_selection x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_selection_rectangle", "builtins", do
  dsyntax <<draw_selection_rectangle x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_open_group", "builtins", do
  dsyntax <<draw_open_group x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_group_item", "builtins", do
  dsyntax <<draw_group_item x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_group_item", "builtins", do
  dsyntax <<draw_group_item x, y, z, w, h, d>>
  synopsis <<>>
  description <<>>
#
docname "draw_open_textbox", "builtins", do
  dsyntax <<draw_open_textbox x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_selected_textbox", "builtins", do
  dsyntax <<draw_selected_textbox x, y, w, h>>
  synopsis <<>>
  description <<>>
#
docname "draw_handle", "builtins", do
  dsyntax <<draw_handle x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_group_handle", "builtins", do
  dsyntax <<draw_group_handle x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_adjust_shape_handle", "builtins", do
  dsyntax <<draw_adjust_shape_handle x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_control_point_handle", "builtins", do
  dsyntax <<draw_control_point_handle x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_group_adjust_shape_handle", "builtins", do
  dsyntax <<draw_group_adjust_shape_handle x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_group_control_point_handle", "builtins", do
  dsyntax <<draw_group_control_point_handle x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_rotation_base", "builtins", do
  dsyntax <<draw_rotation_base x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_rotation_tip", "builtins", do
  dsyntax <<draw_rotation_tip x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_translation_base", "builtins", do
  dsyntax <<draw_translation_base x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_translation_x", "builtins", do
  dsyntax <<draw_translation_x x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_translation_y", "builtins", do
  dsyntax <<draw_translation_y x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_translation_z", "builtins", do
  dsyntax <<draw_translation_z x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_scale_base", "builtins", do
  dsyntax <<draw_scale_base x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_scale_x", "builtins", do
  dsyntax <<draw_scale_x x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_scale_y", "builtins", do
  dsyntax <<draw_scale_y x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "draw_scale_z", "builtins", do
  dsyntax <<draw_scale_z x, y, z>>
  synopsis <<>>
  description <<>>
#
docname "toolbar", "builtins", do
  dsyntax <<toolbar n:text>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
#
docname "menu", "builtins", do
  dsyntax <<menu n:text>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
#
docname "menu", "builtins", do
  dsyntax <<menu n:text, l:text>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
  parameter "text", "l", <<>>
#
docname "submenu", "builtins", do
  dsyntax <<submenu n:text>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
#
docname "submenu", "builtins", do
  dsyntax <<submenu n:text, l:text>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
  parameter "text", "l", <<>>
#
docname "menu_item", "builtins", do
  dsyntax <<menu_item n:text, l:text, t>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
  parameter "text", "l", <<>>
#
docname "menu_item", "builtins", do
  dsyntax <<menu_item n:text, l:text, i:text, t>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
  parameter "text", "l", <<>>
  parameter "text", "i", <<>>
#
docname "menu_item", "builtins", do
  dsyntax <<menu_item n:text, l:text, cb:boolean, ck:text, t>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "text", "n", <<>>
  parameter "text", "l", <<>>
  parameter "boolean", "cb", <<>>
  parameter "text", "ck", <<>>
#
docname "push_button", "builtins", do
  dsyntax <<push_button x:real, y:real, w:real, h:real, l:text, a:tree>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
  parameter "text", "l", <<>>
  parameter "tree", "a", <<>>
#
docname "radio_button", "builtins", do
  dsyntax <<radio_button x:real, y:real, w:real, h:real, l:text, m:text, a:tree>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
  parameter "text", "l", <<>>
  parameter "text", "m", <<>>
  parameter "tree", "a", <<>>
#
docname "check_box_button", "builtins", do
  dsyntax <<check_box_button x:real, y:real, w:real, h:real, l:text, m:text, a:tree>>
  synopsis <<>>
  description <<>>
  parameters
  parameter "real", "x", <<>>
  parameter "real", "y", <<>>
  parameter "real", "w", <<>>
  parameter "real", "h", <<>>
  parameter "text", "l", <<>>
  parameter "text", "m", <<>>
  parameter "tree", "a", <<>>
#
docname "menu_insert", "builtins", do
  dsyntax <<menu_insert>>
  synopsis <<>>
  description <<>>
#
docname "toolbar_insert", "builtins", do
  dsyntax <<toolbar_insert>>
  synopsis <<>>
  description <<>>
#
docname "menu_format", "builtins", do
  dsyntax <<menu_format>>
  synopsis <<>>
  description <<>>
#
docname "menu_arrange", "builtins", do
  dsyntax <<menu_arrange>>
  synopsis <<>>
  description <<>>






#
docname "toolbar_test", "module", do
  dsyntax <<toolbar_test>>
  synopsis <<>>
  description <<>>
#
docname "PowerInt", "basics", do
 dsyntax "integer ^ integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "SubInt", "basics", do
 dsyntax "integer - integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "DivInt", "basics", do
 dsyntax "integer / integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "AddInt", "basics", do
 dsyntax "integer + integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "MulInt", "basics", do
 dsyntax "integer * integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "TextConcatenate", "basics", do
 dsyntax "text & text"
 synopsis <<>>
 description << >>
 return_value "text", <<>>
#
docname "EQInt", "basics", do
 dsyntax "integer = integer"
 synopsis <<>>
 description << >>
 return_value "boolean", <<>>
#
docname "LTInt", "basics", do
 dsyntax "integer < integer"
 synopsis <<>>
 description << >>
 return_value "boolean", <<>>
#
docname "GTInt", "basics", do
 dsyntax "integer > integer"
 synopsis <<>>
 description << >>
 return_value "boolean", <<>>
#
docname "NegateInt", "basics", do
 dsyntax "- x"
 synopsis <<>>
 description << >>
 parameters
 parameter "integer", "x", <<>>

 return_value "integer", <<>>
#
docname "PercentInt", "basics", do
 dsyntax " x %"
 synopsis <<>>
 description << >>
 parameters
 parameter "integer", "x", <<>>

 return_value "real", <<>>
#
docname "Or", "basics", do
 dsyntax "integer or integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "TextAt", "basics", do
 dsyntax "text at integer"
 synopsis <<>>
 description << >>
 return_value "text", <<>>
#
docname "Range", "basics", do
 dsyntax "integer .. integer"
 synopsis <<>>
 description << >>
 return_value "tree", <<>>
#
docname "LEInt", "basics", do
 dsyntax "integer <= integer"
 synopsis <<>>
 description << >>
 return_value "boolean", <<>>
#
docname "LShift", "basics", do
 dsyntax "integer << integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "NEInt", "basics", do
 dsyntax "integer <> integer"
 synopsis <<>>
 description << >>
 return_value "boolean", <<>>
#
docname "RShift", "basics", do
 dsyntax "integer >> integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "GEInt", "basics", do
 dsyntax "integer >= integer"
 synopsis <<>>
 description << >>
 return_value "boolean", <<>>
#
docname "SetInt", "basics", do
 dsyntax "integer := integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "FromMm", "code:unit", do
 dsyntax " x mm"
 synopsis <<Convert from mm to pixels>>
 description << Convert from mm to pixels>>
 parameters
 parameter "real", "x", <<The value in mm>>

 return_value "real", <<The value in pixel. >>
#
docname "ShapeAction", "mouse", do
 dsyntax "on n, t"
 synopsis <<Associate the specified code to the named action.>>
 description << Associate the specified code to the named action. This code is then executed when the action occurs on the current shape.>>
 parameters
 parameter "text", "n", <<The action name>>
 parameter "tree", "t", <<The code to execute>>

#
docname "DoCode", "basics", do
 dsyntax "do code"
 synopsis <<>>
 description << >>
 parameters
 parameter "tree", "code", <<>>

 return_value "tree", <<>>
#
docname "FromCm", "code:unit", do
 dsyntax " x cm"
 synopsis <<Convert from cm to pixels>>
 description << Convert from cm to pixels>>
 parameters
 parameter "real", "x", <<The value in cm>>

 return_value "real", <<The value in pixel. >>
#
docname "FromPx", "code:unit", do
 dsyntax " x px"
 synopsis <<Convert from pixel>>
 description << Convert from pixel (currently 1-1 mappingcould be based on scaling?)>>
 parameters
 parameter "real", "x", <<The value in pixel>>

 return_value "real", <<The value in pixel. >>
#
docname "FromPt", "code:unit", do
 dsyntax " x pt"
 synopsis <<Convert from pt to pixels>>
 description << Convert from pt to pixels>>
 parameters
 parameter "real", "x", <<The value in point>>

 return_value "real", <<The value in pixel. >>
#
docname "ModInt", "basics", do
 dsyntax "integer mod integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "And", "basics", do
 dsyntax "integer and integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "Xor", "basics", do
 dsyntax "integer xor integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "RemInt", "basics", do
 dsyntax "integer rem integer"
 synopsis <<>>
 description << >>
 return_value "integer", <<>>
#
docname "Log", "basics", do
 dsyntax "log x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "BitwiseNotInt", "basics", do
 dsyntax "not x"
 synopsis <<>>
 description << >>
 parameters
 parameter "integer", "x", <<>>

 return_value "integer", <<>>
#
docname "Exp", "basics", do
 dsyntax "exp x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "TimeDay", "time", do
 dsyntax "day t"
 synopsis <<Extract day (1-31) from timestamp>>
 description << >>
 parameters
 parameter "real", "t", <<>>

#
docname "Abs", "basics", do
 dsyntax "abs x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "Cos", "basics", do
 dsyntax "cos x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "Url", "", do
 dsyntax "url x, y, w, h, u"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>
 parameter "real", "y", <<>>
 parameter "real", "w", <<>>
 parameter "real", "h", <<>>
 parameter "text", "u", <<>>

#
docname "Tan", "basics", do
 dsyntax "tan x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "PanEye", "gui", do
 dsyntax "pan dx, dy"
 synopsis <<Pan the document view>>
 description << >>
 parameters
 parameter "real", "dx", <<Displacement along the X axis>>
 parameter "real", "dy", <<Displacementalong the Y axis>>

#
docname "FillTextureSVG", "graph", do
 dsyntax "svg img"
 synopsis <<Create a texture from an SVG>>
 description << Draw an image from an SVG format>>
 parameters
 parameter "text", "img", <<The image filename.>>

 return_value "tree", <<>>
#
docname "Sin", "basics", do
 dsyntax "sin x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "TestAddFont", "test", do
 dsyntax "test_add_font diagname, ftname, delay"
 synopsis <<Add an event to change the current font>>
 description << Check[TODO]>>
 parameters
 parameter "text", "diagname", <<>>
 parameter "text", "ftname", <<>>
 parameter "integer", "delay", <<>>

#
docname "TestAddFile", "test", do
 dsyntax "test_add_file diagname, filename, delay"
 synopsis <<Add an event to select a file name.>>
 description << Add an event to select a file name.>>
 parameters
 parameter "text", "diagname", <<The objectname of the dialog box.>>
 parameter "text", "filename", <<The name of the selected file.>>
 parameter "integer", "delay", <<The delay before this action is excuted.>>

#
docname "MaterialFrontEmission", "lighting", do
 dsyntax "material_front_emission r, g, b, a"
 synopsis <<Select the emission of the material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "EnableAnimations", "gui", do
 dsyntax "enable_animations an"
 synopsis <<Enable or disable animations>>
 description << Enable or disable animations>>
 parameters
 parameter "boolean", "an", <<on or off>>

 return_value "boolean", <<True if previous state was on.>>
#
docname "Identity", "basics", do
 dsyntax "identity code"
 synopsis <<>>
 description << >>
 parameters
 parameter "tree", "code", <<>>

 return_value "tree", <<>>
#
docname "ButtonGroup", "widget", do
 dsyntax "button_group ex, b"
 synopsis <<Create a button group.>>
 description << Create a group. Buttons included in this group are mutually exclusive. It is useful to create multiple group of radio buttons>>
 parameters
 parameter "boolean", "ex", <<If true, the group is exclusive.>>
 parameter "tree", "b", <<The code of buttons>>

#
docname "SetCenter", "gui:camera", do
 dsyntax "camera_target x, y, z"
 synopsis <<Set the point the camera is looking at>>
 description << >>
 parameters
 parameter "real", "x", <<X coordinate>>
 parameter "real", "y", <<Y coordinate>>
 parameter "real", "z", <<Z coordinate>>

#
docname "TimeWeekDay", "time", do
 dsyntax "week_day t"
 synopsis <<Extract week day (1-7) from timestamp>>
 description << >>
 parameters
 parameter "real", "t", <<>>

#
docname "AutoHideCursor", "gui", do
 dsyntax "auto_hide_cursor flag"
 synopsis <<Control the automatic hiding of the cursor>>
 description << >>
 parameters
 parameter "boolean", "flag", <<Flag controlling cursor hiding>>

#
docname "TestDef", "test", do
 dsyntax "test_definition testname, feature, description, width, height, threshold, testbody"
 synopsis <<Define the current test>>
 description << Test to activate rectangle action. >>
 parameters
 parameter "text", "testname", <<Name of the test. It is used to find/write files.>>
 parameter "integer", "feature", <<The feature ID in Redmine this test refers to.>>
 parameter "text", "description", <<The description of this particular test.>>
 parameter "integer", "width", <<Width of the window.>>
 parameter "integer", "height", <<Height of the window.>>
 parameter "real", "threshold", <<The authorized error threshold for image comparison.>>
 parameter "tree", "testbody", <<The sequence of actions that makes the test.>>

#
docname "FontStrikeout", "text:font", do
 dsyntax "strikeout a"
 synopsis <<Strikeout attribute of the font>>
 description << Select whether we strikeout a font. Qt doesnt support setting the size of the underline, its on or off.>>
 parameters
 parameter "real", "a", <<Strikeout values: 0 is off, values > 0 are on.>>

#
docname "TextLength", "basics", do
 dsyntax "length input"
 synopsis <<Compute the length of a text>>
 description << >>
 parameters
 parameter "text", "input", <<Input text>>

#
docname "Object3D", "graph", do
 dsyntax "object x, y, z, w, h, d, f"
 synopsis <<Load a 3D object>>
 description << Load a 3D object [TODO: which format of file can be loaded ?>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "z", <<z-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "real", "d", <<depth>>
 parameter "text", "f", <<filename>>

#
docname "ImportFile", "basics", do
 dsyntax "import file"
 synopsis <<>>
 description << >>
 parameters
 parameter "text", "file", <<>>

 return_value "tree", <<>>
#
docname "Insert0", "", do
 dsyntax "insert m, t"
 synopsis <<>>
 description << >>
 parameters
 parameter "text", "m", <<>>
 parameter "tree", "t", <<>>

#
docname "UrlTexture", "", do
 dsyntax "url_texture w, h, u"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "w", <<>>
 parameter "real", "h", <<>>
 parameter "text", "u", <<>>

#
docname "Anchor", "graph", do
 dsyntax "anchor t"
 synopsis <<>>
 description << Anchor a set of shapes to the current position>>
 parameters
 parameter "tree", "t", <<The code that represent the shapes to be anchored.>>

 return_value "tree", <<The result of the child execution.>>
#
docname "Springify", "basics", do
 dsyntax "springify v, tgt, t, d, k, lt, ls"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "v", <<>>
 parameter "real", "tgt", <<>>
 parameter "real", "t", <<>>
 parameter "real", "d", <<>>
 parameter "real", "k", <<>>
 parameter "real", "lt", <<>>
 parameter "real", "ls", <<>>

 return_value "tree", <<>>
#
docname "ZNear", "", do
 dsyntax "z_near zn"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "zn", <<>>

#
docname "FontWeight", "text:font", do
 dsyntax "weight a"
 synopsis <<set the bold value of the font>>
 description << Select whether the font is bold or not. Qt weight values range from 0 to 99 with 50 = regular>>
 parameters
 parameter "real", "a", <<The bold value of the font>>

#
docname "Caption", "gui", do
 dsyntax "status t"
 synopsis <<Set the status line of the window>>
 description << Set the content of the status line of the window>>
 parameters
 parameter "text", "t", <<The text for the status line.>>

#
docname "Sphere", "graph", do
 dsyntax "sphere x, y, z, w, h, d, slices, stacks"
 synopsis <<sphere like>>
 description << GL sphere [TODO or ovoid ? Add the incidence of slices and stacks on the sphere rendering time.]>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "z", <<z-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "real", "d", <<depth>>
 parameter "integer", "slices", <<number of slices>>
 parameter "integer", "stacks", <<[TODO]>>

 return_value "tree", <<>>
#
docname "ScaleY", "graph:transform", do
 dsyntax "scaley y"
 synopsis <<Rescale along Y>>
 description << Rescale along Y-axis>>
 parameters
 parameter "real", "y", <<scale factor.>>

#
docname "ScaleX", "graph:transform", do
 dsyntax "scalex x"
 synopsis <<Rescale along X>>
 description << Rescale along X-axis>>
 parameters
 parameter "real", "x", <<scale factor.>>

#
docname "ScaleZ", "graph:transform", do
 dsyntax "scalez z"
 synopsis <<Rescale along Z>>
 description << Rescale along Z-axis>>
 parameters
 parameter "real", "z", <<scale factor.>>

#
docname "Rotate", "graph:transform", do
 dsyntax "rotate ra, rx, ry, rz"
 synopsis <<Rotation>>
 description << Rotation along an arbitrary axis>>
 parameters
 parameter "real", "ra", <<[TODO : A-t-on une rotation autour de laxe du temps ???]>>
 parameter "real", "rx", <<angle around X-axis>>
 parameter "real", "ry", <<angle around Y-axis>>
 parameter "real", "rz", <<angle around Z-axis>>

#
docname "RepeatCode", "basics", do
 dsyntax "repeat n, code"
 synopsis <<>>
 description << >>
 parameters
 parameter "integer", "n", <<>>
 parameter "tree", "code", <<>>

 return_value "tree", <<>>
#
docname "RandomNumber2", "basics", do
 dsyntax "random low, high"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "low", <<>>
 parameter "real", "high", <<>>

 return_value "real", <<>>
#
docname "MinimumParagraphSpace", "text:spread", do
 dsyntax "paragraph_space b, a"
 synopsis <<Set the space around the paragraph>>
 description << Set the minimum space allowed around the paragraph. [TODO: Quelle valeur faut-il mettre si on ne veut modifier que la valeur avant (ou apres) est-ce -1, ou est-ce que des valeurs negatives sont autorisees et que dans ce cas des paragraphes peuvent se marcher dessus ?]>>
 parameters
 parameter "real", "b", <<Space before the paragraph.>>
 parameter "real", "a", <<Space after the paragraph.>>

#
docname "EllipseArc", "graph:path:shape", do
 dsyntax "ellipse_arc x, y, w, h, start, sweep"
 synopsis <<Elliptic sector>>
 description << Elliptic sector centered around (cx,cy) that occupies the given rectangle, beginning at the specified startAngle and extending sweepLength degrees counter-clockwise. Angles are specified in degrees. Clockwise arcs can be specified using negative angles.>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of the ellipse>>
 parameter "real", "h", <<height of the ellipse>>
 parameter "real", "start", <<start angle>>
 parameter "real", "sweep", <<sweep angle>>

#
docname "SlideShow", "gui", do
 dsyntax "slide_show flag"
 synopsis <<Control slide-show mode>>
 description << Activate or deactivate slide-show mode, depending on the value of the flag. When activated, the document is displayed full-screen, the cursor hides automatically and the screensaver is deactivated.>>
 parameters
 parameter "boolean", "flag", <<Flag controlling auto-hide mode>>

 return_value "boolean", <<A flag indicating the previous value of the slide-show mode.>>
#
docname "MaterialFrontAmbient", "lighting", do
 dsyntax "material_front_ambient r, g, b, a"
 synopsis <<Select the ambient material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "MaterialEmission", "lighting", do
 dsyntax "material_emission r, g, b, a"
 synopsis <<Select the emission of the material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "TestAddCheck", "test", do
 dsyntax "test_add_check num, delay"
 synopsis <<Check the view>>
 description << Check>>
 parameters
 parameter "integer", "num", <<>>
 parameter "integer", "delay", <<>>

#
docname "TestAddColor", "test", do
 dsyntax "test_add_color diagname, colname, delay"
 synopsis <<Check the view[TODO]>>
 description << Check>>
 parameters
 parameter "text", "diagname", <<>>
 parameter "text", "colname", <<>>
 parameter "integer", "delay", <<>>

#
docname "TimeMonth", "time", do
 dsyntax "month t"
 synopsis <<Extract month from timestamp>>
 description << >>
 parameters
 parameter "real", "t", <<>>

#
docname "Movie", "widget", do
 dsyntax "movie x, y, w, h, u"
 synopsis <<Play a movie>>
 description << Display a movie in the rectangle specified by the given coordinates. Supported movie formats depend on the operating system.>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "u", <<The URL of the video to play.>>

#
docname "LightID", "lighting", do
 dsyntax "light l, b"
 synopsis <<Select which light we are working with>>
 description << >>
 parameters
 parameter "integer", "l", <<>>
 parameter "boolean", "b", <<>>

#
docname "Log10", "basics", do
 dsyntax "log10 x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "LogPlus1", "basics", do
 dsyntax "log1p x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "ImageA", "", do
 dsyntax "image x, y, w, h, img"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>
 parameter "real", "y", <<>>
 parameter "real", "w", <<>>
 parameter "real", "h", <<>>
 parameter "text", "img", <<>>

#
docname "TimeHours", "time", do
 dsyntax "hours t"
 synopsis <<Extract hours (local time) from timestamp>>
 description << >>
 parameters
 parameter "real", "t", <<>>

#
docname "ExpMinus1", "basics", do
 dsyntax "expm1 x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "ErrorMsg3", "basics", do
 dsyntax "error m, a, b, c"
 synopsis <<>>
 description << >>
 parameters
 parameter "text", "m", <<>>
 parameter "tree", "a", <<>>
 parameter "tree", "b", <<>>
 parameter "tree", "c", <<>>

 return_value "tree", <<>>
#
docname "Every", "", do
 dsyntax "every i, d, c"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "i", <<>>
 parameter "real", "d", <<>>
 parameter "tree", "c", <<>>

#
docname "DebugTree", "basics", do
 dsyntax "debug toDebug"
 synopsis <<>>
 description << >>
 parameters
 parameter "tree", "toDebug", <<>>

 return_value "tree", <<>>
#
docname "Group", "code:group", do
 dsyntax "group t"
 synopsis <<Create a logical group>>
 description << Group objects together, make them selectable as a whole.>>
 parameters
 parameter "tree", "t", <<The code to group>>

#
docname "ListFiles", "basics", do
 dsyntax "files pat"
 synopsis <<>>
 description << >>
 parameters
 parameter "tree", "pat", <<>>

 return_value "tree", <<>>
#
docname "Frame", "widget", do
 dsyntax "frame x, y, w, h, p"
 synopsis <<A frame with a content>>
 description << Draw a frame with the described content in 'prog'. This frame as no displayed border. It makes a texture of size (w,h) using 'frame_texture', and map it on a rectangle at (x) location.>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "tree", "p", <<The program that represent the content of the frame>>

 return_value "tree", <<The result of 'prog' evaluation>>
#
docname "Align", "text:spread", do
 dsyntax "align center, justify, spread, full_justify"
 synopsis <<[TODO]>>
 description << [TODO]>>
 parameters
 parameter "real", "center", <<Place the center along x-axis. An amount of 0% align the center of the text on the left of the box, an amount of 100% align the center of the text on the right of the box and an amount of 50% align the center of the text on the center of the box.>>
 parameter "real", "justify", <<Horizontaly justify the text. An amount of 0% doesnt justify (ragged edge), an amount of 100% justifies fully.>>
 parameter "real", "spread", <<[TODO: Quel est la difference entre spread et justify ? Est-ce lecart max autorise entre les lettres/mots ?]>>
 parameter "real", "full_justify", <<Horizontaly justify the text in lines that do not have enough characters, typically the last line of a paragraph.>>

#
docname "After", "time", do
 dsyntax "after d, c"
 synopsis <<Wait for time to execute code>>
 description << Execute the given code only after the specified amount of time.>>
 parameters
 parameter "real", "d", <<The delay in second. Sensitive upto millisecond.>>
 parameter "tree", "c", <<The code to execute.>>

 return_value "real", <<The real elapsed time.>>
#
docname "Arrow", "graph:path:shape", do
 dsyntax "arrow x, y, w, h, ax, ay"
 synopsis <<Draw an arraw>>
 description << Draw an arraw>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of  [TODO: what ?]>>
 parameter "real", "h", <<height of [TODO: what ?]>>
 parameter "real", "ax", <<[TODO]>>
 parameter "real", "ay", <<[TODO]>>

#
docname "FillColorName", "graph:attribute", do
 dsyntax "color n, a"
 synopsis <<Set the fill color>>
 description << Set the color for fill.>>
 parameters
 parameter "text", "n", <<The name of the color, which can be one of the SVG color keywork names, or in one of these formats: #RGB or #RRGGBB  (each of R, G, and B being a single hex digit).>>
 parameter "real", "a", <<The red component of an color, is in the range 0.0 to 1.0.>>

#
docname "ZFar", "", do
 dsyntax "z_far zf"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "zf", <<>>

#
docname "NewTableAt", "", do
 dsyntax "table x, y, r, c, b"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>
 parameter "real", "y", <<>>
 parameter "integer", "r", <<>>
 parameter "integer", "c", <<>>
 parameter "tree", "b", <<>>

#
docname "WriteTree", "basics", do
 dsyntax "write toWrite"
 synopsis <<>>
 description << >>
 parameters
 parameter "tree", "toWrite", <<>>

 return_value "tree", <<>>
#
docname "Point", "graph:path", do
 dsyntax "point x, y, z, s"
 synopsis <<Draw a point>>
 description << Draw a point with the given size>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "z", <<z-coordinate>>
 parameter "real", "s", <<THe size of the point>>

#
docname "FontSlant", "text:font", do
 dsyntax "slant a"
 synopsis <<Set slant percentage.>>
 description << Set slant percentage.[TODO: Jaurais plutot vu une valeur de a/50 pour que slant 100 donne fontItalic 2, qui est le max] >>
 parameters
 parameter "real", "a", <<slant percentage>>

#
docname "Shape", "code:graph", do
 dsyntax "shape t"
 synopsis <<Make the shape selectable>>
 description << Evaluate the child and mark the current shape. Make the shape sensible to mosue events like selection, motion, rotation...>>
 parameters
 parameter "tree", "t", <<The code of the shape.>>

 return_value "tree", <<The result of the child execution.>>
#
docname "Scale", "graph:transform", do
 dsyntax "scale x, y, z"
 synopsis <<Scaling along three axes>>
 description << Scaling along three axes>>
 parameters
 parameter "real", "x", <<x-scale factor.>>
 parameter "real", "y", <<y-scale factor.>>
 parameter "real", "z", <<z-scale factor.>>

#
docname "Constant", "code", do
 dsyntax "constant t"
 synopsis <<a constant tree>>
 description << A tree that cannot be modify.>>
 parameters
 parameter "tree", "t", <<the tree that is constant>>

 return_value "tree", <<the tree>>
#
docname "FillColorHSV", "", do
 dsyntax "color_hsv h, s, v, a"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "h", <<>>
 parameter "real", "s", <<>>
 parameter "real", "v", <<>>
 parameter "real", "a", <<>>

#
docname "FillColorHSL", "", do
 dsyntax "color_hsl h, s, l, a"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "h", <<>>
 parameter "real", "s", <<>>
 parameter "real", "l", <<>>
 parameter "real", "a", <<>>

#
docname "MaterialBackEmission", "lighting", do
 dsyntax "material_back_emission r, g, b, a"
 synopsis <<Select the emission of the material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "LightSpotDirection", "lighting", do
 dsyntax "light_spot_direction x, y, z"
 synopsis <<Select the direction of spot lights>>
 description << >>
 parameters
 parameter "real", "x", <<>>
 parameter "real", "y", <<>>
 parameter "real", "z", <<>>

#
docname "SpeechBalloon", "graph:path:shape", do
 dsyntax "speech_balloon x, y, w, h, r, ax, ay"
 synopsis <<Speech balloon>>
 description << Speech balloon with radius r for rounded corners, and point a for the tail>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of the balloon>>
 parameter "real", "h", <<height of the balloon>>
 parameter "real", "r", <<radius>>
 parameter "real", "ax", <<[TODO]>>
 parameter "real", "ay", <<[TODO]>>

#
docname "Apply", "basics", do
 dsyntax "tree with tree"
 synopsis <<>>
 description << >>
 return_value "tree", <<>>
#
docname "LightSpotExponent", "lighting", do
 dsyntax "light_spot_exponent x"
 synopsis <<Select the cutoff exponent for spot lights>>
 description << >>
 parameters
 parameter "real", "x", <<>>

#
docname "LightAttenuation", "lighting", do
 dsyntax "light_attenuation x, y, z"
 synopsis <<Select the light attenuation factor>>
 description << >>
 parameters
 parameter "real", "x", <<>>
 parameter "real", "y", <<>>
 parameter "real", "z", <<>>

#
docname "RealToInt", "basics", do
 dsyntax "integer x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "integer", <<>>
#
docname "GroupBox", "widget", do
 dsyntax "group_box x, y, w, h, lbl, b"
 synopsis <<group box>>
 description << Draw a group box in the current frame. The x and y coordinate of widgets placed in this box are the colomn and row number. Total number of rows and columns is dynamic.>>
 parameters
 parameter "real", "x", <<x-coordinate of this box>>
 parameter "real", "y", <<y-coordinate of this box>>
 parameter "real", "w", <<width of this box>>
 parameter "real", "h", <<height of this box>>
 parameter "text", "lbl", <<The label of the box>>
 parameter "tree", "b", <<The tree describing the content of the box>>

#
docname "TextFormula", "text", do
 dsyntax "formula t"
 synopsis <<Insert a block of text corresponding to the given formula>>
 description << Insert a block of text corresponding to the given formula>>
 parameters
 parameter "tree", "t", <<The formula>>

 return_value "tree", <<The tree t given in parameter.>>
#
docname "EnableStereoscopy", "gui", do
 dsyntax "enable_stereoscopy mode"
 synopsis <<Enable or disable stereoscopie mode>>
 description << Enable or disable stereoscopie mode>>
 parameters
 parameter "symbol", "mode", <<on or off>>

 return_value "boolean", <<True if previous state was on.>>
#
docname "ShowSource", "gui", do
 dsyntax "show_source flag"
 synopsis <<Show or hide the source code panel>>
 description << Shows the source code panel when the flag is true, hide it when it is false.>>
 parameters
 parameter "boolean", "flag", <<Flag controlling whether source is shown>>

 return_value "boolean", <<The previous visibility state of the source code panel.>>
#
docname "MinimumCharacterSpace", "text:spread", do
 dsyntax "character_space b, a"
 synopsis <<[TODO: words or characters ?]>>
 description << [TODO: dans widget.cpp on parle d'espace entre mots et non entre charactere. Cette clarification rejoint celles demandees audessus sur le spacing/spread]>>
 parameters
 parameter "real", "b", <<Space before the [TODO].>>
 parameter "real", "a", <<Space after the [TODO].>>

#
docname "TestAddCloseDialog", "test", do
 dsyntax "test_add_close_dialog diagname, result, delay"
 synopsis <<Check the view [TODO]>>
 description << Check>>
 parameters
 parameter "text", "diagname", <<>>
 parameter "integer", "result", <<>>
 parameter "integer", "delay", <<>>

#
docname "RadioButtonTexture", "widget", do
 dsyntax "radio_button_texture w, h, n, l, m, a"
 synopsis <<Make a texture out of a given radio button>>
 description << Make a texture out of a given radio button>>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "n", <<Name that uniquely identify this button>>
 parameter "text", "l", <<Label of the button>>
 parameter "text", "m", <<True if the button is selected>>
 parameter "tree", "a", <<The action to perform when the button state change from non-selected to selected.>>

#
docname "VAlign", "text:spread", do
 dsyntax "vertical_align center, justify, spread, full_justify"
 synopsis <<[TODO]>>
 description << [TODO]>>
 parameters
 parameter "real", "center", <<Place the center along y-axis. An amount of 0% aligns the center of the text on the top of the box, an amount of 100% aligns the center of the text on the bottom of the box and an amount of 50% centers the text in the box.>>
 parameter "real", "justify", <<Verticaly justify the text. An amount of 0% doesn't justify (pack lines), an amount of 100% fully justifies vertically.>>
 parameter "real", "spread", <<[TODO]>>
 parameter "real", "full_justify", <<Vertically justify the lines in text boxes or overflows that are not full.>>

#
docname "TableFill", "table", do
 dsyntax "table_cell_fill b"
 synopsis <<fill of the cell>>
 description << Define the fill code for cells>>
 parameters
 parameter "tree", "b", <<fill code body.>>

#
docname "TextFlow", "text", do
 dsyntax "text_flow n"
 synopsis <<Names the flow>>
 description << Set the name of the current text flow>>
 parameters
 parameter "text", "n", <<The name of the current flow>>

 return_value "tree", <<The previous name. [TODO: The name of the previous flow or the previous name of the current flow ?]>>
#
docname "Action", "widget", do
 dsyntax "button_group_action act"
 synopsis <<Action of the group>>
 description << Set the action to be executed by the current buttonGroup.When a button in the group is clicked, this action is triggered as well as the button's action.>>
 parameters
 parameter "tree", "act", <<The action.>>

#
docname "ClearColor", "", do
 dsyntax "clear_color r, g, b, a"
 synopsis <<Set the background color>>
 description << Set the background color>>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "PushButtonTexture", "widget", do
 dsyntax "push_button_texture w, h, n, l, a"
 synopsis <<Make a texture out of a given push button>>
 description << Make a platform dependant texture out of a given push button>>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "n", <<Name that uniquely identify this button>>
 parameter "text", "l", <<Label of the button>>
 parameter "tree", "a", <<The action to perform when the button is clicked.>>

#
docname "TextValue", "text", do
 dsyntax "text_value t"
 synopsis <<Insert a block of text corresponding to the given vaue>>
 description << Insert a block of text corresponding to the given formula>>
 parameters
 parameter "tree", "t", <<The formula>>

 return_value "tree", <<The tree t given in parameter.>>
#
docname "TextRange", "text", do
 dsyntax "text_range txt, pos, sz"
 synopsis <<Extract a range of text>>
 description << >>
 parameters
 parameter "text", "txt", <<Input text>>
 parameter "integer", "pos", <<Start position>>
 parameter "integer", "sz", <<Length of the text to extract>>

#
docname "GotoPage", "page", do
 dsyntax "goto_page p"
 synopsis <<Directly go to the given page.>>
 description << Directly go to the given page.>>
 parameters
 parameter "text", "p", <<>>

 return_value "text", <<The name of the previously shown page.>>
#
docname "TextOverflow", "text:graph", do
 dsyntax "text_overflow x, y, w, h"
 synopsis <<Overflow text box>>
 description << Overflow text box for the rest of the current text flow>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>

#
docname "LightPosition3", "lighting", do
 dsyntax "light_position x, y, z"
 synopsis <<Select the position of the light>>
 description << >>
 parameters
 parameter "real", "x", <<>>
 parameter "real", "y", <<>>
 parameter "real", "z", <<>>

#
docname "ToolBar", "widget:menu", do
 dsyntax "toolbar name, lbl, loc"
 synopsis <<Add the toolBar>>
 description << Add the toolBar to the current widget at the specify location.>>
 parameters
 parameter "text", "name", <<Name that uniquely identify this toolbar>>
 parameter "text", "lbl", <<The label of the toolbar>>
 parameter "text", "loc", <<The location of the toolbar in the widget. Supported values are [n|N]*, [e|E]*, [s|S]*, [w|W|o|O]*>>

#
docname "FillTexture", "graph:attribute", do
 dsyntax "texture n"
 synopsis <<Create a GL texture>>
 description << Build a GL texture out of an image file.
Supported format include:
BMP  Windows Bitmap
GIF  Graphic Interchange Format (optional)
JPG	 Joint Photographic Experts Group
JPEG Joint Photographic Experts Group
PNG	 Portable Network Graphics
PBM  Portable Bitmap
PGM  Portable Graymap
PPM  Portable Pixmap
TIFF Tagged Image File Format
XBM  X11 Bitmap
XPM X11 Pixmap>>
 parameters
 parameter "text", "n", <<The image filename.>>

#
docname "ColorChooser", "", do
 dsyntax "color_chooser x, y, w, h, t"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>
 parameter "real", "y", <<>>
 parameter "real", "w", <<>>
 parameter "real", "h", <<>>
 parameter "tree", "t", <<>>

#
docname "ShaderSet", "lighting", do
 dsyntax "shader_set t"
 synopsis <<Set a shader uniform or attribute value>>
 description << >>
 parameters
 parameter "tree", "t", <<Assignment to a shader variable>>

#
docname "LightAmbient", "lighting", do
 dsyntax "light_ambient r, g, b, a"
 synopsis <<Select the ambient light>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "PolygonOffset", "graph", do
 dsyntax "polygon_offset f0, f1, u0, u1"
 synopsis <<Set the polygon offset factors>>
 description << Set the polygon offset factors>>
 parameters
 parameter "real", "f0", <<factor base>>
 parameter "real", "f1", <<factor increment>>
 parameter "real", "u0", <<unit base>>
 parameter "real", "u1", <<unit increment>>

 return_value "integer", <<the current polygon offset>>
#
docname "Widget", "code:graph:widget", do
 dsyntax "active_widget t"
 synopsis <<Make the widget clickable>>
 description << Create a context for active widgets, e.g. buttons>>
 parameters
 parameter "tree", "t", <<The code that represent the widget.>>

 return_value "tree", <<The result of the child execution.>>
#
docname "Margins", "text:spread", do
 dsyntax "margins l, r"
 synopsis <<Set the horizontal margin for text>>
 description << Set the minimum space allowed around the page. [TODO: Quelle valeur faut-il mettre si on ne veut modifier que la valeur gauche (ou droite) est-ce -1, ou est-ce que des valeurs negatives sont autorisees et que dans ce cas on peut ecrire dans la marge ?]>>
 parameters
 parameter "real", "l", <<left margin>>
 parameter "real", "r", <<right margin>>

#
docname "TimeMinutes", "time", do
 dsyntax "minutes t"
 synopsis <<Extract minutes (local time) from timestamp>>
 description << >>
 parameters
 parameter "real", "t", <<>>

#
docname "MoveTo", "graph:path", do
 dsyntax "move_to x, y, z"
 synopsis <<move to point>>
 description << Add a 'moveTo' to the current path>>
 parameters
 parameter "real", "x", <<x-coordinate of the point to move to.>>
 parameter "real", "y", <<y-coordinate of the point to move to.>>
 parameter "real", "z", <<z-coordinate of the point to move to.>>

#
docname "FontOverline", "text:font", do
 dsyntax "overline a"
 synopsis <<Overline attribute of the font>>
 description << Select whether we overline a font. Qt doesn't support setting the size of the underline, it's on or off.>>
 parameters
 parameter "real", "a", <<Overline values: 0 is off, values > 0 are on.>>

#
docname "GeometryShaderFromFile", "graph:shading", do
 dsyntax "geometry_shader_file file"
 synopsis <<Define a geometry shader>>
 description << >>
 parameters
 parameter "text", "file", <<File name for the shader>>

#
docname "SetFileDialogDirectory", "widget", do
 dsyntax "file_chooser_directory d"
 synopsis <<File chooser directory>>
 description << Set the directory to open first. Only available in a file chooser sub tree.>>
 parameters
 parameter "text", "d", <<directory name>>

#
docname "lorem_ipsum_w", "text:debug", do
 dsyntax "lorem_ipsum words"
 synopsis <<Produce random words in pseudo-latin>>
 description << Generate random words in pseudo-latin. The text contains an arbitrary number of words, specified by the argument to the function.>>
 parameters
 parameter "integer", "words", <<Number of words>>

 return_value "tree", <<A text with the required number of words>>
#
docname "SetFileDialogLabel", "widget", do
 dsyntax "file_chooser_label lbl, v"
 synopsis <<Set labels on a file dialog>>
 description << Set labels on a file dialog. Only available in a file chooser sub tree.>>
 parameters
 parameter "text", "lbl", <<The label for the file chooser dialog box.>>
 parameter "text", "v", <<>>

#
docname "LineEdit", "widget", do
 dsyntax "line_edit x, y, w, h, u"
 synopsis <<Draw a line editor in the current frame>>
 description << A line edit allows the user to enter and edit a single line of plain text with a useful collection of editing functions, including undo and redo, cut and paste, and drag and drop.>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "u", <<The text in the line edit widget. It is an in/out parameter.>>

#
docname "Chooser", "code:chooser", do
 dsyntax "chooser n"
 synopsis <<>>
 description << Create a chooser with the given caption. A chooser shows a selection among the possible commands>>
 parameters
 parameter "text", "n", <<The caption of the chooser.>>

#
docname "LineEditTexture", "widget", do
 dsyntax "line_edit_texture w, h, u"
 synopsis <<Make a texture out of a given line editor>>
 description << >>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "u", <<The text to insert in the line edit widget.>>

#
docname "LineColorCMYK", "", do
 dsyntax "line_color_cmyk c, m, y, k, a"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "c", <<>>
 parameter "real", "m", <<>>
 parameter "real", "y", <<>>
 parameter "real", "k", <<>>
 parameter "real", "a", <<>>

#
docname "MaterialAmbient", "lighting", do
 dsyntax "material_ambient r, g, b, a"
 synopsis <<Select the ambient material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "Callout", "graph:path:shape", do
 dsyntax "callout x, y, w, h, r, ax, ay, d"
 synopsis <<callout>>
 description << Callout with radius r for corners, and point a, width b [TODO: is d or b] for the tail>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of the callout>>
 parameter "real", "h", <<height of the callout>>
 parameter "real", "r", <<radius>>
 parameter "real", "ax", <<x-coordinate of point a>>
 parameter "real", "ay", <<y-coordinate of point a>>
 parameter "real", "d", <<[TODO]>>

#
docname "TableSizedCell", "", do
 dsyntax "table_cell w, h, b"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "w", <<>>
 parameter "real", "h", <<>>
 parameter "tree", "b", <<>>

#
docname "PagePrintTime", "page", do
 dsyntax "page_print_time t"
 synopsis <<Set the freeze time used when printing.>>
 description << Set the time used when printing pages>>
 parameters
 parameter "real", "t", <<>>

 return_value "real", <<Previous time used for printing>>
#
docname "MaterialBackShininess", "lighting", do
 dsyntax "material_back_shininess x"
 synopsis <<Select the shininess of the material>>
 description << >>
 parameters
 parameter "real", "x", <<>>

#
docname "MaterialBackSpecular", "lighting", do
 dsyntax "material_back_specular r, g, b, a"
 synopsis <<Select the specular material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "QuadTo", "graph:path", do
 dsyntax "quad_to cx, cy, cz, x, y, z"
 synopsis << quadric curveTo>>
 description << Add a quadric curveTo to the current path.>>
 parameters
 parameter "real", "cx", <<x-coordinate of the control point.>>
 parameter "real", "cy", <<y-coordinate of the control point.>>
 parameter "real", "cz", <<z-coordinate of the control point.>>
 parameter "real", "x", <<x-coordinate of the point to finish to.>>
 parameter "real", "y", <<y-coordinate of the point to finish to.>>
 parameter "real", "z", <<z-coordinate of the point to finish to.>>

#
docname "FragmentShaderFromSource", "graph:shading", do
 dsyntax "fragment_shader src"
 synopsis <<Define a fragment shader>>
 description << >>
 parameters
 parameter "text", "src", <<Source code for the fragment shader>>

#
docname "LineRel", "graph:path", do
 dsyntax "line_relative x, y, z"
 synopsis <<relative line to>>
 description << Add a relative 'lineTo' to the current path>>
 parameters
 parameter "real", "x", <<delta to line to on x-axis.>>
 parameter "real", "y", <<delta to line to on y-axis.>>
 parameter "real", "z", <<delta to line to on z-axis.>>

 return_value "tree", <<>>
#
docname "PushButton", "widget", do
 dsyntax "push_button x, y, w, h, n, l, a"
 synopsis <<A push button>>
 description << Draw a simple push button in the curent frame. The look and feel of the button is platform dependant. >>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "n", <<Name that uniquely identify this button>>
 parameter "text", "l", <<Label of the button>>
 parameter "tree", "a", <<The action to perform when the button is clicked.>>

#
docname "FontSize", "text:font", do
 dsyntax "font_size s"
 synopsis <<Select a font size>>
 description << Select a font size>>
 parameters
 parameter "real", "s", <<The font size.>>

#
docname "MovieTexture", "widget", do
 dsyntax "movie_texture u"
 synopsis <<Create a texture from a video.>>
 description << Create a dynamic texture from the given movie.>>
 parameters
 parameter "text", "u", <<width>>

#
docname "TestAddMouseMove", "test", do
 dsyntax "test_add_mouse_move button, modifiers, x, y, delay"
 synopsis <<Add a mouse move event >>
 description << Add a mouse move event to the current test.>>
 parameters
 parameter "integer", "button", <<>>
 parameter "integer", "modifiers", <<>>
 parameter "integer", "x", <<>>
 parameter "integer", "y", <<>>
 parameter "integer", "delay", <<>>

#
docname "MotionBlur", "page", do
 dsyntax "motion_blur f"
 synopsis <<Set the motion blur factor>>
 description << >>
 parameters
 parameter "real", "f", <<Amount of blur, between 0 and 1>>

#
docname "ChooserPages", "code:chooser", do
 dsyntax "chooser_pages p, l"
 synopsis <<pages added to the chooser>>
 description << Add the list of pages to the chooser>>
 parameters
 parameter "symbol", "p", <<The prefix that will be added to the page name>>
 parameter "text", "l", <<The text that will be added as label prefix to the name of pages.>>

#
docname "TestAddAction", "test", do
 dsyntax "test_add_action actionName, delay"
 synopsis <<Add an action event >>
 description << Add an action event to the current test.>>
 parameters
 parameter "text", "actionName", <<>>
 parameter "integer", "delay", <<>>

#
docname "FontChooserNow", "", do
 dsyntax "font_chooser t"
 synopsis <<>>
 description << >>
 parameters
 parameter "tree", "t", <<>>

#
docname "GenDoc", "documentation", do
 dsyntax "generate_doc t"
 synopsis <<generate the doc for the specified tree >>
 description << Extract the documentation from the specified tree. >>
 parameters
 parameter "tree", "t", <<The tree from wich extracting the documentation>>

 return_value "tree", <<The Text contains the documentation, ready to be parsed. >>
#
docname "LightSpecular", "lighting", do
 dsyntax "light_specular r, g, b, a"
 synopsis <<Select the specular light>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "StarPolygon", "graph:path:shape", do
 dsyntax "star_polygon x, y, w, h, p, q"
 synopsis <<Draw a star>>
 description << GL regular p-side star polygon {p/q} centered around (cx,cy)>>
 parameters
 parameter "real", "x", <<center x-coordinate>>
 parameter "real", "y", <<center y-coordinate>>
 parameter "real", "w", <<width of the star>>
 parameter "real", "h", <<height of the star>>
 parameter "integer", "p", <<Number of branch[TODO: is OK?]>>
 parameter "integer", "q", <<[TODO]>>

#
docname "PathTexCoord", "graph:path", do
 dsyntax "path_texture x, y, z"
 synopsis <<Not supported yet>>
 description <<  NOT SUPPORTED YET. Add a texture coordinate to the path. NOT SUPPORTED YET>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "z", <<z-coordinate>>

#
docname "SetCameraUp", "gui:camera", do
 dsyntax "camera_up_vector x, y, z"
 synopsis <<Set the up direction for the camera>>
 description << >>
 parameters
 parameter "real", "x", <<X component>>
 parameter "real", "y", <<Y component>>
 parameter "real", "z", <<Z component>>

#
docname "Delete", "tree", do
 dsyntax "delete_selection k"
 synopsis <<Delete the selection>>
 description << Delete the selection (with text support)>>
 parameters
 parameter "text", "k", <<key [TODO]>>

#
docname "TestAddKeyRelease", "test", do
 dsyntax "test_add_key_release key, modifiers, delay"
 synopsis <<Add a key release event >>
 description << Add a key release event to the current test.>>
 parameters
 parameter "integer", "key", <<>>
 parameter "integer", "modifiers", <<>>
 parameter "integer", "delay", <<>>

#
docname "RotateX", "graph:transform", do
 dsyntax "rotatex rx"
 synopsis <<Rotate around X>>
 description << Rotate around X axis.>>
 parameters
 parameter "real", "rx", <<The angle of rotation in degree.[TODO : check the unit]>>

#
docname "RotateY", "graph:transform", do
 dsyntax "rotatey ry"
 synopsis <<Rotate around Y>>
 description << Rotate around Y axis.>>
 parameters
 parameter "real", "ry", <<The angle of rotation in degree.[TODO : check the unit]>>

#
docname "RotateZ", "graph:transform", do
 dsyntax "rotatez rz"
 synopsis <<Rotate around Z>>
 description << Rotate around Z axis.>>
 parameters
 parameter "real", "rz", <<The angle of rotation in degree.[TODO : check the unit]>>

#
docname "Refresh", "code:graph", do
 dsyntax "refresh interval"
 synopsis <<Set document refresh time>>
 description << Refresh the document after the given time interval.>>
 parameters
 parameter "real", "interval", <<Interval in seconds>>

#
docname "FontChooserTexture", "widget", do
 dsyntax "font_chooser_texture w, h, t"
 synopsis <<Make a texture out of a given color chooser>>
 description << Make a texture out of a given color chooser>>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "tree", "t", <<tree to update with new font>>

#
docname "TextFind", "text", do
 dsyntax "text contains text"
 synopsis <<Find a text into another larger text>>
 description << >>
#
docname "RadioButton", "widget", do
 dsyntax "radio_button x, y, w, h, n, l, m, a"
 synopsis <<Draw a radio button>>
 description << Draw a radio button in the curent frame. Associate the action to perform when the button state change from non-selected to selected. Radio buttons are mutually exclusive, if you want to have multiple groups of radio button, uses the button_group.>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "n", <<Name that uniquely identify this button>>
 parameter "text", "l", <<Label of the button>>
 parameter "text", "m", <<True if the button is selected>>
 parameter "tree", "a", <<The action to perform when the button state change from non-selected to selected.>>

#
docname "TextureWrap", "graph", do
 dsyntax "texture_wrap s, t"
 synopsis <<wrap textures or clamp them>>
 description << Record if we want to wrap textures or clamp them>>
 parameters
 parameter "boolean", "s", <<[TODO]>>
 parameter "boolean", "t", <<[TODO]>>

#
docname "SetFileDialogFilter", "widget", do
 dsyntax "file_chooser_filter d"
 synopsis <<Set the file filters>>
 description << Set the file filters (file pattern, e.g. *.img). Only available in a file chooser sub tree.>>
 parameters
 parameter "text", "d", <<filter for file>>

#
docname "SetFileDialogAction", "widget", do
 dsyntax "file_chooser_action t"
 synopsis <<File chooser action>>
 description << Set the action that will be execute when OK is pressed. Only available in a file chooser sub tree.>>
 parameters
 parameter "tree", "t", <<The action to modify and execute when file is chosen.>>

#
docname "CheckBoxButtonTexture", "widget", do
 dsyntax "check_box_button_texture w, h, n, l, m, a"
 synopsis <<Make a texture out of a given checkbox button>>
 description << Make a texture out of a given checkbox button>>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "n", <<Name that uniquely identify this button>>
 parameter "text", "l", <<Label of the button>>
 parameter "text", "m", <<True if the button is marked>>
 parameter "tree", "a", <<The action to perform when the button state change from non-set to set>>

#
docname "CheckBoxButton", "widget", do
 dsyntax "check_box_button x, y, w, h, n, l, m, a"
 synopsis <<Draw a check button>>
 description << Draw a check button in the curent frame>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "n", <<Name that uniquely identify this button>>
 parameter "text", "l", <<Label of the button>>
 parameter "text", "m", <<True if the button is marked>>
 parameter "tree", "a", <<The action to perform when the button state change from non-sed.>>

#
docname "Rectangle", "graph:path:shape", do
 dsyntax "rectangle x, y, w, h"
 synopsis <<Draw a rectangle>>
 description << Draw a rectangle>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of the rectangle>>
 parameter "real", "h", <<height of the rectangle>>

#
docname "EllipticalRectangle", "graph:path:shape", do
 dsyntax "elliptical_rectangle x, y, w, h, r"
 synopsis <<Elliptical rectangle>>
 description << Elliptical rectangle with ratio r for the elliptic sides>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of the rectangle>>
 parameter "real", "h", <<height of the rectangle>>
 parameter "real", "r", <<ration of the ellpitic sides>>

#
docname "StereoPlanes", "gui", do
 dsyntax "stereoscopy_planes cnt"
 synopsis <<Enable or disable stereoscopie mode>>
 description << Enable or disable stereoscopie mode>>
 parameters
 parameter "integer", "cnt", <<on or off>>

 return_value "boolean", <<True if previous state was on.>>
#
docname "GroupBoxTexture", "widget", do
 dsyntax "group_box_texture w, h, lbl"
 synopsis <<Texture group box.>>
 description << Make a texture out of a given group box.>>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "text", "lbl", <<The label of the box>>

#
docname "FullScreen", "gui", do
 dsyntax "full_screen flag"
 synopsis <<Enter or exit full-screen mode for the document>>
 description << When the flag is true, display the document in full-screen mode. When the flag is false, display the document in a window.>>
 parameters
 parameter "boolean", "flag", <<Flag controlling full-screen mode>>

 return_value "boolean", <<The previous full-screen state.>>
#
docname "MaterialFrontShininess", "lighting", do
 dsyntax "material_front_shininess x"
 synopsis <<Select the shininess of the material>>
 description << >>
 parameters
 parameter "real", "x", <<>>

#
docname "VMargins", "text:spread", do
 dsyntax "vertical_margins t, b"
 synopsis <<Set the vertical margin for text>>
 description << Set the minimum space allowed around the page. [TODO: Quelle valeur faut-il mettre si on ne veut modifier que la valeur gauche (ou droite) est-ce -1, ou est-ce que des valeurs negatives sont autorisees et que dans ce cas on peut ecrire dans la marge ?]>>
 parameters
 parameter "real", "t", <<top margin>>
 parameter "real", "b", <<bottom margin>>

#
docname "MenuItem", "widget:menu", do
 dsyntax "menu_item n, lbl, icon, cable, isc, t"
 synopsis <<add an entry in a menu>>
 description << Add an entry in the current menu with the label, icon, checkmark and command.>>
 parameters
 parameter "text", "n", <<Name that uniquely identify this entry>>
 parameter "text", "lbl", <<The label of the entry>>
 parameter "text", "icon", <<The name of the icon (filename).>>
 parameter "boolean", "cable", <<Should this entry carry a check box ?>>
 parameter "text", "isc", <<If this entry carries a check box, is it cheked or not.>>
 parameter "tree", "t", <<The command to execute on item selection.>>

#
docname "EndpointsStyle", "graph:path", do
 dsyntax "endpoints_style s, e"
 synopsis <<style of the path endpoints>>
 description << Specify the style of the path endpoints. Supported values are : ARROWHEAD, ARROWHEAD, POINTER, DIAMOND, CIRCLE, SQUARE, BAR, CUP, FLETCHING, HOLLOW_CIRCLEHOLLOW_SQUARE.>>
 parameters
 parameter "symbol", "s", <<start endpoint style>>
 parameter "symbol", "e", <<end endpoint style>>

 return_value "tree", <<>>
#
docname "ShapeClickAction", "mouse", do
 dsyntax "on_click t"
 synopsis <<Associate code with click.>>
 description << Associate the specified code to the click>>
 parameters
 parameter "tree", "t", <<The code to execute>>

#
docname "EyeDistance", "", do
 dsyntax "eye_distance e"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "e", <<>>

#
docname "ChooserChoice", "code:chooser", do
 dsyntax "chooser_choice n, t"
 synopsis <<Add a command in the chooser list.>>
 description << Create a chooser item and associate a command>>
 parameters
 parameter "text", "n", <<label of the command>>
 parameter "tree", "t", <<the command>>

#
docname "PageLink", "page", do
 dsyntax "page_link key, name"
 synopsis <<Link other pages to the current page>>
 description << Links the key with the named page.>>
 parameters
 parameter "text", "key", <<Key used to change pages>>
 parameter "text", "name", <<The name of the page to link>>

 return_value "text", <<The name of the page previously linked to this key.>>
#
docname "PageName", "page", do
 dsyntax "page_name n"
 synopsis <<The name of the nth page.>>
 description << Return the name of a page given its index>>
 parameters
 parameter "integer", "n", <<Index of page, starting at 0>>

 return_value "text", <<The name of the nth page>>
#
docname "EnableGlyphCache", "text", do
 dsyntax "enable_glyph_cache an"
 synopsis <<Enable or disable bitmap glyph cache>>
 description << Enable or disable the bitmap glyph cache. Enabled by default. When enabled, drawing text is faster, but typically lower quality especially when fullscreen antialiasing is available.>>
 parameters
 parameter "boolean", "an", <<on or off>>

 return_value "boolean", <<True if previous state was on.>>
#
docname "TruncatedCone", "graph", do
 dsyntax "truncated_cone x, y, z, w, h, d, r"
 synopsis <<truncated cone>>
 description << truncated cone[TODO]>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "z", <<z-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "real", "d", <<depth>>
 parameter "real", "r", <<percentage of basis : 0.0 is a cone; 1.0 is a cylinder.>>

#
docname "FragmentShaderFromFile", "graph:shading", do
 dsyntax "fragment_shader_file file"
 synopsis <<Load a fragment shader from a file>>
 description << >>
 parameters
 parameter "text", "file", <<Name of fragment shader file>>

#
docname "LightSpotCutoff", "lighting", do
 dsyntax "light_spot_cutoff x"
 synopsis <<Select the cutoff angle for spot lights>>
 description << >>
 parameters
 parameter "real", "x", <<>>

#
docname "PathColor", "graph:path", do
 dsyntax "path_color r, g, b, a"
 synopsis <<Not supported yet>>
 description << NOT SUPPORTED YET. Add a color element to the path. NOT SUPPORTED YET. >>
 parameters
 parameter "real", "r", <<The red componant of the color>>
 parameter "real", "g", <<The blue componant of the color>>
 parameter "real", "b", <<The green componant of the color>>
 parameter "real", "a", <<Alpha channel: the transparency of the color. >>

#
docname "FillAnimatedTexture", "graph:attribute", do
 dsyntax "animated_texture n"
 synopsis <<Create a GL animated texture>>
 description << Build a GL texture images from an animated image file. Supported format are:
GIF	Animated Graphic Interchange Format
                           MNG	Animated portable Network Graphics
                            others [TODO:  description is troncated] >>
 parameters
 parameter "text", "n", <<The animation filename.>>

#
docname "Triangle", "graph:path:shape", do
 dsyntax "triangle x, y, w, h"
 synopsis <<Isocele triangle>>
 description << Draw an isocele triangle>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<base of the triangle>>
 parameter "real", "h", <<height of the triangle>>

#
docname "Checkout", "code:checkout", do
 dsyntax "checkout t"
 synopsis <<>>
 description << Checkout a branch or a commit>>
 parameters
 parameter "text", "t", <<The name of the branch, or the commit ID, to checkout.>>

#
docname "LightDiffuse", "lighting", do
 dsyntax "light_diffuse r, g, b, a"
 synopsis <<Select the diffuse light>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "Spacing", "text:spread", do
 dsyntax "character_spacing factor"
 synopsis <<[TODO]>>
 description << [TODO]>>
 parameters
 parameter "real", "factor", <<[TODO]>>

#
docname "PicturePacker", "graph:debug", do
 dsyntax "picture_packer tw, th, iw, ih, pw, ph, t"
 synopsis <<Debug the bin packer>>
 description << Debug the bin packer>>
 parameters
 parameter "integer", "tw", <<width>>
 parameter "integer", "th", <<height>>
 parameter "integer", "iw", <<[TODO]>>
 parameter "integer", "ih", <<>>
 parameter "integer", "pw", <<>>
 parameter "integer", "ph", <<>>
 parameter "tree", "t", <<>>

#
docname "MaterialBackDiffuse", "lighting", do
 dsyntax "material_back_diffuse r, g, b, a"
 synopsis <<Select the diffuse material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "RightTriangle", "graph:path:shape", do
 dsyntax "right_triangle x, y, w, h"
 synopsis <<Right triangle>>
 description << Draw a right triangle>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<base of the triangle>>
 parameter "real", "h", <<height of the triangle>>

#
docname "TestAddMousePress", "test", do
 dsyntax "test_add_mouse_press button, modifiers, x, y, delay"
 synopsis <<Add a mouse button press event >>
 description << Add a mouse button press event to the current test.>>
 parameters
 parameter "integer", "button", <<>>
 parameter "integer", "modifiers", <<>>
 parameter "integer", "x", <<>>
 parameter "integer", "y", <<>>
 parameter "integer", "delay", <<>>

#
docname "TextureTransform", "graph", do
 dsyntax "texture_transform t"
 synopsis <<Apply a texture transformation>>
 description << Apply a texture transformation.[TODO: de quel genre ?]>>
 parameters
 parameter "tree", "t", <<[TODO]>>

 return_value "tree", <<The result of the child evaluation.>>
#
docname "TableBorder", "table", do
 dsyntax "table_cell_border b"
 synopsis <<Define the border code for cells>>
 description << Define the border code for cells. The short name is border.>>
 parameters
 parameter "tree", "b", <<border code body.>>

#
docname "ColorChooserTexture", "widget", do
 dsyntax "color_chooser_texture w, h, t"
 synopsis <<Make a texture out of a given color chooser>>
 description << Make a texture out of a given color chooser>>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "tree", "t", <<tree to update with new color>>

#
docname "ChooserCommands", "code:chooser", do
 dsyntax "chooser_commands p, t"
 synopsis <<Add all commands from the symbols list.>>
 description <<  Add all commands in the current symbol table that have the given prefix>>
 parameters
 parameter "text", "p", <<The prefix>>
 parameter "text", "t", <<The label>>

#
docname "CubicTo", "graph:path", do
 dsyntax "cubic_to c1x, c1y, c1z, c2x, c2y, c2z, x, y, z"
 synopsis <<cubic curveTo>>
 description << Add a cubic curveTo to the current path>>
 parameters
 parameter "real", "c1x", <<x-coordinate of the first control point.>>
 parameter "real", "c1y", <<y-coordinate of the first control point.>>
 parameter "real", "c1z", <<z-coordinate of the first control point.>>
 parameter "real", "c2x", <<x-coordinate of the second control point.>>
 parameter "real", "c2y", <<y-coordinate of the second control point.>>
 parameter "real", "c2z", <<z-coordinate of the second control point.>>
 parameter "real", "x", <<x-coordinate of the point to finish to.>>
 parameter "real", "y", <<y-coordinate of the point to finish to.>>
 parameter "real", "z", <<z-coordinate of the point to finish to.>>

#
docname "LineColorHSL", "", do
 dsyntax "line_color_hsl h, s, l, a"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "h", <<>>
 parameter "real", "s", <<>>
 parameter "real", "l", <<>>
 parameter "real", "a", <<>>

#
docname "LineColorHSV", "", do
 dsyntax "line_color_hsv h, s, v, a"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "h", <<>>
 parameter "real", "s", <<>>
 parameter "real", "v", <<>>
 parameter "real", "a", <<>>

#
docname "ShowStatistics", "gui", do
 dsyntax "show_statistics flag"
 synopsis <<Control the display of rendering statistics>>
 description << >>
 parameters
 parameter "boolean", "flag", <<Flag controlling display of rendering statistics (fps)>>

#
docname "RoundedRectangle", "graph:path:shape", do
 dsyntax "rounded_rectangle x, y, w, h, r"
 synopsis <<Rounded rectangle>>
 description << Rounded rectangle with radius r for the rounded corners>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of the rectangle>>
 parameter "real", "h", <<height of the rectangle>>
 parameter "real", "r", <<corner radius>>

#
docname "MaterialFrontSpecular", "lighting", do
 dsyntax "material_front_specular r, g, b, a"
 synopsis <<Select the specular material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "FontUnderline", "text:font", do
 dsyntax "underline a"
 synopsis <<Underline attribute of the font>>
 description << Select whether we underline a font. Qt doesn't support setting the size of the underline, it's on or off.>>
 parameters
 parameter "real", "a", <<Underline values: 0 is off, values > 0 are on.>>

#
docname "SetEye", "gui:camera", do
 dsyntax "camera_position x, y, z"
 synopsis <<Set the camera position>>
 description << >>
 parameters
 parameter "real", "x", <<X coordinate>>
 parameter "real", "y", <<Y coordinate>>
 parameter "real", "z", <<Z coordinate>>

#
docname "TimeYearDay", "time", do
 dsyntax "year_day t"
 synopsis <<Extract year day (1-365) from timestamp>>
 description << >>
 parameters
 parameter "real", "t", <<>>

#
docname "DoubleArrow", "graph:path:shape", do
 dsyntax "double_arrow x, y, w, h, ax, ay"
 synopsis <<Double arraw>>
 description << Draw a symetric double arraw>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of  [TODO: what ?]>>
 parameter "real", "h", <<height of [TODO: what ?]>>
 parameter "real", "ax", <<[TODO]>>
 parameter "real", "ay", <<[TODO]>>

#
docname "FontStretch", "text:font", do
 dsyntax "stretch s"
 synopsis <<Set font stretching factor>>
 description << Set font stretching factor. Qt font stretch ranges from 0 to 4000, with 100 = 100%.>>
 parameters
 parameter "real", "s", <<The font stretching factor. Value range is from 0 to 4000, with 100 = 100%>>

#
docname "SubMenu", "widget:menu", do
 dsyntax "submenu name, lbl, icon"
 synopsis <<Create/Select a submenu>>
 description << Add the submenu to the current menu. If the submenu already exist, it is updated and set as the current menu>>
 parameters
 parameter "text", "name", <<Name that uniquely identify this menu>>
 parameter "text", "lbl", <<The label of the menu>>
 parameter "text", "icon", <<The name of the icon (filename).>>

#
docname "TimeSeconds", "time", do
 dsyntax "seconds t"
 synopsis <<Extract seconds from timestamp>>
 description << >>
 parameters
 parameter "real", "t", <<>>

#
docname "VertexShaderFromSource", "lighting", do
 dsyntax "vertex_shader src"
 synopsis <<Define a vertex shader>>
 description << >>
 parameters
 parameter "text", "src", <<>>

#
docname "VertexShaderFromFile", "lighting", do
 dsyntax "vertex_shader_file file"
 synopsis <<Define a vertex shader>>
 description << >>
 parameters
 parameter "text", "file", <<>>

#
docname "TestAddKeyPress", "test", do
 dsyntax "test_add_key_press key, modifiers, delay"
 synopsis <<Add a key press event >>
 description << Add a key press event to the current test.>>
 parameters
 parameter "integer", "key", <<>>
 parameter "integer", "modifiers", <<>>
 parameter "integer", "delay", <<>>

#
docname "TextEditKey", "text", do
 dsyntax "text_edit_key k"
 synopsis <<[TODO]>>
 description << Send a key to the text editing activities. [TODO: Concretementca fait quoi ???]>>
 parameters
 parameter "text", "k", <<key name>>

 return_value "boolean", <<true/false [TODO]>>
#
docname "TextBox", "text:graph", do
 dsyntax "text_box x, y, w, h, t"
 synopsis <<Create a new page layout>>
 description << Create a new page layout and render text in it.>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "tree", "t", <<text description>>

 return_value "tree", <<t evaluation result>>
#
docname "TransZ", "graph:transform", do
 dsyntax "translatez z"
 synopsis <<Translate along Z>>
 description << Translate along Z-axis>>
 parameters
 parameter "real", "z", <<z translation.>>

#
docname "TransY", "graph:transform", do
 dsyntax "translatey y"
 synopsis <<Translate along Y>>
 description << Translate along Y-axis>>
 parameters
 parameter "real", "y", <<y translation.>>

#
docname "TransX", "graph:transform", do
 dsyntax "translatex x"
 synopsis <<Translate along X>>
 description << Translate along X-axis>>
 parameters
 parameter "real", "x", <<x translation.>>

#
docname "FileChooser", "", do
 dsyntax "file_chooser x, y, w, h, t"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>
 parameter "real", "y", <<>>
 parameter "real", "w", <<>>
 parameter "real", "h", <<>>
 parameter "tree", "t", <<>>

#
docname "GeometryShaderFromSource", "graph:shading", do
 dsyntax "geometry_shader src"
 synopsis <<Define a geometry shader>>
 description << >>
 parameters
 parameter "text", "src", <<Source code for the shader>>

#
docname "MaterialBackAmbient", "lighting", do
 dsyntax "material_back_ambient r, g, b, a"
 synopsis <<Select the ambient material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "MaterialShininess", "lighting", do
 dsyntax "material_shininess x"
 synopsis <<Select the shininess of the material>>
 description << >>
 parameters
 parameter "real", "x", <<>>

#
docname "Translate", "graph:transform", do
 dsyntax "translate x, y, z"
 synopsis <<Translation along three axes>>
 description << Translation along three axes>>
 parameters
 parameter "real", "x", <<x translation.>>
 parameter "real", "y", <<y translation.>>
 parameter "real", "z", <<z translation.>>

#
docname "Cylinder", "graph", do
 dsyntax "cylinder x, y, z, w, h, d"
 synopsis <<cylinder>>
 description << cylinder[TODO]>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "z", <<z-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "real", "d", <<depth>>

#
docname "SetAttribute", "tree", do
 dsyntax "set_attribute n, t"
 synopsis <<set attribute is selection>>
 description << Insert the tree in all shapes in the selection>>
 parameters
 parameter "text", "n", <<Attribute name>>
 parameter "tree", "t", <<Attribute value >>

#
docname "ShapeMouseoverAction", "mouse", do
 dsyntax "on_mouseover t"
 synopsis <<Associate code with mouse over>>
 description << Associate the specified code to the mouse over>>
 parameters
 parameter "tree", "t", <<The code to execute>>

#
docname "ChooserBranches", "code:chooser", do
 dsyntax "chooser_branches p, l"
 synopsis <<branches added to the chooser>>
 description << Add the list of project branches to the chooser>>
 parameters
 parameter "symbol", "p", <<The action to execute when branch is selected (will be passed branch name as text)>>
 parameter "text", "l", <<The text that will be added as label prefix to the name of branches.>>

#
docname "FontScaling", "text:font", do
 dsyntax "font_scaling s, ms"
 synopsis <<Change the font scaling factor>>
 description << Change the font scaling factor>>
 parameters
 parameter "real", "s", <<Scaling factor>>
 parameter "real", "ms", <<Minimum AA size>>

 return_value "tree", <<>>
#
docname "MaterialSpecular", "lighting", do
 dsyntax "material_specular r, g, b, a"
 synopsis <<Select the specular material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "MaterialDiffuse", "lighting", do
 dsyntax "material_diffuse r, g, b, a"
 synopsis <<Select the diffuse material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "TableMargins2", "", do
 dsyntax "table_cell_margins w, h"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "w", <<>>
 parameter "real", "h", <<>>

#
docname "FrameTexture", "widget", do
 dsyntax "frame_texture w, h, p"
 synopsis <<A texture with content>>
 description << Make a texture out of the described content>>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "tree", "p", <<The program that represent the content of the frame>>

 return_value "tree", <<The result of 'prog' evaluation>>
#
docname "WriteLnTree", "basics", do
 dsyntax "writeln toWrite"
 synopsis <<>>
 description << >>
 parameters
 parameter "tree", "toWrite", <<>>

 return_value "tree", <<>>
#
docname "FillColorCMYK", "", do
 dsyntax "color_cmyk c, m, y, k, a"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "c", <<>>
 parameter "real", "m", <<>>
 parameter "real", "y", <<>>
 parameter "real", "k", <<>>
 parameter "real", "a", <<>>

#
docname "MaterialFrontDiffuse", "lighting", do
 dsyntax "material_front_diffuse r, g, b, a"
 synopsis <<Select the diffuse material>>
 description << >>
 parameters
 parameter "real", "r", <<>>
 parameter "real", "g", <<>>
 parameter "real", "b", <<>>
 parameter "real", "a", <<>>

#
docname "MoveRel", "graph:path", do
 dsyntax "move_relative x, y, z"
 synopsis <<relative moveTo>>
 description << Add a relative moveTo>>
 parameters
 parameter "real", "x", <<delta to move to on x-axis.>>
 parameter "real", "y", <<delta to move to on y-axis.>>
 parameter "real", "z", <<delta to move to on z-axis.>>

#
docname "SetScaling", "gui:camera", do
 dsyntax "camera_scaling scaling"
 synopsis <<Set the camera scaling factor>>
 description << >>
 parameters
 parameter "real", "scaling", <<Scaling factor>>

#
docname "ShaderProgram", "lighting", do
 dsyntax "shader_program code"
 synopsis <<Define a shader program>>
 description << >>
 parameters
 parameter "tree", "code", <<>>

#
docname "LineWidth", "graph:attribute", do
 dsyntax "line_width lw"
 synopsis <<Select the line width for OpenGL>>
 description << Set the line width for OpenGL>>
 parameters
 parameter "real", "lw", <<The line width to set.>>

#
docname "LineColorName", "graph:attribute", do
 dsyntax "line_color n, a"
 synopsis <<Set the line color>>
 description << Set the color for lines.>>
 parameters
 parameter "text", "n", <<The name of the color, which can be one of the SVG color keywork names, or in one of these formats: #RGB or #RRGGBB  (each of R, G, and B being a single hex digit).>>
 parameter "real", "a", <<The red component of an color, is in the range 0.0 to 1.0.>>

#
docname "LoadTSV", "basics", do
 dsyntax "load_tsv f, p"
 synopsis <<>>
 description << >>
 parameters
 parameter "text", "f", <<>>
 parameter "text", "p", <<>>

 return_value "tree", <<>>
#
docname "LoadCSV", "basics", do
 dsyntax "load_csv f, p"
 synopsis <<>>
 description << >>
 parameters
 parameter "text", "f", <<>>
 parameter "text", "p", <<>>

 return_value "tree", <<>>
#
docname "TestAddMouseDClick", "test", do
 dsyntax "test_add_mouse_dclick button, modifiers, x, y, delay"
 synopsis <<Add a mouse button double click event >>
 description << Add a mouse button double click event to the current test.>>
 parameters
 parameter "integer", "button", <<>>
 parameter "integer", "modifiers", <<>>
 parameter "integer", "x", <<>>
 parameter "integer", "y", <<>>
 parameter "integer", "delay", <<>>

#
docname "PageThumbnail", "page", do
 dsyntax "page_thumbnail s, i, p"
 synopsis <<Generate a page thumbnail as a texture>>
 description << >>
 parameters
 parameter "real", "s", <<Scaling of the thumbnail>>
 parameter "real", "i", <<Refresh interval>>
 parameter "text", "p", <<Page name>>

#
docname "FileChooserTexture", "widget", do
 dsyntax "file_chooser_texture w, h, t"
 synopsis <<Make a texture out of a given file chooser>>
 description << Make a texture out of a given file chooser>>
 parameters
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "tree", "t", <<tree to update with new file>>

#
docname "Menu", "widget:menu", do
 dsyntax "menu n, lbl, icon"
 synopsis <<Create/Select a menu>>
 description << Add the menu to the current menu bar or create the contextual menu. If the menu already exist, it is updated and set as the current menu>>
 parameters
 parameter "text", "n", <<Name that uniquely identify this menu>>
 parameter "text", "lbl", <<The label of the menu>>
 parameter "text", "icon", <<The name of the icon (filename).>>

#
docname "Log2", "basics", do
 dsyntax "log2 x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "LoadFile", "basics", do
 dsyntax "load file"
 synopsis <<>>
 description << >>
 parameters
 parameter "text", "file", <<>>

 return_value "tree", <<>>
#
docname "FromInch", "code:unit", do
 dsyntax " x inch"
 synopsis <<Convert from inch to pixels>>
 description << Convert from inch to pixels>>
 parameters
 parameter "real", "x", <<The value in inch>>

 return_value "real", <<The value in pixel. >>
#
docname "Exit", "code", do
 dsyntax "exit n"
 synopsis <<Exit from Tao>>
 description << Exit from Tao with the given value>>
 parameters
 parameter "integer", "n", <<exit parameter>>

#
docname "Font", "text:font", do
 dsyntax "font f"
 synopsis <<Select a font family>>
 description << Select a font family>>
 parameters
 parameter "tree", "f", <<The font description>>

#
docname "ArcCos", "basics", do
 dsyntax "acos x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "ArcTan", "basics", do
 dsyntax "atan x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "ArcSin", "basics", do
 dsyntax "asin x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "Cone", "graph", do
 dsyntax "cone x, y, z, w, h, d"
 synopsis <<cone>>
 description << cone[TODO]>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "z", <<z-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "real", "d", <<depth>>

#
docname "Cube", "graph", do
 dsyntax "cube x, y, z, w, h, d"
 synopsis <<cube like>>
 description << parallelepiped rectangle>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "z", <<z-coordinate>>
 parameter "real", "w", <<width>>
 parameter "real", "h", <<height>>
 parameter "real", "d", <<depth>>

#
docname "TimeYear", "time", do
 dsyntax "year t"
 synopsis <<Extract year from timestamp>>
 description << >>
 parameters
 parameter "real", "t", <<>>

#
docname "SetZoom", "gui", do
 dsyntax "zoom z"
 synopsis <<Set current level of zoom>>
 description << >>
 parameters
 parameter "real", "z", <<Zoom factor>>

#
docname "IntToText", "basics", do
 dsyntax "text x"
 synopsis <<>>
 description << >>
 parameters
 parameter "integer", "x", <<>>

 return_value "text", <<>>
#
docname "Path", "graph:path", do
 dsyntax "path t"
 synopsis <<Start a path>>
 description << Evaluate the child tree within a polygon>>
 parameters
 parameter "tree", "t", <<The definition of the path.>>

 return_value "tree", <<The result of the child evaluation.>>
#
docname "Page", "page", do
 dsyntax "page name, body"
 synopsis <<Create a page in a document.>>
 description << Create a new page in the document with the given name, or add to the content of a previously created page. The body contents will be evaluated only when the page is being displayed. The order of pages in the document is the order of page creation.>>
 parameters
 parameter "text", "name", <<Name of the page.>>
 parameter "tree", "body", <<Content of the page.>>

 return_value "text", <<The name of the previous page>>
#
docname "Star", "graph:path:shape", do
 dsyntax "star x, y, w, h, p, r"
 synopsis <<Draw a star>>
 description << GL regular p-side star centered around (cx,cy) inner radius ratio r>>
 parameters
 parameter "real", "x", <<center x-coordinate>>
 parameter "real", "y", <<center y-coordinate>>
 parameter "real", "w", <<width of the star>>
 parameter "real", "h", <<height of the star>>
 parameter "integer", "p", <<Number of branch[TODO: is OK?]>>
 parameter "real", "r", <<inner radius ratio>>

#
docname "Sqrt", "basics", do
 dsyntax "sqrt x"
 synopsis <<>>
 description << >>
 parameters
 parameter "real", "x", <<>>

 return_value "real", <<>>
#
docname "ComputeSha1", "basics", do
 dsyntax "sha1 t"
 synopsis <<>>
 description << >>
 parameters
 parameter "tree", "t", <<>>

 return_value "tree", <<>>
 see "sha"
#
docname "ShowHide", "page", do
 dsyntax "show amount"
 synopsis <<Show or hide elements>>
 description << >>
 parameters
 parameter "real", "amount", <<Amount of global transparency>>

#
docname "IntToReal", "basics", do
 dsyntax "real x"
 synopsis <<>>
 description << >>
 parameters
 parameter "integer", "x", <<>>

 return_value "real", <<>>
#
docname "ChooserCommits", "code:chooser", do
 dsyntax "chooser_commits b, p, l"
 synopsis <<commits added to the chooser>>
 description << Add the branch history (commits) to the chooser>>
 parameters
 parameter "text", "b", <<The branch name>>
 parameter "symbol", "p", <<The action to execute when commit is selected (will be passed commit ID as text)>>
 parameter "text", "l", <<The text that will be added as label prefix to the commit log.>>

#
docname "GenAllDoc", "documentation", do
 dsyntax "generate_all_doc filename"
 synopsis <<Generate all the documentation. >>
 description << Extract the documentation from the context, the primitive and the current document. It writes the documentation into the specified files if any. >>
 parameters
 parameter "text", "filename", <<File name for the documentation>>

 return_value "tree", <<The Text contains the documentation, ready to be parsed. >>
#
docname "LoadText", "text:file", do
 dsyntax "load_text f"
 synopsis <<Load a text file from disk>>
 description << Load a text file from disk. It uses the 'doc' prefix to look into resources>>
 parameters
 parameter "text", "f", <<file name>>

 return_value "tree", <<The content of the file.>>
#
docname "LoadData", "basics", do
 dsyntax "load_data f, p, fs, rs"
 synopsis <<>>
 description << >>
 parameters
 parameter "text", "f", <<>>
 parameter "text", "p", <<>>
 parameter "text", "fs", <<>>
 parameter "text", "rs", <<>>

 return_value "tree", <<>>
#
docname "LineTo", "graph:path", do
 dsyntax "line_to x, y, z"
 synopsis <<line to point>>
 description << Add a 'lineTo' to the current path>>
 parameters
 parameter "real", "x", <<x-coordinate of the point to line to.>>
 parameter "real", "y", <<y-coordinate of the point to line to.>>
 parameter "real", "z", <<z-coordinate of the point to line to.>>

#
docname "TestAddMouseRelease", "test", do
 dsyntax "test_add_mouse_release button, modifiers, x, y, delay"
 synopsis <<Add a mouse button release event >>
 description << Add a mouse button release event to the current test.>>
 parameters
 parameter "integer", "button", <<>>
 parameter "integer", "modifiers", <<>>
 parameter "integer", "x", <<>>
 parameter "integer", "y", <<>>
 parameter "integer", "delay", <<>>

#
docname "LineStipple", "graph:attribute", do
 dsyntax "line_stipple p, s"
 synopsis <<line stipple pattern>>
 description << Select the line stipple pattern for OpenGL>>
 parameters
 parameter "integer", "p", <<pattern [TODO: which value to which pattern ?]>>
 parameter "integer", "s", <<scale>>

#
docname "Locally", "code", do
 dsyntax "locally t"
 synopsis <<Make a local context>>
 description << Evaluate the child tree while preserving the current state>>
 parameters
 parameter "tree", "t", <<The code to execute in a local context>>

 return_value "tree", <<The result of the child execution.>>
#
docname "VSpacing", "text:spread", do
 dsyntax "line_spacing factor"
 synopsis <<[TODO]>>
 description << [TODO]>>
 parameters
 parameter "real", "factor", <<[TODO]>>

#
docname "Ellipse", "graph:path:shape", do
 dsyntax "ellipse x, y, w, h"
 synopsis <<Ellipse>>
 description << Draw an ellipse centered around (cx,cy) size w * h>>
 parameters
 parameter "real", "x", <<x-coordinate>>
 parameter "real", "y", <<y-coordinate>>
 parameter "real", "w", <<width of the ellipse>>
 parameter "real", "h", <<height of the ellipse>>

#
docname "FontBold", "text:font", do
 dsyntax "bold"
 synopsis <<Make the font bold.>>
 description << Make the font bold. Is equivalent to weight 75>>
#
docname "BringForward", "code:zorder", do
 dsyntax "bring_forward"
 synopsis <<Bring the selection one forward>>
 description << Swap the selected shape and the one in front of it. This is done by swaping code in the source.>>
#
docname "BringToFront", "code:zorder", do
 dsyntax "bring_to_front"
 synopsis <<Bring the selected shape to front>>
 description << Bring the selected shape to front. This moves the source code of the selection to the end of the page or program>>
#
docname "GetEye", "gui:camera", do
 dsyntax "camera_position"
 synopsis <<Return the current position of the camera>>
 description << >>
#
docname "GetScaling", "gui:camera", do
 dsyntax "camera_scaling"
 synopsis <<Get current camera scaling factor>>
 description << >>
#
docname "GetCenter", "gui:camera", do
 dsyntax "camera_target"
 synopsis <<Return the point the camera is looking at>>
 description << >>
#
docname "GetCameraUp", "gui:camera", do
 dsyntax "camera_up_vector"
 synopsis <<Return the up direction for the camera>>
 description << >>
#
docname "ChooserCloseDocument", "chooser", do
 dsyntax "chooser_command_Close_current_document"
 synopsis <<>>
 description << Close the current document window>>
#
docname "ChooserQuitTao", "chooser", do
 dsyntax "chooser_command_Quit_Tao"
 synopsis <<>>
 description << Quit the application>>
#
docname "ClosePath", "graph:path", do
 dsyntax "close_path"
 synopsis <<close the path>>
 description << Close the path back to its origin>>
#
docname "ColumnBreak", "text:spread", do
 dsyntax "column_break"
 synopsis <<Insert a column break>>
 description << Insert a column break[TODO]>>
#
docname "Day", "time", do
 dsyntax "day"
 synopsis <<Return current day of month>>
 description << >>
#
docname "DisableDepthTest", "code:graph", do
 dsyntax "disable_depth_test"
 synopsis <<Disable OpenGL depth test>>
 description << Deactivate the OpenGL depth test for polygons.>>
 return_value "boolean", <<The previous state of depth testing>>
#
docname "DocVersion", "version", do
 dsyntax "doc_version"
 synopsis <<The document version>>
 description << Return the version of the current document (if known)>>
 return_value "tree", <<The current document version>>
#
docname "EnableDepthTest", "code:graph", do
 dsyntax "enable_depth_test"
 synopsis <<Enable OpenGL depth test>>
 description << Activate the OpenGL depth test for polygons using the depth buffer.>>
 return_value "boolean", <<The previous state of depth testing>>
#
docname "GetEyeDistance", "", do
 dsyntax "eye_distance"
 synopsis <<>>
 description << >>
#
docname "FrameDepth", "frame", do
 dsyntax "frame_depth"
 synopsis <<Return the depth of the current layout frame>>
 description << Return the depth of the current layout frame>>
 return_value "real", <<Return the depth of the current layout frame>>
#
docname "FrameHeight", "frame", do
 dsyntax "frame_height"
 synopsis <<Return the height of the current layout frame>>
 description << Return the height of the current layout frame>>
 return_value "real", <<Return the height of the current layout frame>>
#
docname "FrameWidth", "frame", do
 dsyntax "frame_width"
 synopsis <<Return the width of the current layout frame>>
 description << Return the width of the current layout frame>>
 return_value "real", <<Return the width of the current layout frame>>
#
docname "GroupSelection", "code:group", do
 dsyntax "group_selection"
 synopsis <<Create the group from the selected objects>>
 description << Modify the source code to group the selection.>>
#
docname "hello_world", "tutorial", do
 dsyntax "hello_world"
 synopsis <<Returns the "Hello, World!" text.>>
 description << This is a very simple example of a module entry>>
#
docname "Hours", "time", do
 dsyntax "hours"
 synopsis <<Return hours of current time>>
 description << >>
#
docname "FontItalic", "text:font", do
 dsyntax "italic"
 synopsis <<set set italic>>
 description << Set slant value to 1 (medium value). Is equivalent to slant 100>>
#
docname "KeyboardModifiers", "gui:keyboard", do
 dsyntax "keyboard_modifiers"
 synopsis <<Return the current keyboard modifiers>>
 description << The keyboard modifiers are a bitwise or of the following values:
0x02000000	One of the Shift keys
0x04000000	One of the Ctrl / Control keys
0x08000000	One of the Alt keys
0x10000000	One of the Meta keys
0x20000000	A keypad button
0x40000000	Mode_switch key (X11 only)

Note: On Mac OS X, the Control modifier corresponds to the Command keys on the Macintosh keyboard, and the Meta modifier corresponds to the Control keys. The Keypad modifier will also be set when an arrow key is pressed as the arrow keys are considered part of the keypad.
Note: On Windows keyboards, the Meta modifier is mapped to the optional Windows key.>>
 return_value "integer", <<The current modifiers>>
#
docname "FontLight", "text:font", do
 dsyntax "light"
 synopsis <<Make the font thin.>>
 description << Make the font thinner. Is equivalent to weight 25>>
#
docname "LineBreak", "text:spread", do
 dsyntax "line_break"
 synopsis <<Insert a line break>>
 description << Insert a line break in the current text.>>
#
docname "MenuBar", "widget:menu", do
 dsyntax "menubar"
 synopsis <<Set the current menubar>>
 description << Set the current menubar to the default menuBar>>
#
docname "Minutes", "time", do
 dsyntax "minutes"
 synopsis <<Return minutes of current time>>
 description << >>
#
docname "Month", "time", do
 dsyntax "month"
 synopsis <<Return current month>>
 description << >>
#
docname "MouseButtons", "mouse", do
 dsyntax "mouse_buttons"
 synopsis <<Return the buttons of the last mouse event>>
 description << Return the buttons of the last mouse event. It is an OR combination of following values:
Qt::NoButton	0x00000000	The button state does not refer to any button (see QMouseEvent::button()).
 Qt::LeftButton	0x00000001	The left button is pressed, or an event refers to the left button. (The left button may be the right button on left-handed mice.)
 Qt::RightButton	0x00000002	The right button.
                     Qt::MidButton	0x00000004	The middle button.
                    Qt::XButton1	0x00000008	The first X button.
                   Qt::XButton2	0x00000010	The second X button.
                  >>
 return_value "integer", <<Return the buttons of the last mouse event>>
#
docname "MouseX", "mouse", do
 dsyntax "mouse_x"
 synopsis <<Mouse x-coordinate>>
 description << Mouse x-coordinate>>
 return_value "real", <<Return the position of the mouse>>
#
docname "MouseY", "mouse", do
 dsyntax "mouse_y"
 synopsis <<Mouse y-coordinate>>
 description << Mouse y-coordinate>>
 return_value "real", <<Return the position of the mouse>>
#
docname "FontOblique", "text:font", do
 dsyntax "oblique"
 synopsis <<set to oblique>>
 description << Set slant value to 2 (higher value). Is equivalent to slant 200>>
#
docname "OffLineRendering", "page", do
 dsyntax "offline_rendering"
 synopsis <<Return true if we are currently rendering to file>>
 description << >>
 return_value "boolean", <<Return the offline rendering status>>
#
docname "PageBreak", "text:spread", do
 dsyntax "page_break"
 synopsis <<Insert a page break>>
 description << Insert a page break. [TODO]>>
#
docname "PageCount", "page", do
 dsyntax "page_count"
 synopsis <<The number of page.>>
 description << Return the number of pages in the current document>>
 return_value "integer", <<Return the number of pages in the current document>>
#
docname "PageHeight", "page", do
 dsyntax "page_height"
 synopsis <<Return the height of pages>>
 description << Return the height of pages>>
 return_value "real", <<Return the height of pages>>
#
docname "PageLabel", "page", do
 dsyntax "page_label"
 synopsis <<The current page name.>>
 description << Return the current page name>>
 return_value "text", <<Return the label of the current page>>
#
docname "PageId", "page", do
 dsyntax "page_number"
 synopsis <<The current page number>>
 description << Return the number of the current page>>
 return_value "integer", <<Return the number of the current page>>
#
docname "PageSeconds", "time", do
 dsyntax "page_time"
 synopsis <<Returns the page time>>
 description << Returns the time of the current page relatively to the current document's time, or relatively to the frozen time.>>
 return_value "real", <<Return a fractional time, including milliseconds>>
#
docname "PageWidth", "page", do
 dsyntax "page_width"
 synopsis <<Return the width of pages>>
 description << Return the width of pages>>
 return_value "real", <<Return the width of pages>>
#
docname "ParaBreak", "text:spread", do
 dsyntax "paragraph_break"
 synopsis <<Insert a paragraph break>>
 description << Insert a paragraph break>>
#
docname "PiConstant", "basics", do
 dsyntax "pi"
 synopsis <<>>
 description << >>
 return_value "real", <<>>
#
docname "FontPlain", "text:font", do
 dsyntax "plain"
 synopsis <<Set plain text>>
 description << Reset the font style, the font weight and the font stretch to normal; reset the font to no underline, nor strikeout, nor overline.>>
#
docname "RandomNumber", "basics", do
 dsyntax "random"
 synopsis <<>>
 description << >>
 return_value "real", <<>>
#
docname "FontRegular", "text:font", do
 dsyntax "regular"
 synopsis <<reset bold value to neutral.>>
 description << Reset bold value to neutral. Is equivalent to weight 50.>>
#
docname "ResetTransform", "graph:transform", do
 dsyntax "reset_transform"
 synopsis <<Reset transform>>
 description << Reset transform to original projection state.>>
#
docname "ResetView", "gui", do
 dsyntax "reset_view"
 synopsis <<Reset document view to default parameters>>
 description << >>
#
docname "FontRoman", "text:font", do
 dsyntax "roman"
 synopsis <<No slant>>
 description << Set slant value to 0 (min value).>>
#
docname "Seconds", "time", do
 dsyntax "seconds"
 synopsis <<Return seconds of current time>>
 description << >>
#
docname "SendBackward", "code:zorder", do
 dsyntax "send_backward"
 synopsis <<Send the selection one backward>>
 description << Swap the selected shape and the one just behind it. This is done by swaping code in the source.>>
#
docname "SendToBack", "code:zorder", do
 dsyntax "send_to_back"
 synopsis <<Send the selected shape to back>>
 description << Send the selected shape to back. This moves the source code of the selection to the begining of the page or program>>
#
docname "SentenceBreak", "text:spread", do
 dsyntax "sentence_break"
 synopsis <<Insert a sentence break>>
 description << Insert a sentence break in the text.>>
#
docname "Separator", "widget:menu", do
 dsyntax "separator"
 synopsis <<Add a separator>>
 description << Add a separator to the current menu or menu bar or tool bar. >>
#
docname "ShaderLog", "graph:shading", do
 dsyntax "shader_log"
 synopsis <<Return the shader compilation log>>
 description << >>
#
docname "TableColumn", "table", do
 dsyntax "table_cell_column"
 synopsis <<Return the current column>>
 description << Return the current column index.>>
 return_value "tree", <<The column index.>>
#
docname "TableCellH", "table", do
 dsyntax "table_cell_h"
 synopsis <<Height of the cell.>>
 description << Get the vertical size of the current table cell>>
 return_value "tree", <<The size of the current cell along the y-axis>>
#
docname "TableRow", "table", do
 dsyntax "table_cell_row"
 synopsis <<Return the current row>>
 description << Return the current row index>>
 return_value "tree", <<the row index>>
#
docname "TableCellW", "table", do
 dsyntax "table_cell_w"
 synopsis <<Width of the cell>>
 description << Get the horizontal size of the current table cell>>
 return_value "tree", <<The size of the current cell along the x-axis>>
#
docname "TableCellX", "table", do
 dsyntax "table_cell_x"
 synopsis <<x-ccordinate of the cell center>>
 description << Get the horizontal center of the current table cell>>
 return_value "tree", <<The coordinate of the center of the current cell on x-axis>>
#
docname "TableCellY", "table", do
 dsyntax "table_cell_y"
 synopsis <<y-ccordinate of the cell center>>
 description << Get the vertical center of the current table cell>>
 return_value "tree", <<The coordinate of the center of the current cell on y-axis>>
#
docname "TableColumns", "table", do
 dsyntax "table_columns"
 synopsis <<number of columns in the current table>>
 description << Return the number of columns in the current table>>
 return_value "tree", <<number of columns in the table>>
#
docname "TableRows", "table", do
 dsyntax "table_rows"
 synopsis <<number of rows in the current table>>
 description << Return the number of rows in the current table>>
 return_value "tree", <<Number of rows in the table>>
#
docname "TaoVersion", "version", do
 dsyntax "tao_version"
 synopsis <<The Tao version>>
 description << Return the version of the Tao program>>
 return_value "tree", <<The version of the running Tao program>>
#
docname "TestCheck", "test", do
 dsyntax "test_check"
 synopsis <<Add a check point to the test>>
 description << Add a check point with its image to the test list. If the check pointis KO, the simulation is not stopped.>>
#
docname "TestReplay", "test", do
 dsyntax "test_replay"
 synopsis <<Replay test >>
 description << Replay the current test events. >>
#
docname "TestReset", "test", do
 dsyntax "test_reset"
 synopsis <<Save the current test to disc>>
 description << Save the current test to disc.>>
#
docname "TestSave", "test", do
 dsyntax "test_save"
 synopsis <<Save the current test to disc>>
 description << Save the current test to disc.>>
#
docname "TestStartRec", "test", do
 dsyntax "test_start_record"
 synopsis <<Start to record >>
 description << Start to record events in order to replay them >>
#
docname "TestStop", "test", do
 dsyntax "test_stop"
 synopsis <<Stop the recording or the playing of tests.>>
 description << Stop the recording or the playing of tests.>>
#
docname "DaySeconds", "time", do
 dsyntax "time"
 synopsis <<Return a fractional time, including milliseconds>>
 description << Returns the current document's time or the time at wich the document was frozen.>>
 return_value "real", <<Return a fractional time, including milliseconds>>
#
docname "ToggleAutoHideCursor", "gui", do
 dsyntax "toggle_auto_hide_cursor"
 synopsis <<Toggle automatic hiding of the cursor>>
 description << >>
#
docname "ToggleFullScreen", "gui", do
 dsyntax "toggle_full_screen"
 synopsis <<Toggle full-screen mode>>
 description << Toggle document display mode between full-screen and windowed mode.>>
 return_value "boolean", <<The previous full-screen state of the document.>>
#
docname "ToggleHandCursor", "gui:camera", do
 dsyntax "toggle_hand_cursor"
 synopsis <<Toggle between hand (panning) and arrow (moving) cursors>>
 description << >>
#
docname "ToggleShowStatistics", "gui", do
 dsyntax "toggle_show_statistics"
 synopsis <<Toggle display of rendering statistics>>
 description << >>
#
docname "ToggleSlideShow", "gui", do
 dsyntax "toggle_slide_show"
 synopsis <<Toggle slide-show mode>>
 description << >>
#
docname "UngroupSelection", "code:group", do
 dsyntax "ungroup_selection"
 synopsis <<ungroup the selected group>>
 description << Modify the source code to ungroup the selection>>
#
docname "WeekDay", "time", do
 dsyntax "week_day"
 synopsis <<Return current day of week>>
 description << >>
#
docname "WindowHeight", "window", do
 dsyntax "window_height"
 synopsis <<Return the height of window in which we display>>
 description << Return the height of window in which we display>>
 return_value "real", <<Return the height of window in which we display>>
#
docname "WindowWidth", "window", do
 dsyntax "window_width"
 synopsis <<Return the width of the window in which we display>>
 description << Return the width of the window in which we display>>
 return_value "real", <<Return the width of the window in which we display>>
#
docname "Year", "time", do
 dsyntax "year"
 synopsis <<Return current year>>
 description << >>
#
docname "YearDay", "time", do
 dsyntax "year_day"
 synopsis <<Return current day of year>>
 description << >>
#
docname "GetZFar", "", do
 dsyntax "z_far"
 synopsis <<>>
 description << >>
#
docname "GetZNear", "", do
 dsyntax "z_near"
 synopsis <<>>
 description << >>
#
docname "GetZoom", "gui", do
 dsyntax "zoom"
 synopsis <<Get current level of zoom>>
 description << >>
