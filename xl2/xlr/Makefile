#############################################################################
# Makefile for building: libxlr.1.0.0.dylib
# Generated by qmake (2.01a) (Qt 4.6.1) on: jeu. févr. 4 14:12:46 2010
# Project:  xlr.pro
# Template: lib
# Command: /usr/bin/qmake -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile xlr.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -D_DEBUG -D_GNU_SOURCE -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DFONT_FILE=/Library/Fonts/Arial.ttf -DMACOSX -DCONFIG_MACOSX -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -gdwarf-2 -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.5 -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -g -gdwarf-2 -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.5 -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/local/Qt4.6/mkspecs/macx-g++ -I. -I/Library/Frameworks/QtCore.framework/Versions/4/Headers -I/usr/include/QtCore -I/Library/Frameworks/QtGui.framework/Versions/4/Headers -I/usr/include/QtGui -I/usr/include -I. -I/usr/local/include -I/usr/X11/include -I/usr/X11/include/freetype2 -I. -F/Library/Frameworks
LINK          = g++
LFLAGS        = -headerpad_max_install_names -arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.5 -single_module -dynamiclib -compatibility_version	1.0 -current_version	1.0.0 -install_name	libxlr.1.dylib
LIBS          = $(SUBLIBS) -F/Library/Frameworks -L/Library/Frameworks -framework ApplicationServices -framework OpenGL -framework GLUT -L/usr/X11R6/lib -L/usr/local/lib -L/opt/local/lib -lftgl -lfontconfig -ljpeg -lpng -lpthread -lffi -lm -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMMCParser -lLLVMX86AsmPrinter -lLLVMX86CodeGen -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMX86Info -lLLVMJIT -lLLVMExecutionEngine -lLLVMCodeGen -lLLVMScalarOpts -lLLVMInstCombine -lLLVMTransformUtils -lLLVMipa -lLLVMAnalysis -lLLVMTarget -lLLVMMC -lLLVMCore -lLLVMSupport -lLLVMSystem -framework QtGui -framework QtCore 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.4

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = basics.cpp \
		compiler.cpp \
		context.cpp \
		errors.cpp \
		opcodes.cpp \
		options.cpp \
		parser.cpp \
		renderer.cpp \
		runtime.cpp \
		scanner.cpp \
		syntax.cpp \
		tree.cpp \
		types.cpp \
		master.cpp 
OBJECTS       = basics.o \
		compiler.o \
		context.o \
		errors.o \
		opcodes.o \
		options.o \
		parser.o \
		renderer.o \
		runtime.o \
		scanner.o \
		syntax.o \
		tree.o \
		types.o \
		master.o
DIST          = /usr/local/Qt4.6/mkspecs/common/unix.conf \
		/usr/local/Qt4.6/mkspecs/common/mac.conf \
		/usr/local/Qt4.6/mkspecs/common/mac-g++.conf \
		/usr/local/Qt4.6/mkspecs/qconfig.pri \
		/usr/local/Qt4.6/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.6/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.6/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.6/mkspecs/features/debug.prf \
		/usr/local/Qt4.6/mkspecs/features/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/x86_64.prf \
		/usr/local/Qt4.6/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.6/mkspecs/features/qt.prf \
		/usr/local/Qt4.6/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.6/mkspecs/features/moc.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.6/mkspecs/features/resources.prf \
		/usr/local/Qt4.6/mkspecs/features/uic.prf \
		/usr/local/Qt4.6/mkspecs/features/yacc.prf \
		/usr/local/Qt4.6/mkspecs/features/lex.prf \
		/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf \
		xlr.pro
QMAKE_TARGET  = xlr
DESTDIR       = 
TARGET        = libxlr.1.0.0.dylib
TARGETA       = libxlr.a
TARGETD       = libxlr.1.0.0.dylib
TARGET0       = libxlr.dylib
TARGET1       = libxlr.1.dylib
TARGET2       = libxlr.1.0.dylib

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-g \
		-gdwarf-2 \
		-arch \
		x86_64 \
		-Xarch_x86_64 \
		-mmacosx-version-min=10.5 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)
	$(RANLIB) $(TARGETA)

Makefile: xlr.pro  /usr/local/Qt4.6/mkspecs/macx-g++/qmake.conf /usr/local/Qt4.6/mkspecs/common/unix.conf \
		/usr/local/Qt4.6/mkspecs/common/mac.conf \
		/usr/local/Qt4.6/mkspecs/common/mac-g++.conf \
		/usr/local/Qt4.6/mkspecs/qconfig.pri \
		/usr/local/Qt4.6/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.6/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.6/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.6/mkspecs/features/debug.prf \
		/usr/local/Qt4.6/mkspecs/features/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/x86_64.prf \
		/usr/local/Qt4.6/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.6/mkspecs/features/qt.prf \
		/usr/local/Qt4.6/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.6/mkspecs/features/moc.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.6/mkspecs/features/resources.prf \
		/usr/local/Qt4.6/mkspecs/features/uic.prf \
		/usr/local/Qt4.6/mkspecs/features/yacc.prf \
		/usr/local/Qt4.6/mkspecs/features/lex.prf \
		/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf \
		/Library/Frameworks/QtGui.framework/QtGui.prl \
		/Library/Frameworks/QtCore.framework/QtCore.prl
	$(QMAKE) -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile xlr.pro
/usr/local/Qt4.6/mkspecs/common/unix.conf:
/usr/local/Qt4.6/mkspecs/common/mac.conf:
/usr/local/Qt4.6/mkspecs/common/mac-g++.conf:
/usr/local/Qt4.6/mkspecs/qconfig.pri:
/usr/local/Qt4.6/mkspecs/features/qt_functions.prf:
/usr/local/Qt4.6/mkspecs/features/qt_config.prf:
/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf:
/usr/local/Qt4.6/mkspecs/features/default_pre.prf:
/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf:
/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf:
/usr/local/Qt4.6/mkspecs/features/debug.prf:
/usr/local/Qt4.6/mkspecs/features/default_post.prf:
/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf:
/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf:
/usr/local/Qt4.6/mkspecs/features/mac/x86_64.prf:
/usr/local/Qt4.6/mkspecs/features/warn_on.prf:
/usr/local/Qt4.6/mkspecs/features/qt.prf:
/usr/local/Qt4.6/mkspecs/features/unix/thread.prf:
/usr/local/Qt4.6/mkspecs/features/moc.prf:
/usr/local/Qt4.6/mkspecs/features/mac/rez.prf:
/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf:
/usr/local/Qt4.6/mkspecs/features/resources.prf:
/usr/local/Qt4.6/mkspecs/features/uic.prf:
/usr/local/Qt4.6/mkspecs/features/yacc.prf:
/usr/local/Qt4.6/mkspecs/features/lex.prf:
/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf:
/Library/Frameworks/QtGui.framework/QtGui.prl:
/Library/Frameworks/QtCore.framework/QtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile xlr.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/xlr1.0.0 || $(MKDIR) .tmp/xlr1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/xlr1.0.0/ && $(COPY_FILE) --parents base.h basics.h compiler.h configuration.h context.h errors.h main.h opcodes.h opcodes_declare.h opcodes_define.h options.h parser.h renderer.h runtime.h scanner.h syntax.h tree.h types.h options.tbl basics.tbl .tmp/xlr1.0.0/ && $(COPY_FILE) --parents basics.cpp compiler.cpp context.cpp errors.cpp opcodes.cpp options.cpp parser.cpp renderer.cpp runtime.cpp scanner.cpp syntax.cpp tree.cpp types.cpp master.cpp .tmp/xlr1.0.0/ && (cd `dirname .tmp/xlr1.0.0` && $(TAR) xlr1.0.0.tar xlr1.0.0 && $(COMPRESS) xlr1.0.0.tar) && $(MOVE) `dirname .tmp/xlr1.0.0`/xlr1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/xlr1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

basics.o: basics.cpp basics.h \
		tree.h \
		base.h \
		configuration.h \
		context.h \
		renderer.h \
		opcodes.h \
		compiler.h \
		options.h \
		options.tbl \
		runtime.h \
		opcodes_declare.h \
		basics.tbl \
		opcodes_define.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o basics.o basics.cpp

compiler.o: compiler.cpp compiler.h \
		tree.h \
		base.h \
		configuration.h \
		options.h \
		options.tbl \
		context.h \
		renderer.h \
		runtime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o compiler.o compiler.cpp

context.o: context.cpp context.h \
		base.h \
		configuration.h \
		tree.h \
		errors.h \
		options.h \
		options.tbl \
		renderer.h \
		basics.h \
		compiler.h \
		runtime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o context.o context.cpp

errors.o: errors.cpp errors.h \
		base.h \
		configuration.h \
		options.h \
		options.tbl \
		scanner.h \
		tree.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o errors.o errors.cpp

opcodes.o: opcodes.cpp opcodes.h \
		tree.h \
		base.h \
		configuration.h \
		context.h \
		basics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o opcodes.o opcodes.cpp

options.o: options.cpp options.h \
		base.h \
		configuration.h \
		options.tbl \
		errors.h \
		renderer.h \
		tree.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o options.o options.cpp

parser.o: parser.cpp parser.h \
		scanner.h \
		base.h \
		configuration.h \
		syntax.h \
		errors.h \
		tree.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parser.o parser.cpp

renderer.o: renderer.cpp renderer.h \
		base.h \
		configuration.h \
		tree.h \
		parser.h \
		scanner.h \
		syntax.h \
		errors.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o renderer.o renderer.cpp

runtime.o: runtime.cpp runtime.h \
		base.h \
		configuration.h \
		tree.h \
		parser.h \
		scanner.h \
		syntax.h \
		renderer.h \
		context.h \
		options.h \
		options.tbl \
		opcodes.h \
		compiler.h \
		main.h \
		errors.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o runtime.o runtime.cpp

scanner.o: scanner.cpp scanner.h \
		base.h \
		configuration.h \
		errors.h \
		syntax.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scanner.o scanner.cpp

syntax.o: syntax.cpp syntax.h \
		base.h \
		configuration.h \
		scanner.h \
		tree.h \
		errors.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o syntax.o syntax.cpp

tree.o: tree.cpp tree.h \
		base.h \
		configuration.h \
		context.h \
		renderer.h \
		opcodes.h \
		options.h \
		options.tbl
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tree.o tree.cpp

types.o: types.cpp types.h \
		tree.h \
		base.h \
		configuration.h \
		context.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o types.o types.cpp

master.o: master.cpp configuration.h \
		main.h \
		tree.h \
		base.h \
		scanner.h \
		parser.h \
		syntax.h \
		renderer.h \
		errors.h \
		context.h \
		compiler.h \
		options.h \
		options.tbl \
		basics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o master.o master.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

