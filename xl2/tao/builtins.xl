0! -> 1
N! -> N * (N-1)!

// If-then-else statement
if true then TrueBody else FalseBody    -> do TrueBody
if false then TrueBody else FalseBody   -> do FalseBody

if true then TrueBody                   -> do TrueBody
if false then TrueBody                  -> false

// Graphics stuff
sphere x:real, y:real, z:real, r:real   -> sphere x,y,z,2*r,2*r,2*r,25,25
sphere r:real                           ->
    sphere 0.0, 0.0, 0.0, 2*r, 2*r, 2*r, 25, 25
circle x:real, y:real, r:real           -> ellipse x, y, 2*r, 2*r
circle r:real                           -> ellipse 0.0, 0.0, 2*r, 2*r
circular_sector x:real, y:real, r:real, a:real, b:real ->
    ellipse_arc x, y, 2*r, 2*r, a, b
circular_sector r:real, a:real, b:real  -> ellipse_arc 0.0, 0.0, 2*r,2*r, a, b
rectangle w:real, h:real                -> rectangle 0.0, 0.0, w, h
square x:real, y:real, c:real           -> rectangle x, y, c, c 
square c:real                           -> rectangle 0.0, 0.0, c, c 

rounded_rectangle x:real, y:real, w:real, h:real, r:real ->
    rounded_rectangle x, y, w, h, r, r
rounded_rectangle w:real, h:real, r:real-> rounded_rectangle 0.0, 0.0, w, h, r,r

regular_star_polygon x:real, y:real, r:real, p:integer, q:integer ->
    star_polygon x, y, 2*r, 2*r, p, q
regular_polygram x:real, y:real, r:real, p:integer, q:integer ->
        star_polygon x, y, 2*r, 2*r, p, q
regular_polygon x:real, y:real, r:real, p:integer ->
        star_polygon x, y, 2*r, 2*r, p, 1

schlÃ¤fli t, {p:integer/q:integer}       -> regular_star_polygon t, p, q
schlÃ¤fli t, {p:integer}                 -> regular_polygon t, p

equilateral_triangle t                  -> regular_polygon t, 3
regular_tetragon t                      -> regular_polygon t, 4
regular_pentagon t                      -> regular_polygon t, 5
regular_hexagon t                       -> regular_polygon t, 6
regular_heptagon t                      -> regular_polygon t, 7
regular_octagon t                       -> regular_polygon t, 8
regular_nonagon t                       -> regular_polygon t, 9
regular_decagon t                       -> regular_polygon t, 10
regular_hendecagon t                    -> regular_polygon t, 11
regular_dodecagon t                     -> regular_polygon t, 12
regular_tridecagon t                    -> regular_polygon t, 13
regular_tetradecagon t                  -> regular_polygon t, 14
regular_pentadecagon t                  -> regular_polygon t, 15
regular_hexadecagon t                   -> regular_polygon t, 16
regular_heptadecagon t                  -> regular_polygon t, 17
regular_octadecagon t                   -> regular_polygon t, 18
regular_enneadecagon t                  -> regular_polygon t, 19
regular_icosagon t                      -> regular_polygon t, 20

regular_pentagram t                     -> regular_star_polygon t, 5, 2
star t                                  -> regular_star_polygon t, 5, 2
regular_hexagram t                      -> regular_star_polygon t, 6, 2
star_of_david t                         -> regular_star_polygon t, 6, 2
regular_heptagram t                     -> regular_star_polygon t, 7, 2
star_of_lakshmi t                       -> regular_star_polygon t, 8, 2
regular_octagram t                      -> regular_star_polygon t, 8, 3
regular_nonagram t                      -> regular_star_polygon t, 9, 3
regular_decagram t                      -> regular_star_polygon t, 10, 3

x..y / t -> x + (y-x) * (1 + sin(time/t * 2*pi)) / 2

selection_background_color ->
    color 0.4..0.8 / 5.17, 0.6..0.9 / 5.21, 0.9..1 / 5.27, 0.4..0.6 / 5.7

selection_outline_color ->
    line_color 0.8..1 / 3.51, 0.3..0.7 / 3.61, 0.2..0.5 / 3.67, 0.8..1 / 3.32

handle_color ->
    color 0.8..1 / 3.51, 0.3..0.7 / 3.61, 0.2..0.5 / 3.67, 0.8..1 / 3.32

draw_selection x,y,z,w,h,d ->
    selection_background_color
    selection_outline_color
    cube x-w/2, y-h/2, z-d/2, w, h, d

draw_3D_selection x,y,z,w,h,d ->
    selection_background_color
    selection_outline_color
    cube x, y, z, w, h, d

draw_widget_selection x,y,w,h ->
    selection_outline_color
    color 0,0,0,0
    rectangle x, y, w, h

draw_selection x,y,w,h ->
    selection_background_color
    selection_outline_color
    rectangle x, y, w+4, h+4

draw_selection_rectangle x, y, w, h ->
    draw_selection x,y,w,h

draw_handle x, y, z ->
    handle_color
    line_color 0,0,0,0
    cube x, y, z, 8, 8, 8

draw_rotation_handle x, y, z ->
    selection_outline_color
    selection_background_color
    sphere x, y, z, 60, 60, 60, 10, 10
draw_rotation_x x, y, z -> draw_handle x + 50, y, z
draw_rotation_y x, y, z -> draw_handle x, y + 50, z
draw_rotation_z x, y, z -> draw_handle x, y, z + 50

draw_translation_handle x, y, z ->
    selection_outline_color
    selection_background_color
    cube x, y, z, 16, 16, 16
draw_translation_x x, y, z -> draw_handle x, y, z
draw_translation_y x, y, z -> draw_handle x, y, z
draw_translation_z x, y, z -> draw_handle x, y, z

draw_scale_handle x, y, z ->
    selection_outline_color
    selection_background_color
    cube x, y, z, 16, 16, 16
draw_scale_x x, y, z -> draw_handle x, y, z
draw_scale_y x, y, z -> draw_handle x, y, z
draw_scale_z x, y, z -> draw_handle x, y, z
