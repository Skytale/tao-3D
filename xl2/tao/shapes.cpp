// ****************************************************************************
//  shapes.cpp                                                     Tao project
// ****************************************************************************
//
//   File Description:
//
//     Drawing of elementary geometry shapes on a 2D layout
//
//
//
//
//
//
//
//
// ****************************************************************************
// This document is released under the GNU General Public License.
// See http://www.gnu.org/copyleft/gpl.html and Matthew 25:22 for details
//  (C) 1992-2010 Christophe de Dinechin <christophe@taodyne.com>
//  (C) 2010 Taodyne SAS
// ****************************************************************************

#include "shapes.h"
#include "widget.h"

TAO_BEGIN

// ============================================================================
//
//   Rectangle
//
// ============================================================================

void Rectangle::Draw(Layout *where)
// ----------------------------------------------------------------------------
//   Draw a rectangle
// ----------------------------------------------------------------------------
{
    (void) where;
}



// ============================================================================
// 
//   Rounded Rectangle
// 
// ============================================================================

void RoundedRectangle::Draw(Layout *where)
// ----------------------------------------------------------------------------
//   Draw a rounded rectangle
// ----------------------------------------------------------------------------
{
    (void) where;
}



// ============================================================================
//
//   Circle
//
// ============================================================================

void Circle::Draw(Layout *where)
// ----------------------------------------------------------------------------
//   Draw a circle
// ----------------------------------------------------------------------------
{
    (void) where;
}


Box3 Circle::Bounds()
// ----------------------------------------------------------------------------
//    Return the bounding box for a circle
// ----------------------------------------------------------------------------
{
    return Box3(center.x - radius, center.y - radius, 0,
                2*radius, 2*radius, 0);
}

TAO_END
