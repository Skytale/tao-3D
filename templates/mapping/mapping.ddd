// ****************************************************************************
//  mapping.ddd                                                     Tao project
// ****************************************************************************
//
//   File Description:
//
//     Example of some texture mapping methods with Tao Presentations.
//
//
//
//
//
//
//
//
// ****************************************************************************
// Copyright Taodyne SAS, 2011
// Contributors:
//   Jerome Forissier <jerome@taodyne.com>
//   Baptiste Soulisse <baptiste.soulisse@taodyne.com>
//
// <contact@taodyne.com>
//
// This software is a computer program whose purpose is to serve as a
// document template for the Tao Presentations application.
//
// This software is governed by the CeCILL-B license under French law and
// abiding by the rules of distribution of free software.  You can  use,
// modify and/ or redistribute the software under the terms of the CeCILL-B
// license as circulated by CEA, CNRS and INRIA at the following URL
// "http://www.cecill.info".
//
// As a counterpart to the access to the source code and  rights to copy,
// modify and redistribute granted by the license, users are provided only
// with a limited warranty  and the software's author,  the holder of the
// economic rights,  and the successive licensors  have only  limited
// liability.
//
// In this respect, the user's attention is drawn to the risks associated
// with loading,  using,  modifying and/or developing or reproducing the
// software by the user in light of its specific status of free software,
// that may mean  that it is complicated to manipulate,  and  that  also
// therefore means  that it is reserved for developers  and  experienced
// professionals having in-depth computer knowledge. Users are therefore
// encouraged to load and test the software's suitability as regards their
// requirements in conditions enabling the security of their systems and/or
// data to be ensured and,  more generally, to use and operate it in the
// same conditions as regards security.
//
// The fact that you are presently reading this means that you have had
// knowledge of the CeCILL-B license and that you accept its terms.
// ****************************************************************************


import Mapping


// ============================================================================
//
//                                   PAGES
//
// ============================================================================


page "Alpha Mapping",
// ----------------------------------------------------------------------------
//    Simulate transparent or translucent areas in an 3D object
// ----------------------------------------------------------------------------
    background 1.0
    title
    contents 100, 0,
        at_step 1
        +"A color map on texture unit 0"
    at_step 2
    map_highlight -150, 100, "metal.jpg"
    contents 100, -200,
        at_step 3
        +"An alpha map on texture unit 1"
    at_step 4
    map_highlight -150, -100, "alphaMap.jpg"
    at_step 5
    mapping
    at_step 6
    locally
        texture_unit 0
        texture "metal.jpg"
        texture_unit 1
        texture "alphaMap.jpg"
        alpha_mapping 0.15
        result_highlight 400, 0
        cube 0, 0, 0, 300, 300, 300

page "Normal Mapping",
// ----------------------------------------------------------------------------
//    Fake the lighting of bumps and dents on an object
// ----------------------------------------------------------------------------
    background 1.0
    title
    contents 100, 0,
        at_step 1
        +"A color map on texture unit 0"
    at_step 2
    map_highlight -150, 100, "face.jpg"
    contents 100, -200,
        at_step 3
        +"A normal map on texture unit 1"
    at_step 4
    map_highlight -150, -100, "normalMap.jpg"
    at_step 5
    mapping
    locally
        white_light 0, 0, 50
        material_ambient 0.3, 0.3, 0.3, 1
        material_diffuse 1.0, 1.0, 1.0, 1.0
        material_specular 0.3, 0.3, 0.3, 1.0
        material_shininess 70
        at_step 6
        color "white"
        texture_unit 0
        texture "face.jpg"
        texture_unit 1
        texture "normalMap.jpg"
        result_highlight 400, 0
        normal_mapping
        rectangle 0, 0, 300, 300

page "Displacement Mapping",
// ----------------------------------------------------------------------------
//    Modify geometry of an object in order to add details
// ----------------------------------------------------------------------------
    background 1.0
    title
    contents 100, 0,
        at_step 1
        +"A color map on texture unit 0"
    at_step 2
    map_highlight -120, 100, "colorMap.png"
    contents 100, -200,
        at_step 3
        +"A displacement map on texture unit 1"
    at_step 4
    map_highlight -120, -100, "displacementMap.png"
    at_step 5
    mapping
    locally
        at_step 6
        color "white"
        texture_unit 0
        texture "colorMap.png"
        texture_unit 1
        texture "displacementMap.png"
        result_highlight 400, 0
        displacement_mapping 100 * exp (-5 * (highest_step - smooth_step) ^ 2)
        plane 0, 0, 300, 300, 150, 150

page "Noise Mapping",
// ----------------------------------------------------------------------------
//    Add some noise on an objet
// ----------------------------------------------------------------------------
    background 1.0
    title
    contents 100, 0,
        at_step 1
        +"A color map on texture unit 0"
    at_step 2
    map_highlight -150, 100, "freeSky.jpg"
    contents 100, -200,
        at_step 3
        +"A noise map on texture unit 1"
    at_step 4
    map_highlight -150, -100, "noiseMap.jpg"
    at_step 5
    mapping
    at_step 6
    locally
        texture_unit 0
        texture "freeSky.jpg"
        texture_unit 1
        texture "noiseMap.jpg"
        result_highlight 400, 0
        noise_mapping 3 * sin time
        rectangle 0, 0, 300, 300

page "Sphere Mapping",
// ----------------------------------------------------------------------------
//   Simulate environment reflection with a sphere map
// ----------------------------------------------------------------------------
    background 1.0
    title
    contents 100, 0,
        at_step 1
        +"A color map on texture unit 0"
    at_step 2
    map_highlight -150, 100, "tiles.jpg"
    contents 100, -200,
        at_step 3
        +"A sphere map on texture unit 1"
    at_step 4
    map_highlight -150, -100, "sphereMap.jpg"
    at_step 5
    mapping
    at_step 6
    locally
        texture_unit 0
        texture "tiles.jpg"
        texture_unit 1
        texture "sphereMap.jpg"
        result_highlight 400, 0
        sphere_mapping 0.2
        sphere 0, 0, 0, 300


page "Cube Mapping",
// ----------------------------------------------------------------------------
//    Simulate environment reflection with a six-sided cube as the map shapeï»¿
// ----------------------------------------------------------------------------
    background 1.0
    title
    contents 100, 0,
        at_step 1
        +"A color map on texture unit 0"
    at_step 2
    map_highlight -150, 100, "tiles.jpg"
    contents 100, -200,
        at_step 3
        +"A cube map on texture unit 1"
    at_step 4
    locally
        // Transformation must be done before to apply the effect
        highlight -150, -100, factor (-150, -100), true
        color "white"
        cube_map 512,
            cube_map_flip false, false
            cube_map_face 0, "right.bmp"
            cube_map_face 1, "left.bmp"
            cube_map_face 2, "top.bmp"
            cube_map_face 3, "bottom.bmp"
            cube_map_face 4, "front.bmp"
            cube_map_face 5, "back.bmp"
        texture_transform
            scale 1, -1, 1
        cube 0, 0, 0, 100, 100, 100
    at_step 5
    mapping
    at_step 6
    locally
        texture_unit 0
        texture "tiles.jpg"
        texture_unit 1
        // Transformation must be done before to apply the effect
        result_highlight 400, 0
        cube_map 512,
            cube_map_flip false, false
            cube_map_face 0, "right.bmp"
            cube_map_face 1, "left.bmp"
            cube_map_face 2, "top.bmp"
            cube_map_face 3, "bottom.bmp"
            cube_map_face 4, "front.bmp"
            cube_map_face 5, "back.bmp"
        cube_mapping 0.3
        torus 0, 0, 0, 300, 300, 300, 40, 40, 0.5
