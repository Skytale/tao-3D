// ****************************************************************************
//  Rising.ddd                                                     Tao project
// ****************************************************************************
//
//   File Description:
//
//    Rising text from top or bottom.
//
//
//
//
//
//
//
//
// ****************************************************************************
// This document is released under the GNU General Public License.
// See http://www.gnu.org/copyleft/gpl.html and Matthew 25:22 for details
//  (C) 2011 Christophe de Dinechin <christophe@taodyne.com>
//  (C) 2011 Taodyne SAS
// ****************************************************************************

import Animate

// ============================================================================
//
//                                PAGE SAMPLE
//
// ============================================================================

page "Rising from top",
// ----------------------------------------------------------------------------
//    Poem rising from the top
// ----------------------------------------------------------------------------
    page_duration 15
    locally
        scale_background
        ztrans_background -10000
        color "white", 0.3
        image 0, 0, 2.3, 2.3, "paon.jpg"

    scale_contents
    Origin := 1000
    Ystart := 400.0
    Xcenter := -50.0
    rising_message with 0..8

// Only 9 lines on this page
rising_text 0 -> 
    bold
    text "Le Paon" en "The Peacock"
rising_text 1 -> text "Bleu, orange, vert et doré" en "Blue, orange, green and gold,"
rising_text 2 -> text "Avec sa queue en éventail derrière lui," en "With their tails fanning out behind them,"
rising_text 3 -> text "Comme une traine" en "Like a veil,"
rising_text 4 -> text "Jusqu'à ce qu'il la déploie en un arc de couleurs irisée," en "Until they lift them and an arch of colour evolves,"
rising_text 5 -> text "Grand, glamour et élégant quand il se pavane" en "Tall, glamorous and elegant when they strut,"
rising_text 6 -> text "Avec des yeux sur son plumage" en "With the eyes on their feathers,"
rising_text 7 -> text "Qui vous regardent alors que vous l'admirez avec étonnement." en "Watching you as you stare in amazement."
rising_text 8 -> 
    bold
    text "Chloe"


page "Rising from bottom",
// ----------------------------------------------------------------------------
//    Text rising from the bottom
// ----------------------------------------------------------------------------
    locally
        scale_background
        ztrans_background -10000
        color "white", 0.3
        image 0,0,2.3,2.3,"jardin1.jpg"

    scale_contents
    Origin := -1000
    Ystart := -200.0
    Xcenter := 300.0
    rising_message with 10..15
   

rising_text 10 -> +"Marronnier" en "Chestnut"
rising_text 11 -> +"Platane" en "Plane tree"
rising_text 12 -> +"Fleurs : " en "Flowers:"
rising_text 13 -> -"Tulipe" en "Tulip"
rising_text 14 -> -"Paquerette" en "Daisy"
rising_text 15 -> +"Pelouse" en "Grass"


// ============================================================================
//
//                                CONFIGURATION
//
// ============================================================================

// ----------------------------------------------------------------------------
//    Settable values at a glance
// ----------------------------------------------------------------------------


// Logical dimensions for the slide. You can put anything you want here,
// but the aspect ratio should match that of the background picture and be
// close to the aspect ratio of the screens you are going to use.
// This will be used to define the logical coordinates of anything that 
// follows "scale_contents".
slide_width -> 1920.0
slide_height -> 1200.0

// Coordinate of the first line center
Xcenter -> 0.0
Ystart -> 0.0

// Size of each line of text
Hline -> 60
Wline -> 1500

// Maximum number of line per page.
// Each page must start with a multiple of this number.
// Page 0 got lines 0*MaxLine to 1*MaxLine - 1
// Page N got lines N*MaxLine to (N+1)*Maxline - 1
MaxLine -> 10

// Point where the lines appears.
// 1000 is the top of the window and -1000 is the bottom.
Origin -> 0

// Speed of lines
Speed -> 2


// ----------------------------------------------------------------------------
//    DECLARATION
// ----------------------------------------------------------------------------
// This value will be set by the template.
// Use it in read mode only to progressively show something
alpha_fadein -> 0.0


// ----------------------------------------------------------------------------
//    BULLETS
// ----------------------------------------------------------------------------
// Change those drawing to change bullet level one and two appearance

draw_bullet 1 ->
    //color "black", alpha_fadein
    translate -15, 15, 20
    circle 0, 0, 8

draw_bullet 2 ->
    //color "blue", alpha_fadein
    translate -20, 15, 20
    rotatez -50 * time
    star_polygon 0, 0, 20, 20, 5, 3


// ============================================================================
//
//                                FUNCTIONS
//
// ============================================================================

rising_message N:integer ->
// ----------------------------------------------------------------------------
//   Display a message for the first page
// ----------------------------------------------------------------------------
    locally
        rising_adjust A:real, N:integer ->
            translate Xcenter, (Ystart - Origin) * sin A - Hline * min(Speed*page_time, N) + Origin, -5500 * cos A
        rising_adjust min((Speed*page_time - N mod MaxLine) * pi / 16, pi/2), N mod MaxLine
        alpha_fadein :=  0.8 * fade_in(page_time, 3*N mod (3*MaxLine) + 2)
        color "black", alpha_fadein
        font "Verdana", 40
        text_box 0, 0, Wline, Hline,
            align 0
            vertical_align 0.5
            rising_text N

+X:text ->
// ----------------------------------------------------------------------------
//   Additional line of text
// ----------------------------------------------------------------------------
    font "Verdana", 50, bold
    paragraph_break
    color "black",  alpha_fadein
    //color 0.92, 0.38, 0.09,  alpha_fadein
    line_color "white", alpha_fadein
    line_width 1
    anchor
        draw_bullet 1
    text X

-X:text ->
// ----------------------------------------------------------------------------
//   Second level bullet
// ----------------------------------------------------------------------------
    font "Arial", 40, bold
    margins 80, 0
    paragraph_space 0, 15
    paragraph_break
    color "black",  alpha_fadein
    //color 0.92, 0.38, 0.09,  alpha_fadein
    line_color "white", alpha_fadein
    line_width 1
    anchor
        draw_bullet 2
    text X


// ============================================================================
// 
//   Language management
// 
// ============================================================================

lang -> "fr"
Fr:text en En:text -> if lang = "en" then En else Fr
En:text fr Fr:text -> if lang = "fr" then Fr else En
french Body -> if lang = "fr" then Body 
english Body -> if lang = "en" then Body 
language L:text -> lang := L; refresh 0.1

// ============================================================================
// 
//    Keys for the presentations in this directory
// 
// ============================================================================

presentation_eye_distance -> 30
key "e" -> language "en"
key "f" -> language "fr"

// ============================================================================
// 
//    General
// 
// ============================================================================

// Two ways to scale contents when resizing the window :
// For background pictures, we'd rather not see some white around them,
// so we scale to crop the picture ("max").
// For contents, on the other hand, we want to keep everything visible, so
// we scale to fit the contents ("min").
scale3 S:real -> scale S, S, S
background_scale -> max(window_width/slide_width, window_height/slide_height)
contents_scale -> min(window_width/slide_width, window_height/slide_height)
scale_background -> scale3 background_scale
scale_contents -> scale3 contents_scale

// Z translation without change in dimensions
ztrans_contents Z:real ->
    Z0 -> 6000.0
    Z0 := camera_position at 3
    translatez Z/contents_scale
    scale3 (Z0-Z)/Z0

ztrans_background Z:real ->
    Z0 -> 6000.0
    Z0 := camera_position at 3
    translatez Z/background_scale
    scale3 (Z0-Z)/Z0

