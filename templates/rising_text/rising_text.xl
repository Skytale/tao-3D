// ****************************************************************************
//  rising_text.xl                                                  Tao project
// ****************************************************************************
//
//   File Description:
//
//    Functions to make text rising from top or bottom.
//
//
//
//
//
//
//
//
// ****************************************************************************
// Copyright Taodyne SAS, 2011
// Contributors:
//   Catherine Burvelle <cathy@taodyne.com>
//   Christophe de Dinechin <christophe@taodyne.com>
//
// <contact@taodyne.com>
//
// This software is a computer program whose purpose is to serve as a
// document template for the Tao Presentations application.
//
// This software is governed by the CeCILL-B license under French law and
// abiding by the rules of distribution of free software.  You can  use,
// modify and/ or redistribute the software under the terms of the CeCILL-B
// license as circulated by CEA, CNRS and INRIA at the following URL
// "http://www.cecill.info".
//
// As a counterpart to the access to the source code and  rights to copy,
// modify and redistribute granted by the license, users are provided only
// with a limited warranty  and the software's author,  the holder of the
// economic rights,  and the successive licensors  have only  limited
// liability.
//
// In this respect, the user's attention is drawn to the risks associated
// with loading,  using,  modifying and/or developing or reproducing the
// software by the user in light of its specific status of free software,
// that may mean  that it is complicated to manipulate,  and  that  also
// therefore means  that it is reserved for developers  and  experienced
// professionals having in-depth computer knowledge. Users are therefore
// encouraged to load and test the software's suitability as regards their
// requirements in conditions enabling the security of their systems and/or
// data to be ensured and,  more generally, to use and operate it in the
// same conditions as regards security.
//
// The fact that you are presently reading this means that you have had
// knowledge of the CeCILL-B license and that you accept its terms.
// ****************************************************************************

import Animate

// ============================================================================
//
//                                CONFIGURATION
//
// ============================================================================

// ----------------------------------------------------------------------------
//    Settable values at a glance
// ----------------------------------------------------------------------------


// Logical dimensions for the slide. You can put anything you want here,
// but the aspect ratio should match that of the background picture and be
// close to the aspect ratio of the screens you are going to use.
// This will be used to define the logical coordinates of anything that
// follows "scale_contents".
slide_width -> 1920.0
slide_height -> 1200.0

// Coordinate of the first line center
Xcenter -> 0.0
Ystart -> 0.0

// Size of each line of text
Hline -> 60
Wline -> 1500

// Maximum number of line per page.
// Each page must start with a multiple of this number.
// Page 0 got lines 0*MaxLine to 1*MaxLine - 1
// Page N got lines N*MaxLine to (N+1)*Maxline - 1
MaxLine -> 10

// Point where the lines appears.
// 1000 is the top of the window and -1000 is the bottom.
Origin -> 0

// Speed of lines
Speed -> 2


// ----------------------------------------------------------------------------
//    DECLARATION
// ----------------------------------------------------------------------------
// This value will be set by the template.
// Use it in read mode only to progressively show something
alpha_fadein -> 0.0


// ----------------------------------------------------------------------------
//    BULLETS
// ----------------------------------------------------------------------------
// Change those drawing to change bullet level one and two appearance

draw_bullet 1 ->
    //color "black", alpha_fadein
    translate -15, 15, 20
    circle 0, 0, 8

draw_bullet 2 ->
    //color "blue", alpha_fadein
    translate -20, 15, 20
    rotatez -50 * time
    star_polygon 0, 0, 20, 20, 5, 3


// ============================================================================
//
//                                FUNCTIONS
//
// ============================================================================

rising_message N:integer ->
// ----------------------------------------------------------------------------
//   Display a message for the first page
// ----------------------------------------------------------------------------
    locally
        rising_adjust A:real, N:integer ->
            translate Xcenter, (Ystart - Origin) * sin A - Hline * min(Speed*page_time, N) + Origin, -5500 * cos A
        rising_adjust min((Speed*page_time - N mod MaxLine) * pi / 16, pi/2), N mod MaxLine
        alpha_fadein :=  0.8 * fade_in(page_time, 3*N mod (3*MaxLine) + 2)
        color "black", alpha_fadein
        font "Verdana", 40
        text_box 0, 0, Wline, Hline,
            align 0
            vertical_align 0.5
            rising_text N

+X:text ->
// ----------------------------------------------------------------------------
//   Additional line of text
// ----------------------------------------------------------------------------
    font "Verdana", 50, bold
    paragraph_break
    color "black",  alpha_fadein
    //color 0.92, 0.38, 0.09,  alpha_fadein
    line_color "white", alpha_fadein
    line_width 1
    anchor
        draw_bullet 1
    text X

-X:text ->
// ----------------------------------------------------------------------------
//   Second level bullet
// ----------------------------------------------------------------------------
    font "Arial", 40, bold
    margins 80, 0
    paragraph_space 0, 15
    paragraph_break
    color "black",  alpha_fadein
    //color 0.92, 0.38, 0.09,  alpha_fadein
    line_color "white", alpha_fadein
    line_width 1
    anchor
        draw_bullet 2
    text X


// ============================================================================
//
//   Language management
//
// ============================================================================

LANG -> ""
lang -> if LANG = "" then tao_language else LANG
Fr:text en En:text -> if lang = "en" then En else Fr
En:text fr Fr:text -> if lang = "fr" then Fr else En
french Body -> if lang = "fr" then Body
english Body -> if lang = "en" then Body
language L:text -> LANG := L; refresh 0.1

// ============================================================================
//
//    Keys for the presentations in this directory
//
// ============================================================================

presentation_eye_distance -> 30
key "e" -> language "en"
key "f" -> language "fr"

// ============================================================================
//
//    General
//
// ============================================================================

// Two ways to scale contents when resizing the window :
// For background pictures, we'd rather not see some white around them,
// so we scale to crop the picture ("max").
// For contents, on the other hand, we want to keep everything visible, so
// we scale to fit the contents ("min").
scale3 S:real -> scale S, S, S
background_scale -> max(window_width/slide_width, window_height/slide_height)
contents_scale -> min(window_width/slide_width, window_height/slide_height)
scale_background -> scale3 background_scale
scale_contents -> scale3 contents_scale

// Z translation without change in dimensions
ztrans_contents Z:real ->
    Z0 -> 6000.0
    Z0 := camera_position at 3
    translatez Z/contents_scale
    scale3 (Z0-Z)/Z0

ztrans_background Z:real ->
    Z0 -> 6000.0
    Z0 := camera_position at 3
    translatez Z/background_scale
    scale3 (Z0-Z)/Z0

