// ****************************************************************************
//  pythagorean.ddd                                                 Tao project
// ****************************************************************************
//
//   File Description:
//
//       Animated "proof" of the Pythagorean theorem.
//
//
//
//
//
//
//
//
// ****************************************************************************
// Copyright Taodyne SAS, 2011
// Contributors:
//   Jerome Forissier <jerome@taodyne.com>
//   Baptiste Soulisse <baptiste.soulisse@taodyne.com>
//
// <contact@taodyne.com>
//
// This software is a computer program whose purpose is to serve as a
// document template for the Tao Presentations application.
//
// This software is governed by the CeCILL license under French law and
// abiding by the rules of distribution of free software.  You can  use,
// modify and/ or redistribute the software under the terms of the CeCILL
// license as circulated by CEA, CNRS and INRIA at the following URL
// "http://www.cecill.info".
//
// As a counterpart to the access to the source code and  rights to copy,
// modify and redistribute granted by the license, users are provided only
// with a limited warranty  and the software's author,  the holder of the
// economic rights,  and the successive licensors  have only  limited
// liability.
//
// In this respect, the user's attention is drawn to the risks associated
// with loading,  using,  modifying and/or developing or reproducing the
// software by the user in light of its specific status of free software,
// that may mean  that it is complicated to manipulate,  and  that  also
// therefore means  that it is reserved for developers  and  experienced
// professionals having in-depth computer knowledge. Users are therefore
// encouraged to load and test the software's suitability as regards their
// requirements in conditions enabling the security of their systems and/or
// data to be ensured and,  more generally, to use and operate it in the
// same conditions as regards security.
//
// The fact that you are presently reading this means that you have had
// knowledge of the CeCILL license and that you accept its terms.
// ****************************************************************************


// ============================================================================
//
//                             GLOBAL SETTINGS
//
// ============================================================================


min x, y -> if x < y then x else y

S -> min window_height, window_width
a -> S * 30%
b -> S * 70%
A -> 0.0
B -> 0.0
C -> 0.0
now -> page_time mod C
fsize -> S*8%


// ============================================================================
//
//                                   PAGES
//
// ============================================================================


page "The Pythagorean theorem",
// -------------------------------------------------
//    Animated pythagorean theorem
// -------------------------------------------------
    pyth 0, S*10%, S*80%, 3, 4, 3
    H -> S*20%
    text_box 0, -S/2+H/2, S, H,
        line_width 0
        color "black"
        align_center
        vertical_align_center
        font "Old Standard TT/Italic"
        font_size H/3
        text "a² + b² = c²"


// ============================================================================
//
//                                 FUNCTIONS
//
// ============================================================================


pyth_init t1:real, t2:real, t3:real ->
// -------------------------------------------------
//    Initialize pythagorean theorem
// -------------------------------------------------
    A := t1 ; B := t1 + t2 ; C := t1 + t2 + t3

linear m:real, M:real ->
    if (now < A) then
        m
    else
        if (now > B) then
            M
        else
            m + (now - A) * (M - m)/(B - A)

triangle1 ->
// -------------------------------------------------
//    Draw first right triangle
// -------------------------------------------------
    locally
        translate -S/2 + a/2, a/2, 0
        rotatez -90
        right_triangle 0, 0, b, a

triangle2 ->
// -------------------------------------------------
//    Draw second right triangle
// -------------------------------------------------
    locally
        translate -a/2, -S/2 + a/2, 0
        right_triangle 0, 0, b, a 

triangle3 angle:real ->
// -------------------------------------------------
//    Draw third moving right triangle
// -------------------------------------------------
    locally
        translate S/2 - a, -S/2, 0
        rotatez angle + 90
        translate b/2, -a/2, 0
        right_triangle 0, 0, b, a

triangle4 angle:real ->
// -------------------------------------------------
//    Draw fourth moving right triangle
// -------------------------------------------------
    locally
        translate -S/2 + a, S/2, 0
        rotatez 180 - angle
        translate -b/2, a/2, 0
        right_triangle 0, 0, b, a

background_square ->
// -------------------------------------------------
//    Draw background square
// -------------------------------------------------
    locally
        color "gray"
        line_color "black"
        line_width 0
        rectangle 0, 0, S, S

triangles ->
// -------------------------------------------------
//    Draw all triangles
// -------------------------------------------------
    locally
        color 0, 0.4, 0.8, 1
        line_color "black"
        line_width 1
        triangle1
        triangle2
        triangle3 linear (0, 90)
        triangle4 linear (0, 90)

legend_c ->
// -------------------------------------------------
//   Set legend of side "c"
// -------------------------------------------------
    text_box 0, 0, S, S, 
        align_center
        vertical_align_center
        text "s = c²"

legend_a ->
// -------------------------------------------------
//   Set legend of side "a"
// -------------------------------------------------
    text_box (S-a)/2, -(S-a)/2, a, a, 
        align_center
        vertical_align_center
        text "s = a²"

legend_b ->
// -------------------------------------------------
//   Set legend of side "b"
// -------------------------------------------------
    text_box (S-b)/2, (S-b)/2, b, b, 
        align_center
        vertical_align_center
        text "s = b²"

line_ab ->
// -------------------------------------------------
//   Draw dividing line
// -------------------------------------------------
    locally
        line_color "black"
        line_width 1
        path
            move_to S/2-a, -S/2+a, 0
            line_relative a, 0, 0

legend ->
// -------------------------------------------------
//    Set all legends of the theorem
// -------------------------------------------------
    locally
        color "black"
        line_color "black"
        line_width 0
        font "Old Standard TT/Italic"
        font_size fsize 
        locally
            move_to -S/2 + 6, S/2 - b/2
            text "b"
            move_to -S/2 + 6, -S/2 + 0.8*a/2
            text "a"
            move_to -S/2 + b/2 - 0.6*fsize, -S/2 + a/2 - 0.6*fsize
            text "c"
        if now < A then
            legend_c
        else
            if now > B then
                legend_a
                legend_b
                line_ab

pyth x:real, y: real, w: real, t1:real, t2:real, t3:real ->
// -------------------------------------------------
//    Draw pythagorean theorem
// -------------------------------------------------
    locally
        pyth_init t1, t2, t3
        translate x, y, 0.0
        scale w/S, w/S, 1.0
        background_square
        triangles
        legend
